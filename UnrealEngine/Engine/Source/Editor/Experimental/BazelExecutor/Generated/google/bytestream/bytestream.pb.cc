//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//-V::568,590
#include "CoreMinimal.h"
#include "Misc/CoreMiscDefines.h"

THIRD_PARTY_INCLUDES_START
UE_PUSH_MACRO("TEXT")
#undef TEXT

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bytestream/bytestream.proto

#include "google/bytestream/bytestream.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace google {
namespace bytestream {
constexpr ReadRequest::ReadRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : resource_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , read_offset_(PROTOBUF_LONGLONG(0))
  , read_limit_(PROTOBUF_LONGLONG(0)){}
struct ReadRequestDefaultTypeInternal {
  constexpr ReadRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReadRequestDefaultTypeInternal() {}
  union {
    ReadRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReadRequestDefaultTypeInternal _ReadRequest_default_instance_;
constexpr ReadResponse::ReadResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ReadResponseDefaultTypeInternal {
  constexpr ReadResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReadResponseDefaultTypeInternal() {}
  union {
    ReadResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReadResponseDefaultTypeInternal _ReadResponse_default_instance_;
constexpr WriteRequest::WriteRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : resource_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , write_offset_(PROTOBUF_LONGLONG(0))
  , finish_write_(false){}
struct WriteRequestDefaultTypeInternal {
  constexpr WriteRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WriteRequestDefaultTypeInternal() {}
  union {
    WriteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WriteRequestDefaultTypeInternal _WriteRequest_default_instance_;
constexpr WriteResponse::WriteResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : committed_size_(PROTOBUF_LONGLONG(0)){}
struct WriteResponseDefaultTypeInternal {
  constexpr WriteResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WriteResponseDefaultTypeInternal() {}
  union {
    WriteResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WriteResponseDefaultTypeInternal _WriteResponse_default_instance_;
constexpr QueryWriteStatusRequest::QueryWriteStatusRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : resource_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct QueryWriteStatusRequestDefaultTypeInternal {
  constexpr QueryWriteStatusRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~QueryWriteStatusRequestDefaultTypeInternal() {}
  union {
    QueryWriteStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT QueryWriteStatusRequestDefaultTypeInternal _QueryWriteStatusRequest_default_instance_;
constexpr QueryWriteStatusResponse::QueryWriteStatusResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : committed_size_(PROTOBUF_LONGLONG(0))
  , complete_(false){}
struct QueryWriteStatusResponseDefaultTypeInternal {
  constexpr QueryWriteStatusResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~QueryWriteStatusResponseDefaultTypeInternal() {}
  union {
    QueryWriteStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT QueryWriteStatusResponseDefaultTypeInternal _QueryWriteStatusResponse_default_instance_;
}  // namespace bytestream
}  // namespace google
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_2fbytestream_2fbytestream_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_google_2fbytestream_2fbytestream_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_2fbytestream_2fbytestream_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_2fbytestream_2fbytestream_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::bytestream::ReadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::bytestream::ReadRequest, resource_name_),
  PROTOBUF_FIELD_OFFSET(::google::bytestream::ReadRequest, read_offset_),
  PROTOBUF_FIELD_OFFSET(::google::bytestream::ReadRequest, read_limit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::bytestream::ReadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::bytestream::ReadResponse, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::bytestream::WriteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::bytestream::WriteRequest, resource_name_),
  PROTOBUF_FIELD_OFFSET(::google::bytestream::WriteRequest, write_offset_),
  PROTOBUF_FIELD_OFFSET(::google::bytestream::WriteRequest, finish_write_),
  PROTOBUF_FIELD_OFFSET(::google::bytestream::WriteRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::bytestream::WriteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::bytestream::WriteResponse, committed_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::bytestream::QueryWriteStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::bytestream::QueryWriteStatusRequest, resource_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::bytestream::QueryWriteStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::bytestream::QueryWriteStatusResponse, committed_size_),
  PROTOBUF_FIELD_OFFSET(::google::bytestream::QueryWriteStatusResponse, complete_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::bytestream::ReadRequest)},
  { 8, -1, sizeof(::google::bytestream::ReadResponse)},
  { 14, -1, sizeof(::google::bytestream::WriteRequest)},
  { 23, -1, sizeof(::google::bytestream::WriteResponse)},
  { 29, -1, sizeof(::google::bytestream::QueryWriteStatusRequest)},
  { 35, -1, sizeof(::google::bytestream::QueryWriteStatusResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::bytestream::_ReadRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::bytestream::_ReadResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::bytestream::_WriteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::bytestream::_WriteResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::bytestream::_QueryWriteStatusRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::bytestream::_QueryWriteStatusResponse_default_instance_),
};

const char descriptor_table_protodef_google_2fbytestream_2fbytestream_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"google/bytestream/bytestream.proto\022\021go"
  "ogle.bytestream\"M\n\013ReadRequest\022\025\n\rresour"
  "ce_name\030\001 \001(\t\022\023\n\013read_offset\030\002 \001(\003\022\022\n\nre"
  "ad_limit\030\003 \001(\003\"\034\n\014ReadResponse\022\014\n\004data\030\n"
  " \001(\014\"_\n\014WriteRequest\022\025\n\rresource_name\030\001 "
  "\001(\t\022\024\n\014write_offset\030\002 \001(\003\022\024\n\014finish_writ"
  "e\030\003 \001(\010\022\014\n\004data\030\n \001(\014\"\'\n\rWriteResponse\022\026"
  "\n\016committed_size\030\001 \001(\003\"0\n\027QueryWriteStat"
  "usRequest\022\025\n\rresource_name\030\001 \001(\t\"D\n\030Quer"
  "yWriteStatusResponse\022\026\n\016committed_size\030\001"
  " \001(\003\022\020\n\010complete\030\002 \001(\0102\222\002\n\nByteStream\022I\n"
  "\004Read\022\036.google.bytestream.ReadRequest\032\037."
  "google.bytestream.ReadResponse0\001\022L\n\005Writ"
  "e\022\037.google.bytestream.WriteRequest\032 .goo"
  "gle.bytestream.WriteResponse(\001\022k\n\020QueryW"
  "riteStatus\022*.google.bytestream.QueryWrit"
  "eStatusRequest\032+.google.bytestream.Query"
  "WriteStatusResponseBe\n\025com.google.bytest"
  "reamB\017ByteStreamProtoZ;google.golang.org"
  "/genproto/googleapis/bytestream;bytestre"
  "amb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_2fbytestream_2fbytestream_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fbytestream_2fbytestream_2eproto = {
  false, false, 810, descriptor_table_protodef_google_2fbytestream_2fbytestream_2eproto, "google/bytestream/bytestream.proto", 
  &descriptor_table_google_2fbytestream_2fbytestream_2eproto_once, nullptr, 0, 6,
  schemas, file_default_instances, TableStruct_google_2fbytestream_2fbytestream_2eproto::offsets,
  file_level_metadata_google_2fbytestream_2fbytestream_2eproto, file_level_enum_descriptors_google_2fbytestream_2fbytestream_2eproto, file_level_service_descriptors_google_2fbytestream_2fbytestream_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_google_2fbytestream_2fbytestream_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fbytestream_2fbytestream_2eproto);
  return descriptor_table_google_2fbytestream_2fbytestream_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_google_2fbytestream_2fbytestream_2eproto(&descriptor_table_google_2fbytestream_2fbytestream_2eproto);
namespace google {
namespace bytestream {

// ===================================================================

class ReadRequest::_Internal {
 public:
};

ReadRequest::ReadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.bytestream.ReadRequest)
}
ReadRequest::ReadRequest(const ReadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  resource_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resource_name().empty()) {
    resource_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_resource_name(), 
      GetArena());
  }
  ::memcpy(&read_offset_, &from.read_offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&read_limit_) -
    reinterpret_cast<char*>(&read_offset_)) + sizeof(read_limit_));
  // @@protoc_insertion_point(copy_constructor:google.bytestream.ReadRequest)
}

void ReadRequest::SharedCtor() {
resource_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&read_offset_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&read_limit_) -
    reinterpret_cast<char*>(&read_offset_)) + sizeof(read_limit_));
}

ReadRequest::~ReadRequest() {
  // @@protoc_insertion_point(destructor:google.bytestream.ReadRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  resource_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReadRequest::ArenaDtor(void* object) {
  ReadRequest* _this = reinterpret_cast< ReadRequest* >(object);
  (void)_this;
}
void ReadRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.ReadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_name_.ClearToEmpty();
  ::memset(&read_offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&read_limit_) -
      reinterpret_cast<char*>(&read_offset_)) + sizeof(read_limit_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string resource_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_resource_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.bytestream.ReadRequest.resource_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 read_offset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          read_offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 read_limit = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          read_limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReadRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.ReadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_name().data(), static_cast<int>(this->_internal_resource_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.bytestream.ReadRequest.resource_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_resource_name(), target);
  }

  // int64 read_offset = 2;
  if (this->read_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_read_offset(), target);
  }

  // int64 read_limit = 3;
  if (this->read_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_read_limit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.ReadRequest)
  return target;
}

size_t ReadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.ReadRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_name());
  }

  // int64 read_offset = 2;
  if (this->read_offset() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_read_offset());
  }

  // int64 read_limit = 3;
  if (this->read_limit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_read_limit());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.ReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReadRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.ReadRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.ReadRequest)
    MergeFrom(*source);
  }
}

void ReadRequest::MergeFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.ReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resource_name().size() > 0) {
    _internal_set_resource_name(from._internal_resource_name());
  }
  if (from.read_offset() != 0) {
    _internal_set_read_offset(from._internal_read_offset());
  }
  if (from.read_limit() != 0) {
    _internal_set_read_limit(from._internal_read_limit());
  }
}

void ReadRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.ReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRequest::CopyFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.ReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRequest::IsInitialized() const {
  return true;
}

void ReadRequest::InternalSwap(ReadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  resource_name_.Swap(&other->resource_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReadRequest, read_limit_)
      + sizeof(ReadRequest::read_limit_)
      - PROTOBUF_FIELD_OFFSET(ReadRequest, read_offset_)>(
          reinterpret_cast<char*>(&read_offset_),
          reinterpret_cast<char*>(&other->read_offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReadResponse::_Internal {
 public:
};

ReadResponse::ReadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.bytestream.ReadResponse)
}
ReadResponse::ReadResponse(const ReadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:google.bytestream.ReadResponse)
}

void ReadResponse::SharedCtor() {
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReadResponse::~ReadResponse() {
  // @@protoc_insertion_point(destructor:google.bytestream.ReadResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReadResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReadResponse::ArenaDtor(void* object) {
  ReadResponse* _this = reinterpret_cast< ReadResponse* >(object);
  (void)_this;
}
void ReadResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.ReadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes data = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReadResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.ReadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 10;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        10, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.ReadResponse)
  return target;
}

size_t ReadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.ReadResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 10;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.ReadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReadResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.ReadResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.ReadResponse)
    MergeFrom(*source);
  }
}

void ReadResponse::MergeFrom(const ReadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.ReadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
}

void ReadResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.ReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadResponse::CopyFrom(const ReadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.ReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadResponse::IsInitialized() const {
  return true;
}

void ReadResponse::InternalSwap(ReadResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class WriteRequest::_Internal {
 public:
};

WriteRequest::WriteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.bytestream.WriteRequest)
}
WriteRequest::WriteRequest(const WriteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  resource_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resource_name().empty()) {
    resource_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_resource_name(), 
      GetArena());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArena());
  }
  ::memcpy(&write_offset_, &from.write_offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&finish_write_) -
    reinterpret_cast<char*>(&write_offset_)) + sizeof(finish_write_));
  // @@protoc_insertion_point(copy_constructor:google.bytestream.WriteRequest)
}

void WriteRequest::SharedCtor() {
resource_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&write_offset_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&finish_write_) -
    reinterpret_cast<char*>(&write_offset_)) + sizeof(finish_write_));
}

WriteRequest::~WriteRequest() {
  // @@protoc_insertion_point(destructor:google.bytestream.WriteRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WriteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  resource_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WriteRequest::ArenaDtor(void* object) {
  WriteRequest* _this = reinterpret_cast< WriteRequest* >(object);
  (void)_this;
}
void WriteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WriteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WriteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.WriteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_name_.ClearToEmpty();
  data_.ClearToEmpty();
  ::memset(&write_offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finish_write_) -
      reinterpret_cast<char*>(&write_offset_)) + sizeof(finish_write_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WriteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string resource_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_resource_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.bytestream.WriteRequest.resource_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 write_offset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          write_offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool finish_write = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          finish_write_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WriteRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.WriteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_name().data(), static_cast<int>(this->_internal_resource_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.bytestream.WriteRequest.resource_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_resource_name(), target);
  }

  // int64 write_offset = 2;
  if (this->write_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_write_offset(), target);
  }

  // bool finish_write = 3;
  if (this->finish_write() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_finish_write(), target);
  }

  // bytes data = 10;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        10, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.WriteRequest)
  return target;
}

size_t WriteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.WriteRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_name());
  }

  // bytes data = 10;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // int64 write_offset = 2;
  if (this->write_offset() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_write_offset());
  }

  // bool finish_write = 3;
  if (this->finish_write() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.WriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WriteRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.WriteRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.WriteRequest)
    MergeFrom(*source);
  }
}

void WriteRequest::MergeFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.WriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resource_name().size() > 0) {
    _internal_set_resource_name(from._internal_resource_name());
  }
  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.write_offset() != 0) {
    _internal_set_write_offset(from._internal_write_offset());
  }
  if (from.finish_write() != 0) {
    _internal_set_finish_write(from._internal_finish_write());
  }
}

void WriteRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.WriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteRequest::CopyFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.WriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteRequest::IsInitialized() const {
  return true;
}

void WriteRequest::InternalSwap(WriteRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  resource_name_.Swap(&other->resource_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WriteRequest, finish_write_)
      + sizeof(WriteRequest::finish_write_)
      - PROTOBUF_FIELD_OFFSET(WriteRequest, write_offset_)>(
          reinterpret_cast<char*>(&write_offset_),
          reinterpret_cast<char*>(&other->write_offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WriteRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class WriteResponse::_Internal {
 public:
};

WriteResponse::WriteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.bytestream.WriteResponse)
}
WriteResponse::WriteResponse(const WriteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  committed_size_ = from.committed_size_;
  // @@protoc_insertion_point(copy_constructor:google.bytestream.WriteResponse)
}

void WriteResponse::SharedCtor() {
committed_size_ = PROTOBUF_LONGLONG(0);
}

WriteResponse::~WriteResponse() {
  // @@protoc_insertion_point(destructor:google.bytestream.WriteResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WriteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void WriteResponse::ArenaDtor(void* object) {
  WriteResponse* _this = reinterpret_cast< WriteResponse* >(object);
  (void)_this;
}
void WriteResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WriteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WriteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.WriteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  committed_size_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WriteResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 committed_size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          committed_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WriteResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.WriteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 committed_size = 1;
  if (this->committed_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_committed_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.WriteResponse)
  return target;
}

size_t WriteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.WriteResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 committed_size = 1;
  if (this->committed_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_committed_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.WriteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WriteResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.WriteResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.WriteResponse)
    MergeFrom(*source);
  }
}

void WriteResponse::MergeFrom(const WriteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.WriteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.committed_size() != 0) {
    _internal_set_committed_size(from._internal_committed_size());
  }
}

void WriteResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.WriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteResponse::CopyFrom(const WriteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.WriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteResponse::IsInitialized() const {
  return true;
}

void WriteResponse::InternalSwap(WriteResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(committed_size_, other->committed_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WriteResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class QueryWriteStatusRequest::_Internal {
 public:
};

QueryWriteStatusRequest::QueryWriteStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.bytestream.QueryWriteStatusRequest)
}
QueryWriteStatusRequest::QueryWriteStatusRequest(const QueryWriteStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  resource_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resource_name().empty()) {
    resource_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_resource_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:google.bytestream.QueryWriteStatusRequest)
}

void QueryWriteStatusRequest::SharedCtor() {
resource_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

QueryWriteStatusRequest::~QueryWriteStatusRequest() {
  // @@protoc_insertion_point(destructor:google.bytestream.QueryWriteStatusRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QueryWriteStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  resource_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void QueryWriteStatusRequest::ArenaDtor(void* object) {
  QueryWriteStatusRequest* _this = reinterpret_cast< QueryWriteStatusRequest* >(object);
  (void)_this;
}
void QueryWriteStatusRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QueryWriteStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QueryWriteStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.QueryWriteStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryWriteStatusRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string resource_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_resource_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.bytestream.QueryWriteStatusRequest.resource_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QueryWriteStatusRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.QueryWriteStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_name().data(), static_cast<int>(this->_internal_resource_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.bytestream.QueryWriteStatusRequest.resource_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_resource_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.QueryWriteStatusRequest)
  return target;
}

size_t QueryWriteStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.QueryWriteStatusRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryWriteStatusRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.QueryWriteStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryWriteStatusRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QueryWriteStatusRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.QueryWriteStatusRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.QueryWriteStatusRequest)
    MergeFrom(*source);
  }
}

void QueryWriteStatusRequest::MergeFrom(const QueryWriteStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.QueryWriteStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resource_name().size() > 0) {
    _internal_set_resource_name(from._internal_resource_name());
  }
}

void QueryWriteStatusRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.QueryWriteStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryWriteStatusRequest::CopyFrom(const QueryWriteStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.QueryWriteStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryWriteStatusRequest::IsInitialized() const {
  return true;
}

void QueryWriteStatusRequest::InternalSwap(QueryWriteStatusRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  resource_name_.Swap(&other->resource_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryWriteStatusRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class QueryWriteStatusResponse::_Internal {
 public:
};

QueryWriteStatusResponse::QueryWriteStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.bytestream.QueryWriteStatusResponse)
}
QueryWriteStatusResponse::QueryWriteStatusResponse(const QueryWriteStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&committed_size_, &from.committed_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&complete_) -
    reinterpret_cast<char*>(&committed_size_)) + sizeof(complete_));
  // @@protoc_insertion_point(copy_constructor:google.bytestream.QueryWriteStatusResponse)
}

void QueryWriteStatusResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&committed_size_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&complete_) -
    reinterpret_cast<char*>(&committed_size_)) + sizeof(complete_));
}

QueryWriteStatusResponse::~QueryWriteStatusResponse() {
  // @@protoc_insertion_point(destructor:google.bytestream.QueryWriteStatusResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QueryWriteStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void QueryWriteStatusResponse::ArenaDtor(void* object) {
  QueryWriteStatusResponse* _this = reinterpret_cast< QueryWriteStatusResponse* >(object);
  (void)_this;
}
void QueryWriteStatusResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QueryWriteStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QueryWriteStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.QueryWriteStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&committed_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&complete_) -
      reinterpret_cast<char*>(&committed_size_)) + sizeof(complete_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryWriteStatusResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 committed_size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          committed_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool complete = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          complete_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QueryWriteStatusResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.QueryWriteStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 committed_size = 1;
  if (this->committed_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_committed_size(), target);
  }

  // bool complete = 2;
  if (this->complete() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_complete(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.QueryWriteStatusResponse)
  return target;
}

size_t QueryWriteStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.QueryWriteStatusResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 committed_size = 1;
  if (this->committed_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_committed_size());
  }

  // bool complete = 2;
  if (this->complete() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryWriteStatusResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.QueryWriteStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryWriteStatusResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QueryWriteStatusResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.QueryWriteStatusResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.QueryWriteStatusResponse)
    MergeFrom(*source);
  }
}

void QueryWriteStatusResponse::MergeFrom(const QueryWriteStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.QueryWriteStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.committed_size() != 0) {
    _internal_set_committed_size(from._internal_committed_size());
  }
  if (from.complete() != 0) {
    _internal_set_complete(from._internal_complete());
  }
}

void QueryWriteStatusResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.QueryWriteStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryWriteStatusResponse::CopyFrom(const QueryWriteStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.QueryWriteStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryWriteStatusResponse::IsInitialized() const {
  return true;
}

void QueryWriteStatusResponse::InternalSwap(QueryWriteStatusResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryWriteStatusResponse, complete_)
      + sizeof(QueryWriteStatusResponse::complete_)
      - PROTOBUF_FIELD_OFFSET(QueryWriteStatusResponse, committed_size_)>(
          reinterpret_cast<char*>(&committed_size_),
          reinterpret_cast<char*>(&other->committed_size_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryWriteStatusResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bytestream
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::bytestream::ReadRequest* Arena::CreateMaybeMessage< ::google::bytestream::ReadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::bytestream::ReadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::bytestream::ReadResponse* Arena::CreateMaybeMessage< ::google::bytestream::ReadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::bytestream::ReadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::bytestream::WriteRequest* Arena::CreateMaybeMessage< ::google::bytestream::WriteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::bytestream::WriteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::bytestream::WriteResponse* Arena::CreateMaybeMessage< ::google::bytestream::WriteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::bytestream::WriteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::bytestream::QueryWriteStatusRequest* Arena::CreateMaybeMessage< ::google::bytestream::QueryWriteStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::bytestream::QueryWriteStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::bytestream::QueryWriteStatusResponse* Arena::CreateMaybeMessage< ::google::bytestream::QueryWriteStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::bytestream::QueryWriteStatusResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

UE_POP_MACRO("TEXT")
THIRD_PARTY_INCLUDES_END
