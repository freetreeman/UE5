//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//-V::568,590
#include "CoreMinimal.h"
#include "Misc/CoreMiscDefines.h"

THIRD_PARTY_INCLUDES_START
UE_PUSH_MACRO("TEXT")
#undef TEXT

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/rpc/context/attribute_context.proto

#include "google/rpc/context/attribute_context.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace google {
namespace rpc {
namespace context {
constexpr AttributeContext_Peer_LabelsEntry_DoNotUse::AttributeContext_Peer_LabelsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct AttributeContext_Peer_LabelsEntry_DoNotUseDefaultTypeInternal {
  constexpr AttributeContext_Peer_LabelsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AttributeContext_Peer_LabelsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AttributeContext_Peer_LabelsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AttributeContext_Peer_LabelsEntry_DoNotUseDefaultTypeInternal _AttributeContext_Peer_LabelsEntry_DoNotUse_default_instance_;
constexpr AttributeContext_Peer::AttributeContext_Peer(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : labels_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , ip_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , principal_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , region_code_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , port_(PROTOBUF_LONGLONG(0)){}
struct AttributeContext_PeerDefaultTypeInternal {
  constexpr AttributeContext_PeerDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AttributeContext_PeerDefaultTypeInternal() {}
  union {
    AttributeContext_Peer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AttributeContext_PeerDefaultTypeInternal _AttributeContext_Peer_default_instance_;
constexpr AttributeContext_Api::AttributeContext_Api(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : service_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , operation_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , protocol_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , version_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AttributeContext_ApiDefaultTypeInternal {
  constexpr AttributeContext_ApiDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AttributeContext_ApiDefaultTypeInternal() {}
  union {
    AttributeContext_Api _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AttributeContext_ApiDefaultTypeInternal _AttributeContext_Api_default_instance_;
constexpr AttributeContext_Auth::AttributeContext_Auth(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : audiences_()
  , access_levels_()
  , principal_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , presenter_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , claims_(nullptr){}
struct AttributeContext_AuthDefaultTypeInternal {
  constexpr AttributeContext_AuthDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AttributeContext_AuthDefaultTypeInternal() {}
  union {
    AttributeContext_Auth _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AttributeContext_AuthDefaultTypeInternal _AttributeContext_Auth_default_instance_;
constexpr AttributeContext_Request_HeadersEntry_DoNotUse::AttributeContext_Request_HeadersEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct AttributeContext_Request_HeadersEntry_DoNotUseDefaultTypeInternal {
  constexpr AttributeContext_Request_HeadersEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AttributeContext_Request_HeadersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AttributeContext_Request_HeadersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AttributeContext_Request_HeadersEntry_DoNotUseDefaultTypeInternal _AttributeContext_Request_HeadersEntry_DoNotUse_default_instance_;
constexpr AttributeContext_Request::AttributeContext_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : headers_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , method_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , path_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , host_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , scheme_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , query_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , protocol_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , reason_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , time_(nullptr)
  , auth_(nullptr)
  , size_(PROTOBUF_LONGLONG(0)){}
struct AttributeContext_RequestDefaultTypeInternal {
  constexpr AttributeContext_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AttributeContext_RequestDefaultTypeInternal() {}
  union {
    AttributeContext_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AttributeContext_RequestDefaultTypeInternal _AttributeContext_Request_default_instance_;
constexpr AttributeContext_Response_HeadersEntry_DoNotUse::AttributeContext_Response_HeadersEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct AttributeContext_Response_HeadersEntry_DoNotUseDefaultTypeInternal {
  constexpr AttributeContext_Response_HeadersEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AttributeContext_Response_HeadersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AttributeContext_Response_HeadersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AttributeContext_Response_HeadersEntry_DoNotUseDefaultTypeInternal _AttributeContext_Response_HeadersEntry_DoNotUse_default_instance_;
constexpr AttributeContext_Response::AttributeContext_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : headers_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , time_(nullptr)
  , code_(PROTOBUF_LONGLONG(0))
  , size_(PROTOBUF_LONGLONG(0)){}
struct AttributeContext_ResponseDefaultTypeInternal {
  constexpr AttributeContext_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AttributeContext_ResponseDefaultTypeInternal() {}
  union {
    AttributeContext_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AttributeContext_ResponseDefaultTypeInternal _AttributeContext_Response_default_instance_;
constexpr AttributeContext_Resource_LabelsEntry_DoNotUse::AttributeContext_Resource_LabelsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct AttributeContext_Resource_LabelsEntry_DoNotUseDefaultTypeInternal {
  constexpr AttributeContext_Resource_LabelsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AttributeContext_Resource_LabelsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AttributeContext_Resource_LabelsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AttributeContext_Resource_LabelsEntry_DoNotUseDefaultTypeInternal _AttributeContext_Resource_LabelsEntry_DoNotUse_default_instance_;
constexpr AttributeContext_Resource::AttributeContext_Resource(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : labels_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , service_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AttributeContext_ResourceDefaultTypeInternal {
  constexpr AttributeContext_ResourceDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AttributeContext_ResourceDefaultTypeInternal() {}
  union {
    AttributeContext_Resource _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AttributeContext_ResourceDefaultTypeInternal _AttributeContext_Resource_default_instance_;
constexpr AttributeContext::AttributeContext(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : extensions_()
  , source_(nullptr)
  , destination_(nullptr)
  , request_(nullptr)
  , response_(nullptr)
  , resource_(nullptr)
  , api_(nullptr)
  , origin_(nullptr){}
struct AttributeContextDefaultTypeInternal {
  constexpr AttributeContextDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AttributeContextDefaultTypeInternal() {}
  union {
    AttributeContext _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AttributeContextDefaultTypeInternal _AttributeContext_default_instance_;
}  // namespace context
}  // namespace rpc
}  // namespace google
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_2frpc_2fcontext_2fattribute_5fcontext_2eproto[11];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_google_2frpc_2fcontext_2fattribute_5fcontext_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_2frpc_2fcontext_2fattribute_5fcontext_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_2frpc_2fcontext_2fattribute_5fcontext_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Peer_LabelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Peer_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Peer_LabelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Peer_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Peer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Peer, ip_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Peer, port_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Peer, labels_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Peer, principal_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Peer, region_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Api, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Api, service_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Api, operation_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Api, protocol_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Api, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Auth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Auth, principal_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Auth, audiences_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Auth, presenter_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Auth, claims_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Auth, access_levels_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Request_HeadersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Request_HeadersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Request_HeadersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Request_HeadersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Request, id_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Request, method_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Request, headers_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Request, path_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Request, host_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Request, scheme_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Request, query_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Request, time_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Request, size_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Request, protocol_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Request, reason_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Request, auth_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Response_HeadersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Response_HeadersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Response_HeadersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Response_HeadersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Response, code_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Response, size_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Response, headers_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Response, time_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Resource_LabelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Resource_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Resource_LabelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Resource_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Resource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Resource, service_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Resource, name_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Resource, type_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext_Resource, labels_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext, origin_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext, source_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext, destination_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext, request_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext, response_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext, resource_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext, api_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::context::AttributeContext, extensions_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::google::rpc::context::AttributeContext_Peer_LabelsEntry_DoNotUse)},
  { 9, -1, sizeof(::google::rpc::context::AttributeContext_Peer)},
  { 19, -1, sizeof(::google::rpc::context::AttributeContext_Api)},
  { 28, -1, sizeof(::google::rpc::context::AttributeContext_Auth)},
  { 38, 45, sizeof(::google::rpc::context::AttributeContext_Request_HeadersEntry_DoNotUse)},
  { 47, -1, sizeof(::google::rpc::context::AttributeContext_Request)},
  { 64, 71, sizeof(::google::rpc::context::AttributeContext_Response_HeadersEntry_DoNotUse)},
  { 73, -1, sizeof(::google::rpc::context::AttributeContext_Response)},
  { 82, 89, sizeof(::google::rpc::context::AttributeContext_Resource_LabelsEntry_DoNotUse)},
  { 91, -1, sizeof(::google::rpc::context::AttributeContext_Resource)},
  { 100, -1, sizeof(::google::rpc::context::AttributeContext)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::rpc::context::_AttributeContext_Peer_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::rpc::context::_AttributeContext_Peer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::rpc::context::_AttributeContext_Api_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::rpc::context::_AttributeContext_Auth_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::rpc::context::_AttributeContext_Request_HeadersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::rpc::context::_AttributeContext_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::rpc::context::_AttributeContext_Response_HeadersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::rpc::context::_AttributeContext_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::rpc::context::_AttributeContext_Resource_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::rpc::context::_AttributeContext_Resource_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::rpc::context::_AttributeContext_default_instance_),
};

const char descriptor_table_protodef_google_2frpc_2fcontext_2fattribute_5fcontext_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n*google/rpc/context/attribute_context.p"
  "roto\022\022google.rpc.context\032\031google/protobu"
  "f/any.proto\032\034google/protobuf/struct.prot"
  "o\032\037google/protobuf/timestamp.proto\"\360\014\n\020A"
  "ttributeContext\0229\n\006origin\030\007 \001(\0132).google"
  ".rpc.context.AttributeContext.Peer\0229\n\006so"
  "urce\030\001 \001(\0132).google.rpc.context.Attribut"
  "eContext.Peer\022>\n\013destination\030\002 \001(\0132).goo"
  "gle.rpc.context.AttributeContext.Peer\022=\n"
  "\007request\030\003 \001(\0132,.google.rpc.context.Attr"
  "ibuteContext.Request\022\?\n\010response\030\004 \001(\0132-"
  ".google.rpc.context.AttributeContext.Res"
  "ponse\022\?\n\010resource\030\005 \001(\0132-.google.rpc.con"
  "text.AttributeContext.Resource\0225\n\003api\030\006 "
  "\001(\0132(.google.rpc.context.AttributeContex"
  "t.Api\022(\n\nextensions\030\010 \003(\0132\024.google.proto"
  "buf.Any\032\276\001\n\004Peer\022\n\n\002ip\030\001 \001(\t\022\014\n\004port\030\002 \001"
  "(\003\022E\n\006labels\030\006 \003(\01325.google.rpc.context."
  "AttributeContext.Peer.LabelsEntry\022\021\n\tpri"
  "ncipal\030\007 \001(\t\022\023\n\013region_code\030\010 \001(\t\032-\n\013Lab"
  "elsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001"
  "\032L\n\003Api\022\017\n\007service\030\001 \001(\t\022\021\n\toperation\030\002 "
  "\001(\t\022\020\n\010protocol\030\003 \001(\t\022\017\n\007version\030\004 \001(\t\032\177"
  "\n\004Auth\022\021\n\tprincipal\030\001 \001(\t\022\021\n\taudiences\030\002"
  " \003(\t\022\021\n\tpresenter\030\003 \001(\t\022\'\n\006claims\030\004 \001(\0132"
  "\027.google.protobuf.Struct\022\025\n\raccess_level"
  "s\030\005 \003(\t\032\357\002\n\007Request\022\n\n\002id\030\001 \001(\t\022\016\n\006metho"
  "d\030\002 \001(\t\022J\n\007headers\030\003 \003(\01329.google.rpc.co"
  "ntext.AttributeContext.Request.HeadersEn"
  "try\022\014\n\004path\030\004 \001(\t\022\014\n\004host\030\005 \001(\t\022\016\n\006schem"
  "e\030\006 \001(\t\022\r\n\005query\030\007 \001(\t\022(\n\004time\030\t \001(\0132\032.g"
  "oogle.protobuf.Timestamp\022\014\n\004size\030\n \001(\003\022\020"
  "\n\010protocol\030\013 \001(\t\022\016\n\006reason\030\014 \001(\t\0227\n\004auth"
  "\030\r \001(\0132).google.rpc.context.AttributeCon"
  "text.Auth\032.\n\014HeadersEntry\022\013\n\003key\030\001 \001(\t\022\r"
  "\n\005value\030\002 \001(\t:\0028\001\032\315\001\n\010Response\022\014\n\004code\030\001"
  " \001(\003\022\014\n\004size\030\002 \001(\003\022K\n\007headers\030\003 \003(\0132:.go"
  "ogle.rpc.context.AttributeContext.Respon"
  "se.HeadersEntry\022(\n\004time\030\004 \001(\0132\032.google.p"
  "rotobuf.Timestamp\032.\n\014HeadersEntry\022\013\n\003key"
  "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032\261\001\n\010Resource\022\017"
  "\n\007service\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\014\n\004type\030\003 "
  "\001(\t\022I\n\006labels\030\004 \003(\01329.google.rpc.context"
  ".AttributeContext.Resource.LabelsEntry\032-"
  "\n\013LabelsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001("
  "\t:\0028\001B\213\001\n\026com.google.rpc.contextB\025Attrib"
  "uteContextProtoP\001ZUgoogle.golang.org/gen"
  "proto/googleapis/rpc/context/attribute_c"
  "ontext;attribute_context\370\001\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_google_2frpc_2fcontext_2fattribute_5fcontext_2eproto_deps[3] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_2frpc_2fcontext_2fattribute_5fcontext_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2frpc_2fcontext_2fattribute_5fcontext_2eproto = {
  false, false, 1955, descriptor_table_protodef_google_2frpc_2fcontext_2fattribute_5fcontext_2eproto, "google/rpc/context/attribute_context.proto", 
  &descriptor_table_google_2frpc_2fcontext_2fattribute_5fcontext_2eproto_once, descriptor_table_google_2frpc_2fcontext_2fattribute_5fcontext_2eproto_deps, 3, 11,
  schemas, file_default_instances, TableStruct_google_2frpc_2fcontext_2fattribute_5fcontext_2eproto::offsets,
  file_level_metadata_google_2frpc_2fcontext_2fattribute_5fcontext_2eproto, file_level_enum_descriptors_google_2frpc_2fcontext_2fattribute_5fcontext_2eproto, file_level_service_descriptors_google_2frpc_2fcontext_2fattribute_5fcontext_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_google_2frpc_2fcontext_2fattribute_5fcontext_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2frpc_2fcontext_2fattribute_5fcontext_2eproto);
  return descriptor_table_google_2frpc_2fcontext_2fattribute_5fcontext_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_google_2frpc_2fcontext_2fattribute_5fcontext_2eproto(&descriptor_table_google_2frpc_2fcontext_2fattribute_5fcontext_2eproto);
namespace google {
namespace rpc {
namespace context {

// ===================================================================

AttributeContext_Peer_LabelsEntry_DoNotUse::AttributeContext_Peer_LabelsEntry_DoNotUse() {}
AttributeContext_Peer_LabelsEntry_DoNotUse::AttributeContext_Peer_LabelsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void AttributeContext_Peer_LabelsEntry_DoNotUse::MergeFrom(const AttributeContext_Peer_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata AttributeContext_Peer_LabelsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void AttributeContext_Peer_LabelsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class AttributeContext_Peer::_Internal {
 public:
};

AttributeContext_Peer::AttributeContext_Peer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  labels_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.rpc.context.AttributeContext.Peer)
}
AttributeContext_Peer::AttributeContext_Peer(const AttributeContext_Peer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ip(), 
      GetArena());
  }
  principal_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_principal().empty()) {
    principal_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_principal(), 
      GetArena());
  }
  region_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_region_code().empty()) {
    region_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_region_code(), 
      GetArena());
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:google.rpc.context.AttributeContext.Peer)
}

void AttributeContext_Peer::SharedCtor() {
ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
principal_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
region_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
port_ = PROTOBUF_LONGLONG(0);
}

AttributeContext_Peer::~AttributeContext_Peer() {
  // @@protoc_insertion_point(destructor:google.rpc.context.AttributeContext.Peer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AttributeContext_Peer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  principal_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  region_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AttributeContext_Peer::ArenaDtor(void* object) {
  AttributeContext_Peer* _this = reinterpret_cast< AttributeContext_Peer* >(object);
  (void)_this;
}
void AttributeContext_Peer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AttributeContext_Peer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AttributeContext_Peer::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.context.AttributeContext.Peer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  ip_.ClearToEmpty();
  principal_.ClearToEmpty();
  region_code_.ClearToEmpty();
  port_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AttributeContext_Peer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Peer.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> labels = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&labels_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // string principal = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_principal();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Peer.principal"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string region_code = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_region_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Peer.region_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AttributeContext_Peer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.context.AttributeContext.Peer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Peer.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  // int64 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_port(), target);
  }

  // map<string, string> labels = 6;
  if (!this->_internal_labels().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Peer.LabelsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Peer.LabelsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_labels().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_labels().begin();
          it != this->_internal_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = AttributeContext_Peer_LabelsEntry_DoNotUse::Funcs::InternalSerialize(6, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_labels().begin();
          it != this->_internal_labels().end(); ++it) {
        target = AttributeContext_Peer_LabelsEntry_DoNotUse::Funcs::InternalSerialize(6, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string principal = 7;
  if (this->principal().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_principal().data(), static_cast<int>(this->_internal_principal().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Peer.principal");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_principal(), target);
  }

  // string region_code = 8;
  if (this->region_code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_region_code().data(), static_cast<int>(this->_internal_region_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Peer.region_code");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_region_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.context.AttributeContext.Peer)
  return target;
}

size_t AttributeContext_Peer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.context.AttributeContext.Peer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> labels = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_labels_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_labels().begin();
      it != this->_internal_labels().end(); ++it) {
    total_size += AttributeContext_Peer_LabelsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // string principal = 7;
  if (this->principal().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_principal());
  }

  // string region_code = 8;
  if (this->region_code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_region_code());
  }

  // int64 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_port());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttributeContext_Peer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.context.AttributeContext.Peer)
  GOOGLE_DCHECK_NE(&from, this);
  const AttributeContext_Peer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AttributeContext_Peer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.context.AttributeContext.Peer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.context.AttributeContext.Peer)
    MergeFrom(*source);
  }
}

void AttributeContext_Peer::MergeFrom(const AttributeContext_Peer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.context.AttributeContext.Peer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
  if (from.principal().size() > 0) {
    _internal_set_principal(from._internal_principal());
  }
  if (from.region_code().size() > 0) {
    _internal_set_region_code(from._internal_region_code());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
}

void AttributeContext_Peer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.context.AttributeContext.Peer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeContext_Peer::CopyFrom(const AttributeContext_Peer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.context.AttributeContext.Peer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttributeContext_Peer::IsInitialized() const {
  return true;
}

void AttributeContext_Peer::InternalSwap(AttributeContext_Peer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  labels_.Swap(&other->labels_);
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  principal_.Swap(&other->principal_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  region_code_.Swap(&other->region_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(port_, other->port_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AttributeContext_Peer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AttributeContext_Api::_Internal {
 public:
};

AttributeContext_Api::AttributeContext_Api(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.rpc.context.AttributeContext.Api)
}
AttributeContext_Api::AttributeContext_Api(const AttributeContext_Api& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  service_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_service().empty()) {
    service_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_service(), 
      GetArena());
  }
  operation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_operation().empty()) {
    operation_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_operation(), 
      GetArena());
  }
  protocol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_protocol().empty()) {
    protocol_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_protocol(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.context.AttributeContext.Api)
}

void AttributeContext_Api::SharedCtor() {
service_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
operation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
protocol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AttributeContext_Api::~AttributeContext_Api() {
  // @@protoc_insertion_point(destructor:google.rpc.context.AttributeContext.Api)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AttributeContext_Api::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  service_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  operation_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  protocol_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AttributeContext_Api::ArenaDtor(void* object) {
  AttributeContext_Api* _this = reinterpret_cast< AttributeContext_Api* >(object);
  (void)_this;
}
void AttributeContext_Api::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AttributeContext_Api::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AttributeContext_Api::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.context.AttributeContext.Api)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_.ClearToEmpty();
  operation_.ClearToEmpty();
  protocol_.ClearToEmpty();
  version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AttributeContext_Api::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string service = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_service();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Api.service"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string operation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_operation();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Api.operation"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string protocol = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_protocol();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Api.protocol"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Api.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AttributeContext_Api::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.context.AttributeContext.Api)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service = 1;
  if (this->service().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service().data(), static_cast<int>(this->_internal_service().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Api.service");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service(), target);
  }

  // string operation = 2;
  if (this->operation().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_operation().data(), static_cast<int>(this->_internal_operation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Api.operation");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_operation(), target);
  }

  // string protocol = 3;
  if (this->protocol().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_protocol().data(), static_cast<int>(this->_internal_protocol().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Api.protocol");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_protocol(), target);
  }

  // string version = 4;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Api.version");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.context.AttributeContext.Api)
  return target;
}

size_t AttributeContext_Api::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.context.AttributeContext.Api)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service = 1;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service());
  }

  // string operation = 2;
  if (this->operation().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_operation());
  }

  // string protocol = 3;
  if (this->protocol().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_protocol());
  }

  // string version = 4;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttributeContext_Api::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.context.AttributeContext.Api)
  GOOGLE_DCHECK_NE(&from, this);
  const AttributeContext_Api* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AttributeContext_Api>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.context.AttributeContext.Api)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.context.AttributeContext.Api)
    MergeFrom(*source);
  }
}

void AttributeContext_Api::MergeFrom(const AttributeContext_Api& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.context.AttributeContext.Api)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service().size() > 0) {
    _internal_set_service(from._internal_service());
  }
  if (from.operation().size() > 0) {
    _internal_set_operation(from._internal_operation());
  }
  if (from.protocol().size() > 0) {
    _internal_set_protocol(from._internal_protocol());
  }
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
}

void AttributeContext_Api::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.context.AttributeContext.Api)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeContext_Api::CopyFrom(const AttributeContext_Api& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.context.AttributeContext.Api)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttributeContext_Api::IsInitialized() const {
  return true;
}

void AttributeContext_Api::InternalSwap(AttributeContext_Api* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  service_.Swap(&other->service_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  operation_.Swap(&other->operation_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  protocol_.Swap(&other->protocol_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AttributeContext_Api::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AttributeContext_Auth::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Struct& claims(const AttributeContext_Auth* msg);
};

const PROTOBUF_NAMESPACE_ID::Struct&
AttributeContext_Auth::_Internal::claims(const AttributeContext_Auth* msg) {
  return *msg->claims_;
}
void AttributeContext_Auth::clear_claims() {
  if (GetArena() == nullptr && claims_ != nullptr) {
    delete claims_;
  }
  claims_ = nullptr;
}
AttributeContext_Auth::AttributeContext_Auth(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  audiences_(arena),
  access_levels_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.rpc.context.AttributeContext.Auth)
}
AttributeContext_Auth::AttributeContext_Auth(const AttributeContext_Auth& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      audiences_(from.audiences_),
      access_levels_(from.access_levels_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  principal_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_principal().empty()) {
    principal_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_principal(), 
      GetArena());
  }
  presenter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_presenter().empty()) {
    presenter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_presenter(), 
      GetArena());
  }
  if (from._internal_has_claims()) {
    claims_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.claims_);
  } else {
    claims_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.context.AttributeContext.Auth)
}

void AttributeContext_Auth::SharedCtor() {
principal_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
presenter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
claims_ = nullptr;
}

AttributeContext_Auth::~AttributeContext_Auth() {
  // @@protoc_insertion_point(destructor:google.rpc.context.AttributeContext.Auth)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AttributeContext_Auth::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  principal_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  presenter_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete claims_;
}

void AttributeContext_Auth::ArenaDtor(void* object) {
  AttributeContext_Auth* _this = reinterpret_cast< AttributeContext_Auth* >(object);
  (void)_this;
}
void AttributeContext_Auth::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AttributeContext_Auth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AttributeContext_Auth::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.context.AttributeContext.Auth)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  audiences_.Clear();
  access_levels_.Clear();
  principal_.ClearToEmpty();
  presenter_.ClearToEmpty();
  if (GetArena() == nullptr && claims_ != nullptr) {
    delete claims_;
  }
  claims_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AttributeContext_Auth::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string principal = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_principal();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Auth.principal"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string audiences = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_audiences();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Auth.audiences"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // string presenter = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_presenter();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Auth.presenter"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct claims = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_claims(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string access_levels = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_access_levels();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Auth.access_levels"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AttributeContext_Auth::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.context.AttributeContext.Auth)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string principal = 1;
  if (this->principal().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_principal().data(), static_cast<int>(this->_internal_principal().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Auth.principal");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_principal(), target);
  }

  // repeated string audiences = 2;
  for (int i = 0, n = this->_internal_audiences_size(); i < n; i++) {
    const auto& s = this->_internal_audiences(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Auth.audiences");
    target = stream->WriteString(2, s, target);
  }

  // string presenter = 3;
  if (this->presenter().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_presenter().data(), static_cast<int>(this->_internal_presenter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Auth.presenter");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_presenter(), target);
  }

  // .google.protobuf.Struct claims = 4;
  if (this->has_claims()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::claims(this), target, stream);
  }

  // repeated string access_levels = 5;
  for (int i = 0, n = this->_internal_access_levels_size(); i < n; i++) {
    const auto& s = this->_internal_access_levels(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Auth.access_levels");
    target = stream->WriteString(5, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.context.AttributeContext.Auth)
  return target;
}

size_t AttributeContext_Auth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.context.AttributeContext.Auth)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string audiences = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(audiences_.size());
  for (int i = 0, n = audiences_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      audiences_.Get(i));
  }

  // repeated string access_levels = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(access_levels_.size());
  for (int i = 0, n = access_levels_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      access_levels_.Get(i));
  }

  // string principal = 1;
  if (this->principal().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_principal());
  }

  // string presenter = 3;
  if (this->presenter().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_presenter());
  }

  // .google.protobuf.Struct claims = 4;
  if (this->has_claims()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *claims_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttributeContext_Auth::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.context.AttributeContext.Auth)
  GOOGLE_DCHECK_NE(&from, this);
  const AttributeContext_Auth* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AttributeContext_Auth>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.context.AttributeContext.Auth)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.context.AttributeContext.Auth)
    MergeFrom(*source);
  }
}

void AttributeContext_Auth::MergeFrom(const AttributeContext_Auth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.context.AttributeContext.Auth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  audiences_.MergeFrom(from.audiences_);
  access_levels_.MergeFrom(from.access_levels_);
  if (from.principal().size() > 0) {
    _internal_set_principal(from._internal_principal());
  }
  if (from.presenter().size() > 0) {
    _internal_set_presenter(from._internal_presenter());
  }
  if (from.has_claims()) {
    _internal_mutable_claims()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_claims());
  }
}

void AttributeContext_Auth::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.context.AttributeContext.Auth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeContext_Auth::CopyFrom(const AttributeContext_Auth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.context.AttributeContext.Auth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttributeContext_Auth::IsInitialized() const {
  return true;
}

void AttributeContext_Auth::InternalSwap(AttributeContext_Auth* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  audiences_.InternalSwap(&other->audiences_);
  access_levels_.InternalSwap(&other->access_levels_);
  principal_.Swap(&other->principal_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  presenter_.Swap(&other->presenter_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(claims_, other->claims_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AttributeContext_Auth::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

AttributeContext_Request_HeadersEntry_DoNotUse::AttributeContext_Request_HeadersEntry_DoNotUse() {}
AttributeContext_Request_HeadersEntry_DoNotUse::AttributeContext_Request_HeadersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void AttributeContext_Request_HeadersEntry_DoNotUse::MergeFrom(const AttributeContext_Request_HeadersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata AttributeContext_Request_HeadersEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void AttributeContext_Request_HeadersEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class AttributeContext_Request::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& time(const AttributeContext_Request* msg);
  static const ::google::rpc::context::AttributeContext_Auth& auth(const AttributeContext_Request* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
AttributeContext_Request::_Internal::time(const AttributeContext_Request* msg) {
  return *msg->time_;
}
const ::google::rpc::context::AttributeContext_Auth&
AttributeContext_Request::_Internal::auth(const AttributeContext_Request* msg) {
  return *msg->auth_;
}
void AttributeContext_Request::clear_time() {
  if (GetArena() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
}
AttributeContext_Request::AttributeContext_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  headers_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.rpc.context.AttributeContext.Request)
}
AttributeContext_Request::AttributeContext_Request(const AttributeContext_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  headers_.MergeFrom(from.headers_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_method().empty()) {
    method_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_method(), 
      GetArena());
  }
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_host().empty()) {
    host_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_host(), 
      GetArena());
  }
  scheme_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scheme().empty()) {
    scheme_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_scheme(), 
      GetArena());
  }
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_query(), 
      GetArena());
  }
  protocol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_protocol().empty()) {
    protocol_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_protocol(), 
      GetArena());
  }
  reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reason().empty()) {
    reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_reason(), 
      GetArena());
  }
  if (from._internal_has_time()) {
    time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.time_);
  } else {
    time_ = nullptr;
  }
  if (from._internal_has_auth()) {
    auth_ = new ::google::rpc::context::AttributeContext_Auth(*from.auth_);
  } else {
    auth_ = nullptr;
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:google.rpc.context.AttributeContext.Request)
}

void AttributeContext_Request::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
scheme_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
protocol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&time_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&time_)) + sizeof(size_));
}

AttributeContext_Request::~AttributeContext_Request() {
  // @@protoc_insertion_point(destructor:google.rpc.context.AttributeContext.Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AttributeContext_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  host_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scheme_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  protocol_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete time_;
  if (this != internal_default_instance()) delete auth_;
}

void AttributeContext_Request::ArenaDtor(void* object) {
  AttributeContext_Request* _this = reinterpret_cast< AttributeContext_Request* >(object);
  (void)_this;
}
void AttributeContext_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AttributeContext_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AttributeContext_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.context.AttributeContext.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  headers_.Clear();
  id_.ClearToEmpty();
  method_.ClearToEmpty();
  path_.ClearToEmpty();
  host_.ClearToEmpty();
  scheme_.ClearToEmpty();
  query_.ClearToEmpty();
  protocol_.ClearToEmpty();
  reason_.ClearToEmpty();
  if (GetArena() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
  if (GetArena() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
  size_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AttributeContext_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Request.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string method = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_method();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Request.method"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> headers = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&headers_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // string path = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Request.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string host = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_host();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Request.host"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string scheme = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_scheme();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Request.scheme"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string query = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Request.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp time = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 size = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string protocol = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_protocol();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Request.protocol"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string reason = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_reason();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Request.reason"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.rpc.context.AttributeContext.Auth auth = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AttributeContext_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.context.AttributeContext.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string method = 2;
  if (this->method().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method().data(), static_cast<int>(this->_internal_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.method");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_method(), target);
  }

  // map<string, string> headers = 3;
  if (!this->_internal_headers().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Request.HeadersEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Request.HeadersEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_headers().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_headers().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_headers().begin();
          it != this->_internal_headers().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = AttributeContext_Request_HeadersEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_headers().begin();
          it != this->_internal_headers().end(); ++it) {
        target = AttributeContext_Request_HeadersEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string path = 4;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.path");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_path(), target);
  }

  // string host = 5;
  if (this->host().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_host().data(), static_cast<int>(this->_internal_host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.host");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_host(), target);
  }

  // string scheme = 6;
  if (this->scheme().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scheme().data(), static_cast<int>(this->_internal_scheme().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.scheme");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_scheme(), target);
  }

  // string query = 7;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.query");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_query(), target);
  }

  // .google.protobuf.Timestamp time = 9;
  if (this->has_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::time(this), target, stream);
  }

  // int64 size = 10;
  if (this->size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(10, this->_internal_size(), target);
  }

  // string protocol = 11;
  if (this->protocol().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_protocol().data(), static_cast<int>(this->_internal_protocol().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.protocol");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_protocol(), target);
  }

  // string reason = 12;
  if (this->reason().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reason().data(), static_cast<int>(this->_internal_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Request.reason");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_reason(), target);
  }

  // .google.rpc.context.AttributeContext.Auth auth = 13;
  if (this->has_auth()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::auth(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.context.AttributeContext.Request)
  return target;
}

size_t AttributeContext_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.context.AttributeContext.Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> headers = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_headers_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_headers().begin();
      it != this->_internal_headers().end(); ++it) {
    total_size += AttributeContext_Request_HeadersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string method = 2;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method());
  }

  // string path = 4;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string host = 5;
  if (this->host().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_host());
  }

  // string scheme = 6;
  if (this->scheme().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scheme());
  }

  // string query = 7;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  // string protocol = 11;
  if (this->protocol().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_protocol());
  }

  // string reason = 12;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reason());
  }

  // .google.protobuf.Timestamp time = 9;
  if (this->has_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *time_);
  }

  // .google.rpc.context.AttributeContext.Auth auth = 13;
  if (this->has_auth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_);
  }

  // int64 size = 10;
  if (this->size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttributeContext_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.context.AttributeContext.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const AttributeContext_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AttributeContext_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.context.AttributeContext.Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.context.AttributeContext.Request)
    MergeFrom(*source);
  }
}

void AttributeContext_Request::MergeFrom(const AttributeContext_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.context.AttributeContext.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  headers_.MergeFrom(from.headers_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.method().size() > 0) {
    _internal_set_method(from._internal_method());
  }
  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.host().size() > 0) {
    _internal_set_host(from._internal_host());
  }
  if (from.scheme().size() > 0) {
    _internal_set_scheme(from._internal_scheme());
  }
  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
  if (from.protocol().size() > 0) {
    _internal_set_protocol(from._internal_protocol());
  }
  if (from.reason().size() > 0) {
    _internal_set_reason(from._internal_reason());
  }
  if (from.has_time()) {
    _internal_mutable_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_time());
  }
  if (from.has_auth()) {
    _internal_mutable_auth()->::google::rpc::context::AttributeContext_Auth::MergeFrom(from._internal_auth());
  }
  if (from.size() != 0) {
    _internal_set_size(from._internal_size());
  }
}

void AttributeContext_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.context.AttributeContext.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeContext_Request::CopyFrom(const AttributeContext_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.context.AttributeContext.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttributeContext_Request::IsInitialized() const {
  return true;
}

void AttributeContext_Request::InternalSwap(AttributeContext_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  headers_.Swap(&other->headers_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  method_.Swap(&other->method_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  host_.Swap(&other->host_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scheme_.Swap(&other->scheme_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  protocol_.Swap(&other->protocol_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  reason_.Swap(&other->reason_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AttributeContext_Request, size_)
      + sizeof(AttributeContext_Request::size_)
      - PROTOBUF_FIELD_OFFSET(AttributeContext_Request, time_)>(
          reinterpret_cast<char*>(&time_),
          reinterpret_cast<char*>(&other->time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AttributeContext_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

AttributeContext_Response_HeadersEntry_DoNotUse::AttributeContext_Response_HeadersEntry_DoNotUse() {}
AttributeContext_Response_HeadersEntry_DoNotUse::AttributeContext_Response_HeadersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void AttributeContext_Response_HeadersEntry_DoNotUse::MergeFrom(const AttributeContext_Response_HeadersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata AttributeContext_Response_HeadersEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void AttributeContext_Response_HeadersEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class AttributeContext_Response::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& time(const AttributeContext_Response* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
AttributeContext_Response::_Internal::time(const AttributeContext_Response* msg) {
  return *msg->time_;
}
void AttributeContext_Response::clear_time() {
  if (GetArena() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
}
AttributeContext_Response::AttributeContext_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  headers_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.rpc.context.AttributeContext.Response)
}
AttributeContext_Response::AttributeContext_Response(const AttributeContext_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  headers_.MergeFrom(from.headers_);
  if (from._internal_has_time()) {
    time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.time_);
  } else {
    time_ = nullptr;
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&code_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:google.rpc.context.AttributeContext.Response)
}

void AttributeContext_Response::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&time_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&time_)) + sizeof(size_));
}

AttributeContext_Response::~AttributeContext_Response() {
  // @@protoc_insertion_point(destructor:google.rpc.context.AttributeContext.Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AttributeContext_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete time_;
}

void AttributeContext_Response::ArenaDtor(void* object) {
  AttributeContext_Response* _this = reinterpret_cast< AttributeContext_Response* >(object);
  (void)_this;
}
void AttributeContext_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AttributeContext_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AttributeContext_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.context.AttributeContext.Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  headers_.Clear();
  if (GetArena() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&code_)) + sizeof(size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AttributeContext_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> headers = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&headers_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AttributeContext_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.context.AttributeContext.Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_code(), target);
  }

  // int64 size = 2;
  if (this->size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_size(), target);
  }

  // map<string, string> headers = 3;
  if (!this->_internal_headers().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Response.HeadersEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Response.HeadersEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_headers().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_headers().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_headers().begin();
          it != this->_internal_headers().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = AttributeContext_Response_HeadersEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_headers().begin();
          it != this->_internal_headers().end(); ++it) {
        target = AttributeContext_Response_HeadersEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .google.protobuf.Timestamp time = 4;
  if (this->has_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::time(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.context.AttributeContext.Response)
  return target;
}

size_t AttributeContext_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.context.AttributeContext.Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> headers = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_headers_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_headers().begin();
      it != this->_internal_headers().end(); ++it) {
    total_size += AttributeContext_Response_HeadersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .google.protobuf.Timestamp time = 4;
  if (this->has_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *time_);
  }

  // int64 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_code());
  }

  // int64 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttributeContext_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.context.AttributeContext.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const AttributeContext_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AttributeContext_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.context.AttributeContext.Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.context.AttributeContext.Response)
    MergeFrom(*source);
  }
}

void AttributeContext_Response::MergeFrom(const AttributeContext_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.context.AttributeContext.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  headers_.MergeFrom(from.headers_);
  if (from.has_time()) {
    _internal_mutable_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_time());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.size() != 0) {
    _internal_set_size(from._internal_size());
  }
}

void AttributeContext_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.context.AttributeContext.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeContext_Response::CopyFrom(const AttributeContext_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.context.AttributeContext.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttributeContext_Response::IsInitialized() const {
  return true;
}

void AttributeContext_Response::InternalSwap(AttributeContext_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  headers_.Swap(&other->headers_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AttributeContext_Response, size_)
      + sizeof(AttributeContext_Response::size_)
      - PROTOBUF_FIELD_OFFSET(AttributeContext_Response, time_)>(
          reinterpret_cast<char*>(&time_),
          reinterpret_cast<char*>(&other->time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AttributeContext_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

AttributeContext_Resource_LabelsEntry_DoNotUse::AttributeContext_Resource_LabelsEntry_DoNotUse() {}
AttributeContext_Resource_LabelsEntry_DoNotUse::AttributeContext_Resource_LabelsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void AttributeContext_Resource_LabelsEntry_DoNotUse::MergeFrom(const AttributeContext_Resource_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata AttributeContext_Resource_LabelsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void AttributeContext_Resource_LabelsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class AttributeContext_Resource::_Internal {
 public:
};

AttributeContext_Resource::AttributeContext_Resource(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  labels_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.rpc.context.AttributeContext.Resource)
}
AttributeContext_Resource::AttributeContext_Resource(const AttributeContext_Resource& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  service_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_service().empty()) {
    service_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_service(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_type(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.context.AttributeContext.Resource)
}

void AttributeContext_Resource::SharedCtor() {
service_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AttributeContext_Resource::~AttributeContext_Resource() {
  // @@protoc_insertion_point(destructor:google.rpc.context.AttributeContext.Resource)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AttributeContext_Resource::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  service_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AttributeContext_Resource::ArenaDtor(void* object) {
  AttributeContext_Resource* _this = reinterpret_cast< AttributeContext_Resource* >(object);
  (void)_this;
}
void AttributeContext_Resource::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AttributeContext_Resource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AttributeContext_Resource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.context.AttributeContext.Resource)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  service_.ClearToEmpty();
  name_.ClearToEmpty();
  type_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AttributeContext_Resource::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string service = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_service();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Resource.service"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Resource.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.rpc.context.AttributeContext.Resource.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> labels = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&labels_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AttributeContext_Resource::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.context.AttributeContext.Resource)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service = 1;
  if (this->service().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service().data(), static_cast<int>(this->_internal_service().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Resource.service");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Resource.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.context.AttributeContext.Resource.type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_type(), target);
  }

  // map<string, string> labels = 4;
  if (!this->_internal_labels().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Resource.LabelsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.rpc.context.AttributeContext.Resource.LabelsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_labels().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_labels().begin();
          it != this->_internal_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = AttributeContext_Resource_LabelsEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_labels().begin();
          it != this->_internal_labels().end(); ++it) {
        target = AttributeContext_Resource_LabelsEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.context.AttributeContext.Resource)
  return target;
}

size_t AttributeContext_Resource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.context.AttributeContext.Resource)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> labels = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_labels_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_labels().begin();
      it != this->_internal_labels().end(); ++it) {
    total_size += AttributeContext_Resource_LabelsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string service = 1;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttributeContext_Resource::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.context.AttributeContext.Resource)
  GOOGLE_DCHECK_NE(&from, this);
  const AttributeContext_Resource* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AttributeContext_Resource>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.context.AttributeContext.Resource)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.context.AttributeContext.Resource)
    MergeFrom(*source);
  }
}

void AttributeContext_Resource::MergeFrom(const AttributeContext_Resource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.context.AttributeContext.Resource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.service().size() > 0) {
    _internal_set_service(from._internal_service());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
}

void AttributeContext_Resource::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.context.AttributeContext.Resource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeContext_Resource::CopyFrom(const AttributeContext_Resource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.context.AttributeContext.Resource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttributeContext_Resource::IsInitialized() const {
  return true;
}

void AttributeContext_Resource::InternalSwap(AttributeContext_Resource* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  labels_.Swap(&other->labels_);
  service_.Swap(&other->service_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AttributeContext_Resource::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AttributeContext::_Internal {
 public:
  static const ::google::rpc::context::AttributeContext_Peer& origin(const AttributeContext* msg);
  static const ::google::rpc::context::AttributeContext_Peer& source(const AttributeContext* msg);
  static const ::google::rpc::context::AttributeContext_Peer& destination(const AttributeContext* msg);
  static const ::google::rpc::context::AttributeContext_Request& request(const AttributeContext* msg);
  static const ::google::rpc::context::AttributeContext_Response& response(const AttributeContext* msg);
  static const ::google::rpc::context::AttributeContext_Resource& resource(const AttributeContext* msg);
  static const ::google::rpc::context::AttributeContext_Api& api(const AttributeContext* msg);
};

const ::google::rpc::context::AttributeContext_Peer&
AttributeContext::_Internal::origin(const AttributeContext* msg) {
  return *msg->origin_;
}
const ::google::rpc::context::AttributeContext_Peer&
AttributeContext::_Internal::source(const AttributeContext* msg) {
  return *msg->source_;
}
const ::google::rpc::context::AttributeContext_Peer&
AttributeContext::_Internal::destination(const AttributeContext* msg) {
  return *msg->destination_;
}
const ::google::rpc::context::AttributeContext_Request&
AttributeContext::_Internal::request(const AttributeContext* msg) {
  return *msg->request_;
}
const ::google::rpc::context::AttributeContext_Response&
AttributeContext::_Internal::response(const AttributeContext* msg) {
  return *msg->response_;
}
const ::google::rpc::context::AttributeContext_Resource&
AttributeContext::_Internal::resource(const AttributeContext* msg) {
  return *msg->resource_;
}
const ::google::rpc::context::AttributeContext_Api&
AttributeContext::_Internal::api(const AttributeContext* msg) {
  return *msg->api_;
}
void AttributeContext::clear_extensions() {
  extensions_.Clear();
}
AttributeContext::AttributeContext(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  extensions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.rpc.context.AttributeContext)
}
AttributeContext::AttributeContext(const AttributeContext& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      extensions_(from.extensions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_source()) {
    source_ = new ::google::rpc::context::AttributeContext_Peer(*from.source_);
  } else {
    source_ = nullptr;
  }
  if (from._internal_has_destination()) {
    destination_ = new ::google::rpc::context::AttributeContext_Peer(*from.destination_);
  } else {
    destination_ = nullptr;
  }
  if (from._internal_has_request()) {
    request_ = new ::google::rpc::context::AttributeContext_Request(*from.request_);
  } else {
    request_ = nullptr;
  }
  if (from._internal_has_response()) {
    response_ = new ::google::rpc::context::AttributeContext_Response(*from.response_);
  } else {
    response_ = nullptr;
  }
  if (from._internal_has_resource()) {
    resource_ = new ::google::rpc::context::AttributeContext_Resource(*from.resource_);
  } else {
    resource_ = nullptr;
  }
  if (from._internal_has_api()) {
    api_ = new ::google::rpc::context::AttributeContext_Api(*from.api_);
  } else {
    api_ = nullptr;
  }
  if (from._internal_has_origin()) {
    origin_ = new ::google::rpc::context::AttributeContext_Peer(*from.origin_);
  } else {
    origin_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.context.AttributeContext)
}

void AttributeContext::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&source_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&origin_) -
    reinterpret_cast<char*>(&source_)) + sizeof(origin_));
}

AttributeContext::~AttributeContext() {
  // @@protoc_insertion_point(destructor:google.rpc.context.AttributeContext)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AttributeContext::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete source_;
  if (this != internal_default_instance()) delete destination_;
  if (this != internal_default_instance()) delete request_;
  if (this != internal_default_instance()) delete response_;
  if (this != internal_default_instance()) delete resource_;
  if (this != internal_default_instance()) delete api_;
  if (this != internal_default_instance()) delete origin_;
}

void AttributeContext::ArenaDtor(void* object) {
  AttributeContext* _this = reinterpret_cast< AttributeContext* >(object);
  (void)_this;
}
void AttributeContext::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AttributeContext::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AttributeContext::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.context.AttributeContext)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extensions_.Clear();
  if (GetArena() == nullptr && source_ != nullptr) {
    delete source_;
  }
  source_ = nullptr;
  if (GetArena() == nullptr && destination_ != nullptr) {
    delete destination_;
  }
  destination_ = nullptr;
  if (GetArena() == nullptr && request_ != nullptr) {
    delete request_;
  }
  request_ = nullptr;
  if (GetArena() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
  if (GetArena() == nullptr && resource_ != nullptr) {
    delete resource_;
  }
  resource_ = nullptr;
  if (GetArena() == nullptr && api_ != nullptr) {
    delete api_;
  }
  api_ = nullptr;
  if (GetArena() == nullptr && origin_ != nullptr) {
    delete origin_;
  }
  origin_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AttributeContext::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.rpc.context.AttributeContext.Peer source = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_source(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.rpc.context.AttributeContext.Peer destination = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_destination(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.rpc.context.AttributeContext.Request request = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.rpc.context.AttributeContext.Response response = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.rpc.context.AttributeContext.Resource resource = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_resource(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.rpc.context.AttributeContext.Api api = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_api(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.rpc.context.AttributeContext.Peer origin = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_origin(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.Any extensions = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_extensions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AttributeContext::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.context.AttributeContext)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.rpc.context.AttributeContext.Peer source = 1;
  if (this->has_source()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::source(this), target, stream);
  }

  // .google.rpc.context.AttributeContext.Peer destination = 2;
  if (this->has_destination()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::destination(this), target, stream);
  }

  // .google.rpc.context.AttributeContext.Request request = 3;
  if (this->has_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::request(this), target, stream);
  }

  // .google.rpc.context.AttributeContext.Response response = 4;
  if (this->has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::response(this), target, stream);
  }

  // .google.rpc.context.AttributeContext.Resource resource = 5;
  if (this->has_resource()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::resource(this), target, stream);
  }

  // .google.rpc.context.AttributeContext.Api api = 6;
  if (this->has_api()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::api(this), target, stream);
  }

  // .google.rpc.context.AttributeContext.Peer origin = 7;
  if (this->has_origin()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::origin(this), target, stream);
  }

  // repeated .google.protobuf.Any extensions = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_extensions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_extensions(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.context.AttributeContext)
  return target;
}

size_t AttributeContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.context.AttributeContext)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Any extensions = 8;
  total_size += 1UL * this->_internal_extensions_size();
  for (const auto& msg : this->extensions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .google.rpc.context.AttributeContext.Peer source = 1;
  if (this->has_source()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_);
  }

  // .google.rpc.context.AttributeContext.Peer destination = 2;
  if (this->has_destination()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *destination_);
  }

  // .google.rpc.context.AttributeContext.Request request = 3;
  if (this->has_request()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *request_);
  }

  // .google.rpc.context.AttributeContext.Response response = 4;
  if (this->has_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *response_);
  }

  // .google.rpc.context.AttributeContext.Resource resource = 5;
  if (this->has_resource()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *resource_);
  }

  // .google.rpc.context.AttributeContext.Api api = 6;
  if (this->has_api()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *api_);
  }

  // .google.rpc.context.AttributeContext.Peer origin = 7;
  if (this->has_origin()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *origin_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttributeContext::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.context.AttributeContext)
  GOOGLE_DCHECK_NE(&from, this);
  const AttributeContext* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AttributeContext>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.context.AttributeContext)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.context.AttributeContext)
    MergeFrom(*source);
  }
}

void AttributeContext::MergeFrom(const AttributeContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.context.AttributeContext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extensions_.MergeFrom(from.extensions_);
  if (from.has_source()) {
    _internal_mutable_source()->::google::rpc::context::AttributeContext_Peer::MergeFrom(from._internal_source());
  }
  if (from.has_destination()) {
    _internal_mutable_destination()->::google::rpc::context::AttributeContext_Peer::MergeFrom(from._internal_destination());
  }
  if (from.has_request()) {
    _internal_mutable_request()->::google::rpc::context::AttributeContext_Request::MergeFrom(from._internal_request());
  }
  if (from.has_response()) {
    _internal_mutable_response()->::google::rpc::context::AttributeContext_Response::MergeFrom(from._internal_response());
  }
  if (from.has_resource()) {
    _internal_mutable_resource()->::google::rpc::context::AttributeContext_Resource::MergeFrom(from._internal_resource());
  }
  if (from.has_api()) {
    _internal_mutable_api()->::google::rpc::context::AttributeContext_Api::MergeFrom(from._internal_api());
  }
  if (from.has_origin()) {
    _internal_mutable_origin()->::google::rpc::context::AttributeContext_Peer::MergeFrom(from._internal_origin());
  }
}

void AttributeContext::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.context.AttributeContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeContext::CopyFrom(const AttributeContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.context.AttributeContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttributeContext::IsInitialized() const {
  return true;
}

void AttributeContext::InternalSwap(AttributeContext* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  extensions_.InternalSwap(&other->extensions_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AttributeContext, origin_)
      + sizeof(AttributeContext::origin_)
      - PROTOBUF_FIELD_OFFSET(AttributeContext, source_)>(
          reinterpret_cast<char*>(&source_),
          reinterpret_cast<char*>(&other->source_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AttributeContext::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace context
}  // namespace rpc
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::rpc::context::AttributeContext_Peer_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::rpc::context::AttributeContext_Peer_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::context::AttributeContext_Peer_LabelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::context::AttributeContext_Peer* Arena::CreateMaybeMessage< ::google::rpc::context::AttributeContext_Peer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::context::AttributeContext_Peer >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::context::AttributeContext_Api* Arena::CreateMaybeMessage< ::google::rpc::context::AttributeContext_Api >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::context::AttributeContext_Api >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::context::AttributeContext_Auth* Arena::CreateMaybeMessage< ::google::rpc::context::AttributeContext_Auth >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::context::AttributeContext_Auth >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::context::AttributeContext_Request_HeadersEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::rpc::context::AttributeContext_Request_HeadersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::context::AttributeContext_Request_HeadersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::context::AttributeContext_Request* Arena::CreateMaybeMessage< ::google::rpc::context::AttributeContext_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::context::AttributeContext_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::context::AttributeContext_Response_HeadersEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::rpc::context::AttributeContext_Response_HeadersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::context::AttributeContext_Response_HeadersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::context::AttributeContext_Response* Arena::CreateMaybeMessage< ::google::rpc::context::AttributeContext_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::context::AttributeContext_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::context::AttributeContext_Resource_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::rpc::context::AttributeContext_Resource_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::context::AttributeContext_Resource_LabelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::context::AttributeContext_Resource* Arena::CreateMaybeMessage< ::google::rpc::context::AttributeContext_Resource >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::context::AttributeContext_Resource >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::context::AttributeContext* Arena::CreateMaybeMessage< ::google::rpc::context::AttributeContext >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::context::AttributeContext >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

UE_POP_MACRO("TEXT")
THIRD_PARTY_INCLUDES_END
