//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bytestream/bytestream.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fbytestream_2fbytestream_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_2fbytestream_2fbytestream_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fbytestream_2fbytestream_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fbytestream_2fbytestream_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fbytestream_2fbytestream_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_google_2fbytestream_2fbytestream_2eproto_metadata_getter(int index);
namespace google {
namespace bytestream {
class QueryWriteStatusRequest;
struct QueryWriteStatusRequestDefaultTypeInternal;
extern QueryWriteStatusRequestDefaultTypeInternal _QueryWriteStatusRequest_default_instance_;
class QueryWriteStatusResponse;
struct QueryWriteStatusResponseDefaultTypeInternal;
extern QueryWriteStatusResponseDefaultTypeInternal _QueryWriteStatusResponse_default_instance_;
class ReadRequest;
struct ReadRequestDefaultTypeInternal;
extern ReadRequestDefaultTypeInternal _ReadRequest_default_instance_;
class ReadResponse;
struct ReadResponseDefaultTypeInternal;
extern ReadResponseDefaultTypeInternal _ReadResponse_default_instance_;
class WriteRequest;
struct WriteRequestDefaultTypeInternal;
extern WriteRequestDefaultTypeInternal _WriteRequest_default_instance_;
class WriteResponse;
struct WriteResponseDefaultTypeInternal;
extern WriteResponseDefaultTypeInternal _WriteResponse_default_instance_;
}  // namespace bytestream
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> ::google::bytestream::QueryWriteStatusRequest* Arena::CreateMaybeMessage<::google::bytestream::QueryWriteStatusRequest>(Arena*);
template<> ::google::bytestream::QueryWriteStatusResponse* Arena::CreateMaybeMessage<::google::bytestream::QueryWriteStatusResponse>(Arena*);
template<> ::google::bytestream::ReadRequest* Arena::CreateMaybeMessage<::google::bytestream::ReadRequest>(Arena*);
template<> ::google::bytestream::ReadResponse* Arena::CreateMaybeMessage<::google::bytestream::ReadResponse>(Arena*);
template<> ::google::bytestream::WriteRequest* Arena::CreateMaybeMessage<::google::bytestream::WriteRequest>(Arena*);
template<> ::google::bytestream::WriteResponse* Arena::CreateMaybeMessage<::google::bytestream::WriteResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace google {
namespace bytestream {

// ===================================================================

class ReadRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.bytestream.ReadRequest) */ {
 public:
  inline ReadRequest() : ReadRequest(nullptr) {}
  virtual ~ReadRequest();
  explicit constexpr ReadRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReadRequest(const ReadRequest& from);
  ReadRequest(ReadRequest&& from) noexcept
    : ReadRequest() {
    *this = ::std::move(from);
  }

  inline ReadRequest& operator=(const ReadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReadRequest& operator=(ReadRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ReadRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReadRequest* internal_default_instance() {
    return reinterpret_cast<const ReadRequest*>(
               &_ReadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ReadRequest& a, ReadRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ReadRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReadRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ReadRequest* New() const final {
    return CreateMaybeMessage<ReadRequest>(nullptr);
  }

  ReadRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ReadRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ReadRequest& from);
  void MergeFrom(const ReadRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.bytestream.ReadRequest";
  }
  protected:
  explicit ReadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fbytestream_2fbytestream_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResourceNameFieldNumber = 1,
    kReadOffsetFieldNumber = 2,
    kReadLimitFieldNumber = 3,
  };
  // string resource_name = 1;
  void clear_resource_name();
  const std::string& resource_name() const;
  void set_resource_name(const std::string& value);
  void set_resource_name(std::string&& value);
  void set_resource_name(const char* value);
  void set_resource_name(const char* value, size_t size);
  std::string* mutable_resource_name();
  std::string* release_resource_name();
  void set_allocated_resource_name(std::string* resource_name);
  private:
  const std::string& _internal_resource_name() const;
  void _internal_set_resource_name(const std::string& value);
  std::string* _internal_mutable_resource_name();
  public:

  // int64 read_offset = 2;
  void clear_read_offset();
  ::PROTOBUF_NAMESPACE_ID::int64 read_offset() const;
  void set_read_offset(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_read_offset() const;
  void _internal_set_read_offset(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 read_limit = 3;
  void clear_read_limit();
  ::PROTOBUF_NAMESPACE_ID::int64 read_limit() const;
  void set_read_limit(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_read_limit() const;
  void _internal_set_read_limit(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:google.bytestream.ReadRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr resource_name_;
  ::PROTOBUF_NAMESPACE_ID::int64 read_offset_;
  ::PROTOBUF_NAMESPACE_ID::int64 read_limit_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fbytestream_2fbytestream_2eproto;
};
// -------------------------------------------------------------------

class ReadResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.bytestream.ReadResponse) */ {
 public:
  inline ReadResponse() : ReadResponse(nullptr) {}
  virtual ~ReadResponse();
  explicit constexpr ReadResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReadResponse(const ReadResponse& from);
  ReadResponse(ReadResponse&& from) noexcept
    : ReadResponse() {
    *this = ::std::move(from);
  }

  inline ReadResponse& operator=(const ReadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReadResponse& operator=(ReadResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ReadResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReadResponse* internal_default_instance() {
    return reinterpret_cast<const ReadResponse*>(
               &_ReadResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ReadResponse& a, ReadResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ReadResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReadResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ReadResponse* New() const final {
    return CreateMaybeMessage<ReadResponse>(nullptr);
  }

  ReadResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ReadResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ReadResponse& from);
  void MergeFrom(const ReadResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.bytestream.ReadResponse";
  }
  protected:
  explicit ReadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fbytestream_2fbytestream_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 10,
  };
  // bytes data = 10;
  void clear_data();
  const std::string& data() const;
  void set_data(const std::string& value);
  void set_data(std::string&& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  std::string* mutable_data();
  std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // @@protoc_insertion_point(class_scope:google.bytestream.ReadResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fbytestream_2fbytestream_2eproto;
};
// -------------------------------------------------------------------

class WriteRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.bytestream.WriteRequest) */ {
 public:
  inline WriteRequest() : WriteRequest(nullptr) {}
  virtual ~WriteRequest();
  explicit constexpr WriteRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  WriteRequest(const WriteRequest& from);
  WriteRequest(WriteRequest&& from) noexcept
    : WriteRequest() {
    *this = ::std::move(from);
  }

  inline WriteRequest& operator=(const WriteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WriteRequest& operator=(WriteRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const WriteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WriteRequest* internal_default_instance() {
    return reinterpret_cast<const WriteRequest*>(
               &_WriteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(WriteRequest& a, WriteRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WriteRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WriteRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline WriteRequest* New() const final {
    return CreateMaybeMessage<WriteRequest>(nullptr);
  }

  WriteRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<WriteRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const WriteRequest& from);
  void MergeFrom(const WriteRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WriteRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.bytestream.WriteRequest";
  }
  protected:
  explicit WriteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fbytestream_2fbytestream_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResourceNameFieldNumber = 1,
    kDataFieldNumber = 10,
    kWriteOffsetFieldNumber = 2,
    kFinishWriteFieldNumber = 3,
  };
  // string resource_name = 1;
  void clear_resource_name();
  const std::string& resource_name() const;
  void set_resource_name(const std::string& value);
  void set_resource_name(std::string&& value);
  void set_resource_name(const char* value);
  void set_resource_name(const char* value, size_t size);
  std::string* mutable_resource_name();
  std::string* release_resource_name();
  void set_allocated_resource_name(std::string* resource_name);
  private:
  const std::string& _internal_resource_name() const;
  void _internal_set_resource_name(const std::string& value);
  std::string* _internal_mutable_resource_name();
  public:

  // bytes data = 10;
  void clear_data();
  const std::string& data() const;
  void set_data(const std::string& value);
  void set_data(std::string&& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  std::string* mutable_data();
  std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // int64 write_offset = 2;
  void clear_write_offset();
  ::PROTOBUF_NAMESPACE_ID::int64 write_offset() const;
  void set_write_offset(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_write_offset() const;
  void _internal_set_write_offset(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // bool finish_write = 3;
  void clear_finish_write();
  bool finish_write() const;
  void set_finish_write(bool value);
  private:
  bool _internal_finish_write() const;
  void _internal_set_finish_write(bool value);
  public:

  // @@protoc_insertion_point(class_scope:google.bytestream.WriteRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr resource_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  ::PROTOBUF_NAMESPACE_ID::int64 write_offset_;
  bool finish_write_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fbytestream_2fbytestream_2eproto;
};
// -------------------------------------------------------------------

class WriteResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.bytestream.WriteResponse) */ {
 public:
  inline WriteResponse() : WriteResponse(nullptr) {}
  virtual ~WriteResponse();
  explicit constexpr WriteResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  WriteResponse(const WriteResponse& from);
  WriteResponse(WriteResponse&& from) noexcept
    : WriteResponse() {
    *this = ::std::move(from);
  }

  inline WriteResponse& operator=(const WriteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WriteResponse& operator=(WriteResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const WriteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WriteResponse* internal_default_instance() {
    return reinterpret_cast<const WriteResponse*>(
               &_WriteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(WriteResponse& a, WriteResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(WriteResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WriteResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline WriteResponse* New() const final {
    return CreateMaybeMessage<WriteResponse>(nullptr);
  }

  WriteResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<WriteResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const WriteResponse& from);
  void MergeFrom(const WriteResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WriteResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.bytestream.WriteResponse";
  }
  protected:
  explicit WriteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fbytestream_2fbytestream_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommittedSizeFieldNumber = 1,
  };
  // int64 committed_size = 1;
  void clear_committed_size();
  ::PROTOBUF_NAMESPACE_ID::int64 committed_size() const;
  void set_committed_size(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_committed_size() const;
  void _internal_set_committed_size(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:google.bytestream.WriteResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 committed_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fbytestream_2fbytestream_2eproto;
};
// -------------------------------------------------------------------

class QueryWriteStatusRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.bytestream.QueryWriteStatusRequest) */ {
 public:
  inline QueryWriteStatusRequest() : QueryWriteStatusRequest(nullptr) {}
  virtual ~QueryWriteStatusRequest();
  explicit constexpr QueryWriteStatusRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryWriteStatusRequest(const QueryWriteStatusRequest& from);
  QueryWriteStatusRequest(QueryWriteStatusRequest&& from) noexcept
    : QueryWriteStatusRequest() {
    *this = ::std::move(from);
  }

  inline QueryWriteStatusRequest& operator=(const QueryWriteStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryWriteStatusRequest& operator=(QueryWriteStatusRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QueryWriteStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryWriteStatusRequest* internal_default_instance() {
    return reinterpret_cast<const QueryWriteStatusRequest*>(
               &_QueryWriteStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(QueryWriteStatusRequest& a, QueryWriteStatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryWriteStatusRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryWriteStatusRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QueryWriteStatusRequest* New() const final {
    return CreateMaybeMessage<QueryWriteStatusRequest>(nullptr);
  }

  QueryWriteStatusRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QueryWriteStatusRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QueryWriteStatusRequest& from);
  void MergeFrom(const QueryWriteStatusRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryWriteStatusRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.bytestream.QueryWriteStatusRequest";
  }
  protected:
  explicit QueryWriteStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fbytestream_2fbytestream_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResourceNameFieldNumber = 1,
  };
  // string resource_name = 1;
  void clear_resource_name();
  const std::string& resource_name() const;
  void set_resource_name(const std::string& value);
  void set_resource_name(std::string&& value);
  void set_resource_name(const char* value);
  void set_resource_name(const char* value, size_t size);
  std::string* mutable_resource_name();
  std::string* release_resource_name();
  void set_allocated_resource_name(std::string* resource_name);
  private:
  const std::string& _internal_resource_name() const;
  void _internal_set_resource_name(const std::string& value);
  std::string* _internal_mutable_resource_name();
  public:

  // @@protoc_insertion_point(class_scope:google.bytestream.QueryWriteStatusRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr resource_name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fbytestream_2fbytestream_2eproto;
};
// -------------------------------------------------------------------

class QueryWriteStatusResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.bytestream.QueryWriteStatusResponse) */ {
 public:
  inline QueryWriteStatusResponse() : QueryWriteStatusResponse(nullptr) {}
  virtual ~QueryWriteStatusResponse();
  explicit constexpr QueryWriteStatusResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryWriteStatusResponse(const QueryWriteStatusResponse& from);
  QueryWriteStatusResponse(QueryWriteStatusResponse&& from) noexcept
    : QueryWriteStatusResponse() {
    *this = ::std::move(from);
  }

  inline QueryWriteStatusResponse& operator=(const QueryWriteStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryWriteStatusResponse& operator=(QueryWriteStatusResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QueryWriteStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryWriteStatusResponse* internal_default_instance() {
    return reinterpret_cast<const QueryWriteStatusResponse*>(
               &_QueryWriteStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(QueryWriteStatusResponse& a, QueryWriteStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryWriteStatusResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryWriteStatusResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QueryWriteStatusResponse* New() const final {
    return CreateMaybeMessage<QueryWriteStatusResponse>(nullptr);
  }

  QueryWriteStatusResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QueryWriteStatusResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QueryWriteStatusResponse& from);
  void MergeFrom(const QueryWriteStatusResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryWriteStatusResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.bytestream.QueryWriteStatusResponse";
  }
  protected:
  explicit QueryWriteStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_google_2fbytestream_2fbytestream_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommittedSizeFieldNumber = 1,
    kCompleteFieldNumber = 2,
  };
  // int64 committed_size = 1;
  void clear_committed_size();
  ::PROTOBUF_NAMESPACE_ID::int64 committed_size() const;
  void set_committed_size(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_committed_size() const;
  void _internal_set_committed_size(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // bool complete = 2;
  void clear_complete();
  bool complete() const;
  void set_complete(bool value);
  private:
  bool _internal_complete() const;
  void _internal_set_complete(bool value);
  public:

  // @@protoc_insertion_point(class_scope:google.bytestream.QueryWriteStatusResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 committed_size_;
  bool complete_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fbytestream_2fbytestream_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ReadRequest

// string resource_name = 1;
inline void ReadRequest::clear_resource_name() {
  resource_name_.ClearToEmpty();
}
inline const std::string& ReadRequest::resource_name() const {
  // @@protoc_insertion_point(field_get:google.bytestream.ReadRequest.resource_name)
  return _internal_resource_name();
}
inline void ReadRequest::set_resource_name(const std::string& value) {
  _internal_set_resource_name(value);
  // @@protoc_insertion_point(field_set:google.bytestream.ReadRequest.resource_name)
}
inline std::string* ReadRequest::mutable_resource_name() {
  // @@protoc_insertion_point(field_mutable:google.bytestream.ReadRequest.resource_name)
  return _internal_mutable_resource_name();
}
inline const std::string& ReadRequest::_internal_resource_name() const {
  return resource_name_.Get();
}
inline void ReadRequest::_internal_set_resource_name(const std::string& value) {
  
  resource_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ReadRequest::set_resource_name(std::string&& value) {
  
  resource_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.bytestream.ReadRequest.resource_name)
}
inline void ReadRequest::set_resource_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  resource_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.bytestream.ReadRequest.resource_name)
}
inline void ReadRequest::set_resource_name(const char* value,
    size_t size) {
  
  resource_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.bytestream.ReadRequest.resource_name)
}
inline std::string* ReadRequest::_internal_mutable_resource_name() {
  
  return resource_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ReadRequest::release_resource_name() {
  // @@protoc_insertion_point(field_release:google.bytestream.ReadRequest.resource_name)
  return resource_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ReadRequest::set_allocated_resource_name(std::string* resource_name) {
  if (resource_name != nullptr) {
    
  } else {
    
  }
  resource_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), resource_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.bytestream.ReadRequest.resource_name)
}

// int64 read_offset = 2;
inline void ReadRequest::clear_read_offset() {
  read_offset_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ReadRequest::_internal_read_offset() const {
  return read_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ReadRequest::read_offset() const {
  // @@protoc_insertion_point(field_get:google.bytestream.ReadRequest.read_offset)
  return _internal_read_offset();
}
inline void ReadRequest::_internal_set_read_offset(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  read_offset_ = value;
}
inline void ReadRequest::set_read_offset(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_read_offset(value);
  // @@protoc_insertion_point(field_set:google.bytestream.ReadRequest.read_offset)
}

// int64 read_limit = 3;
inline void ReadRequest::clear_read_limit() {
  read_limit_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ReadRequest::_internal_read_limit() const {
  return read_limit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ReadRequest::read_limit() const {
  // @@protoc_insertion_point(field_get:google.bytestream.ReadRequest.read_limit)
  return _internal_read_limit();
}
inline void ReadRequest::_internal_set_read_limit(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  read_limit_ = value;
}
inline void ReadRequest::set_read_limit(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_read_limit(value);
  // @@protoc_insertion_point(field_set:google.bytestream.ReadRequest.read_limit)
}

// -------------------------------------------------------------------

// ReadResponse

// bytes data = 10;
inline void ReadResponse::clear_data() {
  data_.ClearToEmpty();
}
inline const std::string& ReadResponse::data() const {
  // @@protoc_insertion_point(field_get:google.bytestream.ReadResponse.data)
  return _internal_data();
}
inline void ReadResponse::set_data(const std::string& value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:google.bytestream.ReadResponse.data)
}
inline std::string* ReadResponse::mutable_data() {
  // @@protoc_insertion_point(field_mutable:google.bytestream.ReadResponse.data)
  return _internal_mutable_data();
}
inline const std::string& ReadResponse::_internal_data() const {
  return data_.Get();
}
inline void ReadResponse::_internal_set_data(const std::string& value) {
  
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ReadResponse::set_data(std::string&& value) {
  
  data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.bytestream.ReadResponse.data)
}
inline void ReadResponse::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.bytestream.ReadResponse.data)
}
inline void ReadResponse::set_data(const void* value,
    size_t size) {
  
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.bytestream.ReadResponse.data)
}
inline std::string* ReadResponse::_internal_mutable_data() {
  
  return data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ReadResponse::release_data() {
  // @@protoc_insertion_point(field_release:google.bytestream.ReadResponse.data)
  return data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ReadResponse::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.bytestream.ReadResponse.data)
}

// -------------------------------------------------------------------

// WriteRequest

// string resource_name = 1;
inline void WriteRequest::clear_resource_name() {
  resource_name_.ClearToEmpty();
}
inline const std::string& WriteRequest::resource_name() const {
  // @@protoc_insertion_point(field_get:google.bytestream.WriteRequest.resource_name)
  return _internal_resource_name();
}
inline void WriteRequest::set_resource_name(const std::string& value) {
  _internal_set_resource_name(value);
  // @@protoc_insertion_point(field_set:google.bytestream.WriteRequest.resource_name)
}
inline std::string* WriteRequest::mutable_resource_name() {
  // @@protoc_insertion_point(field_mutable:google.bytestream.WriteRequest.resource_name)
  return _internal_mutable_resource_name();
}
inline const std::string& WriteRequest::_internal_resource_name() const {
  return resource_name_.Get();
}
inline void WriteRequest::_internal_set_resource_name(const std::string& value) {
  
  resource_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void WriteRequest::set_resource_name(std::string&& value) {
  
  resource_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.bytestream.WriteRequest.resource_name)
}
inline void WriteRequest::set_resource_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  resource_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.bytestream.WriteRequest.resource_name)
}
inline void WriteRequest::set_resource_name(const char* value,
    size_t size) {
  
  resource_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.bytestream.WriteRequest.resource_name)
}
inline std::string* WriteRequest::_internal_mutable_resource_name() {
  
  return resource_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* WriteRequest::release_resource_name() {
  // @@protoc_insertion_point(field_release:google.bytestream.WriteRequest.resource_name)
  return resource_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void WriteRequest::set_allocated_resource_name(std::string* resource_name) {
  if (resource_name != nullptr) {
    
  } else {
    
  }
  resource_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), resource_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.bytestream.WriteRequest.resource_name)
}

// int64 write_offset = 2;
inline void WriteRequest::clear_write_offset() {
  write_offset_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 WriteRequest::_internal_write_offset() const {
  return write_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 WriteRequest::write_offset() const {
  // @@protoc_insertion_point(field_get:google.bytestream.WriteRequest.write_offset)
  return _internal_write_offset();
}
inline void WriteRequest::_internal_set_write_offset(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  write_offset_ = value;
}
inline void WriteRequest::set_write_offset(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_write_offset(value);
  // @@protoc_insertion_point(field_set:google.bytestream.WriteRequest.write_offset)
}

// bool finish_write = 3;
inline void WriteRequest::clear_finish_write() {
  finish_write_ = false;
}
inline bool WriteRequest::_internal_finish_write() const {
  return finish_write_;
}
inline bool WriteRequest::finish_write() const {
  // @@protoc_insertion_point(field_get:google.bytestream.WriteRequest.finish_write)
  return _internal_finish_write();
}
inline void WriteRequest::_internal_set_finish_write(bool value) {
  
  finish_write_ = value;
}
inline void WriteRequest::set_finish_write(bool value) {
  _internal_set_finish_write(value);
  // @@protoc_insertion_point(field_set:google.bytestream.WriteRequest.finish_write)
}

// bytes data = 10;
inline void WriteRequest::clear_data() {
  data_.ClearToEmpty();
}
inline const std::string& WriteRequest::data() const {
  // @@protoc_insertion_point(field_get:google.bytestream.WriteRequest.data)
  return _internal_data();
}
inline void WriteRequest::set_data(const std::string& value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:google.bytestream.WriteRequest.data)
}
inline std::string* WriteRequest::mutable_data() {
  // @@protoc_insertion_point(field_mutable:google.bytestream.WriteRequest.data)
  return _internal_mutable_data();
}
inline const std::string& WriteRequest::_internal_data() const {
  return data_.Get();
}
inline void WriteRequest::_internal_set_data(const std::string& value) {
  
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void WriteRequest::set_data(std::string&& value) {
  
  data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.bytestream.WriteRequest.data)
}
inline void WriteRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.bytestream.WriteRequest.data)
}
inline void WriteRequest::set_data(const void* value,
    size_t size) {
  
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.bytestream.WriteRequest.data)
}
inline std::string* WriteRequest::_internal_mutable_data() {
  
  return data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* WriteRequest::release_data() {
  // @@protoc_insertion_point(field_release:google.bytestream.WriteRequest.data)
  return data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void WriteRequest::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.bytestream.WriteRequest.data)
}

// -------------------------------------------------------------------

// WriteResponse

// int64 committed_size = 1;
inline void WriteResponse::clear_committed_size() {
  committed_size_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 WriteResponse::_internal_committed_size() const {
  return committed_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 WriteResponse::committed_size() const {
  // @@protoc_insertion_point(field_get:google.bytestream.WriteResponse.committed_size)
  return _internal_committed_size();
}
inline void WriteResponse::_internal_set_committed_size(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  committed_size_ = value;
}
inline void WriteResponse::set_committed_size(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_committed_size(value);
  // @@protoc_insertion_point(field_set:google.bytestream.WriteResponse.committed_size)
}

// -------------------------------------------------------------------

// QueryWriteStatusRequest

// string resource_name = 1;
inline void QueryWriteStatusRequest::clear_resource_name() {
  resource_name_.ClearToEmpty();
}
inline const std::string& QueryWriteStatusRequest::resource_name() const {
  // @@protoc_insertion_point(field_get:google.bytestream.QueryWriteStatusRequest.resource_name)
  return _internal_resource_name();
}
inline void QueryWriteStatusRequest::set_resource_name(const std::string& value) {
  _internal_set_resource_name(value);
  // @@protoc_insertion_point(field_set:google.bytestream.QueryWriteStatusRequest.resource_name)
}
inline std::string* QueryWriteStatusRequest::mutable_resource_name() {
  // @@protoc_insertion_point(field_mutable:google.bytestream.QueryWriteStatusRequest.resource_name)
  return _internal_mutable_resource_name();
}
inline const std::string& QueryWriteStatusRequest::_internal_resource_name() const {
  return resource_name_.Get();
}
inline void QueryWriteStatusRequest::_internal_set_resource_name(const std::string& value) {
  
  resource_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void QueryWriteStatusRequest::set_resource_name(std::string&& value) {
  
  resource_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.bytestream.QueryWriteStatusRequest.resource_name)
}
inline void QueryWriteStatusRequest::set_resource_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  resource_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.bytestream.QueryWriteStatusRequest.resource_name)
}
inline void QueryWriteStatusRequest::set_resource_name(const char* value,
    size_t size) {
  
  resource_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.bytestream.QueryWriteStatusRequest.resource_name)
}
inline std::string* QueryWriteStatusRequest::_internal_mutable_resource_name() {
  
  return resource_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* QueryWriteStatusRequest::release_resource_name() {
  // @@protoc_insertion_point(field_release:google.bytestream.QueryWriteStatusRequest.resource_name)
  return resource_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void QueryWriteStatusRequest::set_allocated_resource_name(std::string* resource_name) {
  if (resource_name != nullptr) {
    
  } else {
    
  }
  resource_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), resource_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.bytestream.QueryWriteStatusRequest.resource_name)
}

// -------------------------------------------------------------------

// QueryWriteStatusResponse

// int64 committed_size = 1;
inline void QueryWriteStatusResponse::clear_committed_size() {
  committed_size_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 QueryWriteStatusResponse::_internal_committed_size() const {
  return committed_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 QueryWriteStatusResponse::committed_size() const {
  // @@protoc_insertion_point(field_get:google.bytestream.QueryWriteStatusResponse.committed_size)
  return _internal_committed_size();
}
inline void QueryWriteStatusResponse::_internal_set_committed_size(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  committed_size_ = value;
}
inline void QueryWriteStatusResponse::set_committed_size(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_committed_size(value);
  // @@protoc_insertion_point(field_set:google.bytestream.QueryWriteStatusResponse.committed_size)
}

// bool complete = 2;
inline void QueryWriteStatusResponse::clear_complete() {
  complete_ = false;
}
inline bool QueryWriteStatusResponse::_internal_complete() const {
  return complete_;
}
inline bool QueryWriteStatusResponse::complete() const {
  // @@protoc_insertion_point(field_get:google.bytestream.QueryWriteStatusResponse.complete)
  return _internal_complete();
}
inline void QueryWriteStatusResponse::_internal_set_complete(bool value) {
  
  complete_ = value;
}
inline void QueryWriteStatusResponse::set_complete(bool value) {
  _internal_set_complete(value);
  // @@protoc_insertion_point(field_set:google.bytestream.QueryWriteStatusResponse.complete)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace bytestream
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_2fbytestream_2fbytestream_2eproto
