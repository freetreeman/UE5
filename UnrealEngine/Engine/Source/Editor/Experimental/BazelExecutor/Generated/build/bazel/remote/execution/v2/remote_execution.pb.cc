//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//-V::568,590
#include "CoreMinimal.h"
#include "Misc/CoreMiscDefines.h"

THIRD_PARTY_INCLUDES_START
UE_PUSH_MACRO("TEXT")
#undef TEXT

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: build/bazel/remote/execution/v2/remote_execution.proto

#include "build/bazel/remote/execution/v2/remote_execution.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace build {
namespace bazel {
namespace remote {
namespace execution {
namespace v2 {
constexpr Action::Action(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : salt_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , command_digest_(nullptr)
  , input_root_digest_(nullptr)
  , timeout_(nullptr)
  , platform_(nullptr)
  , do_not_cache_(false){}
struct ActionDefaultTypeInternal {
  constexpr ActionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ActionDefaultTypeInternal() {}
  union {
    Action _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ActionDefaultTypeInternal _Action_default_instance_;
constexpr Command_EnvironmentVariable::Command_EnvironmentVariable(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , value_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Command_EnvironmentVariableDefaultTypeInternal {
  constexpr Command_EnvironmentVariableDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Command_EnvironmentVariableDefaultTypeInternal() {}
  union {
    Command_EnvironmentVariable _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Command_EnvironmentVariableDefaultTypeInternal _Command_EnvironmentVariable_default_instance_;
constexpr Command::Command(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : arguments_()
  , environment_variables_()
  , output_files_()
  , output_directories_()
  , output_paths_()
  , output_node_properties_()
  , working_directory_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , platform_(nullptr){}
struct CommandDefaultTypeInternal {
  constexpr CommandDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CommandDefaultTypeInternal() {}
  union {
    Command _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CommandDefaultTypeInternal _Command_default_instance_;
constexpr Platform_Property::Platform_Property(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , value_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Platform_PropertyDefaultTypeInternal {
  constexpr Platform_PropertyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Platform_PropertyDefaultTypeInternal() {}
  union {
    Platform_Property _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Platform_PropertyDefaultTypeInternal _Platform_Property_default_instance_;
constexpr Platform::Platform(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : properties_(){}
struct PlatformDefaultTypeInternal {
  constexpr PlatformDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PlatformDefaultTypeInternal() {}
  union {
    Platform _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PlatformDefaultTypeInternal _Platform_default_instance_;
constexpr Directory::Directory(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : files_()
  , directories_()
  , symlinks_()
  , node_properties_(nullptr){}
struct DirectoryDefaultTypeInternal {
  constexpr DirectoryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DirectoryDefaultTypeInternal() {}
  union {
    Directory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DirectoryDefaultTypeInternal _Directory_default_instance_;
constexpr NodeProperty::NodeProperty(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , value_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct NodePropertyDefaultTypeInternal {
  constexpr NodePropertyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NodePropertyDefaultTypeInternal() {}
  union {
    NodeProperty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NodePropertyDefaultTypeInternal _NodeProperty_default_instance_;
constexpr NodeProperties::NodeProperties(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : properties_()
  , mtime_(nullptr)
  , unix_mode_(nullptr){}
struct NodePropertiesDefaultTypeInternal {
  constexpr NodePropertiesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NodePropertiesDefaultTypeInternal() {}
  union {
    NodeProperties _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NodePropertiesDefaultTypeInternal _NodeProperties_default_instance_;
constexpr FileNode::FileNode(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , digest_(nullptr)
  , node_properties_(nullptr)
  , is_executable_(false){}
struct FileNodeDefaultTypeInternal {
  constexpr FileNodeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FileNodeDefaultTypeInternal() {}
  union {
    FileNode _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FileNodeDefaultTypeInternal _FileNode_default_instance_;
constexpr DirectoryNode::DirectoryNode(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , digest_(nullptr){}
struct DirectoryNodeDefaultTypeInternal {
  constexpr DirectoryNodeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DirectoryNodeDefaultTypeInternal() {}
  union {
    DirectoryNode _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DirectoryNodeDefaultTypeInternal _DirectoryNode_default_instance_;
constexpr SymlinkNode::SymlinkNode(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , target_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , node_properties_(nullptr){}
struct SymlinkNodeDefaultTypeInternal {
  constexpr SymlinkNodeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SymlinkNodeDefaultTypeInternal() {}
  union {
    SymlinkNode _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SymlinkNodeDefaultTypeInternal _SymlinkNode_default_instance_;
constexpr Digest::Digest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , size_bytes_(PROTOBUF_LONGLONG(0)){}
struct DigestDefaultTypeInternal {
  constexpr DigestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DigestDefaultTypeInternal() {}
  union {
    Digest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DigestDefaultTypeInternal _Digest_default_instance_;
constexpr ExecutedActionMetadata::ExecutedActionMetadata(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : auxiliary_metadata_()
  , worker_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , queued_timestamp_(nullptr)
  , worker_start_timestamp_(nullptr)
  , worker_completed_timestamp_(nullptr)
  , input_fetch_start_timestamp_(nullptr)
  , input_fetch_completed_timestamp_(nullptr)
  , execution_start_timestamp_(nullptr)
  , execution_completed_timestamp_(nullptr)
  , output_upload_start_timestamp_(nullptr)
  , output_upload_completed_timestamp_(nullptr){}
struct ExecutedActionMetadataDefaultTypeInternal {
  constexpr ExecutedActionMetadataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ExecutedActionMetadataDefaultTypeInternal() {}
  union {
    ExecutedActionMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ExecutedActionMetadataDefaultTypeInternal _ExecutedActionMetadata_default_instance_;
constexpr ActionResult::ActionResult(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : output_files_()
  , output_directories_()
  , output_file_symlinks_()
  , output_directory_symlinks_()
  , output_symlinks_()
  , stdout_raw_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , stderr_raw_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , stdout_digest_(nullptr)
  , stderr_digest_(nullptr)
  , execution_metadata_(nullptr)
  , exit_code_(0){}
struct ActionResultDefaultTypeInternal {
  constexpr ActionResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ActionResultDefaultTypeInternal() {}
  union {
    ActionResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ActionResultDefaultTypeInternal _ActionResult_default_instance_;
constexpr OutputFile::OutputFile(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : path_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , contents_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , digest_(nullptr)
  , node_properties_(nullptr)
  , is_executable_(false){}
struct OutputFileDefaultTypeInternal {
  constexpr OutputFileDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OutputFileDefaultTypeInternal() {}
  union {
    OutputFile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OutputFileDefaultTypeInternal _OutputFile_default_instance_;
constexpr Tree::Tree(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : children_()
  , root_(nullptr){}
struct TreeDefaultTypeInternal {
  constexpr TreeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TreeDefaultTypeInternal() {}
  union {
    Tree _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TreeDefaultTypeInternal _Tree_default_instance_;
constexpr OutputDirectory::OutputDirectory(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : path_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tree_digest_(nullptr){}
struct OutputDirectoryDefaultTypeInternal {
  constexpr OutputDirectoryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OutputDirectoryDefaultTypeInternal() {}
  union {
    OutputDirectory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OutputDirectoryDefaultTypeInternal _OutputDirectory_default_instance_;
constexpr OutputSymlink::OutputSymlink(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : path_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , target_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , node_properties_(nullptr){}
struct OutputSymlinkDefaultTypeInternal {
  constexpr OutputSymlinkDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OutputSymlinkDefaultTypeInternal() {}
  union {
    OutputSymlink _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OutputSymlinkDefaultTypeInternal _OutputSymlink_default_instance_;
constexpr ExecutionPolicy::ExecutionPolicy(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : priority_(0){}
struct ExecutionPolicyDefaultTypeInternal {
  constexpr ExecutionPolicyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ExecutionPolicyDefaultTypeInternal() {}
  union {
    ExecutionPolicy _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ExecutionPolicyDefaultTypeInternal _ExecutionPolicy_default_instance_;
constexpr ResultsCachePolicy::ResultsCachePolicy(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : priority_(0){}
struct ResultsCachePolicyDefaultTypeInternal {
  constexpr ResultsCachePolicyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResultsCachePolicyDefaultTypeInternal() {}
  union {
    ResultsCachePolicy _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResultsCachePolicyDefaultTypeInternal _ResultsCachePolicy_default_instance_;
constexpr ExecuteRequest::ExecuteRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : instance_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , action_digest_(nullptr)
  , execution_policy_(nullptr)
  , results_cache_policy_(nullptr)
  , skip_cache_lookup_(false){}
struct ExecuteRequestDefaultTypeInternal {
  constexpr ExecuteRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ExecuteRequestDefaultTypeInternal() {}
  union {
    ExecuteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ExecuteRequestDefaultTypeInternal _ExecuteRequest_default_instance_;
constexpr LogFile::LogFile(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : digest_(nullptr)
  , human_readable_(false){}
struct LogFileDefaultTypeInternal {
  constexpr LogFileDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LogFileDefaultTypeInternal() {}
  union {
    LogFile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LogFileDefaultTypeInternal _LogFile_default_instance_;
constexpr ExecuteResponse_ServerLogsEntry_DoNotUse::ExecuteResponse_ServerLogsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ExecuteResponse_ServerLogsEntry_DoNotUseDefaultTypeInternal {
  constexpr ExecuteResponse_ServerLogsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ExecuteResponse_ServerLogsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ExecuteResponse_ServerLogsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ExecuteResponse_ServerLogsEntry_DoNotUseDefaultTypeInternal _ExecuteResponse_ServerLogsEntry_DoNotUse_default_instance_;
constexpr ExecuteResponse::ExecuteResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : server_logs_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , status_(nullptr)
  , cached_result_(false){}
struct ExecuteResponseDefaultTypeInternal {
  constexpr ExecuteResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ExecuteResponseDefaultTypeInternal() {}
  union {
    ExecuteResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ExecuteResponseDefaultTypeInternal _ExecuteResponse_default_instance_;
constexpr ExecutionStage::ExecutionStage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ExecutionStageDefaultTypeInternal {
  constexpr ExecutionStageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ExecutionStageDefaultTypeInternal() {}
  union {
    ExecutionStage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ExecutionStageDefaultTypeInternal _ExecutionStage_default_instance_;
constexpr ExecuteOperationMetadata::ExecuteOperationMetadata(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : stdout_stream_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , stderr_stream_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , action_digest_(nullptr)
  , stage_(0)
{}
struct ExecuteOperationMetadataDefaultTypeInternal {
  constexpr ExecuteOperationMetadataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ExecuteOperationMetadataDefaultTypeInternal() {}
  union {
    ExecuteOperationMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ExecuteOperationMetadataDefaultTypeInternal _ExecuteOperationMetadata_default_instance_;
constexpr WaitExecutionRequest::WaitExecutionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct WaitExecutionRequestDefaultTypeInternal {
  constexpr WaitExecutionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WaitExecutionRequestDefaultTypeInternal() {}
  union {
    WaitExecutionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WaitExecutionRequestDefaultTypeInternal _WaitExecutionRequest_default_instance_;
constexpr GetActionResultRequest::GetActionResultRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : inline_output_files_()
  , instance_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , action_digest_(nullptr)
  , inline_stdout_(false)
  , inline_stderr_(false){}
struct GetActionResultRequestDefaultTypeInternal {
  constexpr GetActionResultRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetActionResultRequestDefaultTypeInternal() {}
  union {
    GetActionResultRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetActionResultRequestDefaultTypeInternal _GetActionResultRequest_default_instance_;
constexpr UpdateActionResultRequest::UpdateActionResultRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : instance_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , action_digest_(nullptr)
  , action_result_(nullptr)
  , results_cache_policy_(nullptr){}
struct UpdateActionResultRequestDefaultTypeInternal {
  constexpr UpdateActionResultRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateActionResultRequestDefaultTypeInternal() {}
  union {
    UpdateActionResultRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateActionResultRequestDefaultTypeInternal _UpdateActionResultRequest_default_instance_;
constexpr FindMissingBlobsRequest::FindMissingBlobsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : blob_digests_()
  , instance_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct FindMissingBlobsRequestDefaultTypeInternal {
  constexpr FindMissingBlobsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FindMissingBlobsRequestDefaultTypeInternal() {}
  union {
    FindMissingBlobsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FindMissingBlobsRequestDefaultTypeInternal _FindMissingBlobsRequest_default_instance_;
constexpr FindMissingBlobsResponse::FindMissingBlobsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : missing_blob_digests_(){}
struct FindMissingBlobsResponseDefaultTypeInternal {
  constexpr FindMissingBlobsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FindMissingBlobsResponseDefaultTypeInternal() {}
  union {
    FindMissingBlobsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FindMissingBlobsResponseDefaultTypeInternal _FindMissingBlobsResponse_default_instance_;
constexpr BatchUpdateBlobsRequest_Request::BatchUpdateBlobsRequest_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , digest_(nullptr){}
struct BatchUpdateBlobsRequest_RequestDefaultTypeInternal {
  constexpr BatchUpdateBlobsRequest_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BatchUpdateBlobsRequest_RequestDefaultTypeInternal() {}
  union {
    BatchUpdateBlobsRequest_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BatchUpdateBlobsRequest_RequestDefaultTypeInternal _BatchUpdateBlobsRequest_Request_default_instance_;
constexpr BatchUpdateBlobsRequest::BatchUpdateBlobsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : requests_()
  , instance_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct BatchUpdateBlobsRequestDefaultTypeInternal {
  constexpr BatchUpdateBlobsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BatchUpdateBlobsRequestDefaultTypeInternal() {}
  union {
    BatchUpdateBlobsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BatchUpdateBlobsRequestDefaultTypeInternal _BatchUpdateBlobsRequest_default_instance_;
constexpr BatchUpdateBlobsResponse_Response::BatchUpdateBlobsResponse_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : digest_(nullptr)
  , status_(nullptr){}
struct BatchUpdateBlobsResponse_ResponseDefaultTypeInternal {
  constexpr BatchUpdateBlobsResponse_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BatchUpdateBlobsResponse_ResponseDefaultTypeInternal() {}
  union {
    BatchUpdateBlobsResponse_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BatchUpdateBlobsResponse_ResponseDefaultTypeInternal _BatchUpdateBlobsResponse_Response_default_instance_;
constexpr BatchUpdateBlobsResponse::BatchUpdateBlobsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : responses_(){}
struct BatchUpdateBlobsResponseDefaultTypeInternal {
  constexpr BatchUpdateBlobsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BatchUpdateBlobsResponseDefaultTypeInternal() {}
  union {
    BatchUpdateBlobsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BatchUpdateBlobsResponseDefaultTypeInternal _BatchUpdateBlobsResponse_default_instance_;
constexpr BatchReadBlobsRequest::BatchReadBlobsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : digests_()
  , instance_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct BatchReadBlobsRequestDefaultTypeInternal {
  constexpr BatchReadBlobsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BatchReadBlobsRequestDefaultTypeInternal() {}
  union {
    BatchReadBlobsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BatchReadBlobsRequestDefaultTypeInternal _BatchReadBlobsRequest_default_instance_;
constexpr BatchReadBlobsResponse_Response::BatchReadBlobsResponse_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , digest_(nullptr)
  , status_(nullptr){}
struct BatchReadBlobsResponse_ResponseDefaultTypeInternal {
  constexpr BatchReadBlobsResponse_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BatchReadBlobsResponse_ResponseDefaultTypeInternal() {}
  union {
    BatchReadBlobsResponse_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BatchReadBlobsResponse_ResponseDefaultTypeInternal _BatchReadBlobsResponse_Response_default_instance_;
constexpr BatchReadBlobsResponse::BatchReadBlobsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : responses_(){}
struct BatchReadBlobsResponseDefaultTypeInternal {
  constexpr BatchReadBlobsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BatchReadBlobsResponseDefaultTypeInternal() {}
  union {
    BatchReadBlobsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BatchReadBlobsResponseDefaultTypeInternal _BatchReadBlobsResponse_default_instance_;
constexpr GetTreeRequest::GetTreeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : instance_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , root_digest_(nullptr)
  , page_size_(0){}
struct GetTreeRequestDefaultTypeInternal {
  constexpr GetTreeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetTreeRequestDefaultTypeInternal() {}
  union {
    GetTreeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetTreeRequestDefaultTypeInternal _GetTreeRequest_default_instance_;
constexpr GetTreeResponse::GetTreeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : directories_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetTreeResponseDefaultTypeInternal {
  constexpr GetTreeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetTreeResponseDefaultTypeInternal() {}
  union {
    GetTreeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetTreeResponseDefaultTypeInternal _GetTreeResponse_default_instance_;
constexpr GetCapabilitiesRequest::GetCapabilitiesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : instance_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetCapabilitiesRequestDefaultTypeInternal {
  constexpr GetCapabilitiesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetCapabilitiesRequestDefaultTypeInternal() {}
  union {
    GetCapabilitiesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetCapabilitiesRequestDefaultTypeInternal _GetCapabilitiesRequest_default_instance_;
constexpr ServerCapabilities::ServerCapabilities(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : cache_capabilities_(nullptr)
  , execution_capabilities_(nullptr)
  , deprecated_api_version_(nullptr)
  , low_api_version_(nullptr)
  , high_api_version_(nullptr){}
struct ServerCapabilitiesDefaultTypeInternal {
  constexpr ServerCapabilitiesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ServerCapabilitiesDefaultTypeInternal() {}
  union {
    ServerCapabilities _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ServerCapabilitiesDefaultTypeInternal _ServerCapabilities_default_instance_;
constexpr DigestFunction::DigestFunction(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct DigestFunctionDefaultTypeInternal {
  constexpr DigestFunctionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DigestFunctionDefaultTypeInternal() {}
  union {
    DigestFunction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DigestFunctionDefaultTypeInternal _DigestFunction_default_instance_;
constexpr ActionCacheUpdateCapabilities::ActionCacheUpdateCapabilities(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : update_enabled_(false){}
struct ActionCacheUpdateCapabilitiesDefaultTypeInternal {
  constexpr ActionCacheUpdateCapabilitiesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ActionCacheUpdateCapabilitiesDefaultTypeInternal() {}
  union {
    ActionCacheUpdateCapabilities _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ActionCacheUpdateCapabilitiesDefaultTypeInternal _ActionCacheUpdateCapabilities_default_instance_;
constexpr PriorityCapabilities_PriorityRange::PriorityCapabilities_PriorityRange(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : min_priority_(0)
  , max_priority_(0){}
struct PriorityCapabilities_PriorityRangeDefaultTypeInternal {
  constexpr PriorityCapabilities_PriorityRangeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PriorityCapabilities_PriorityRangeDefaultTypeInternal() {}
  union {
    PriorityCapabilities_PriorityRange _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PriorityCapabilities_PriorityRangeDefaultTypeInternal _PriorityCapabilities_PriorityRange_default_instance_;
constexpr PriorityCapabilities::PriorityCapabilities(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : priorities_(){}
struct PriorityCapabilitiesDefaultTypeInternal {
  constexpr PriorityCapabilitiesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PriorityCapabilitiesDefaultTypeInternal() {}
  union {
    PriorityCapabilities _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PriorityCapabilitiesDefaultTypeInternal _PriorityCapabilities_default_instance_;
constexpr SymlinkAbsolutePathStrategy::SymlinkAbsolutePathStrategy(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct SymlinkAbsolutePathStrategyDefaultTypeInternal {
  constexpr SymlinkAbsolutePathStrategyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SymlinkAbsolutePathStrategyDefaultTypeInternal() {}
  union {
    SymlinkAbsolutePathStrategy _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SymlinkAbsolutePathStrategyDefaultTypeInternal _SymlinkAbsolutePathStrategy_default_instance_;
constexpr CacheCapabilities::CacheCapabilities(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : digest_function_()
  , _digest_function_cached_byte_size_()
  , action_cache_update_capabilities_(nullptr)
  , cache_priority_capabilities_(nullptr)
  , max_batch_total_size_bytes_(PROTOBUF_LONGLONG(0))
  , symlink_absolute_path_strategy_(0)
{}
struct CacheCapabilitiesDefaultTypeInternal {
  constexpr CacheCapabilitiesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CacheCapabilitiesDefaultTypeInternal() {}
  union {
    CacheCapabilities _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CacheCapabilitiesDefaultTypeInternal _CacheCapabilities_default_instance_;
constexpr ExecutionCapabilities::ExecutionCapabilities(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : supported_node_properties_()
  , execution_priority_capabilities_(nullptr)
  , digest_function_(0)

  , exec_enabled_(false){}
struct ExecutionCapabilitiesDefaultTypeInternal {
  constexpr ExecutionCapabilitiesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ExecutionCapabilitiesDefaultTypeInternal() {}
  union {
    ExecutionCapabilities _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ExecutionCapabilitiesDefaultTypeInternal _ExecutionCapabilities_default_instance_;
constexpr ToolDetails::ToolDetails(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tool_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tool_version_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ToolDetailsDefaultTypeInternal {
  constexpr ToolDetailsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ToolDetailsDefaultTypeInternal() {}
  union {
    ToolDetails _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ToolDetailsDefaultTypeInternal _ToolDetails_default_instance_;
constexpr RequestMetadata::RequestMetadata(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : action_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tool_invocation_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , correlated_invocations_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tool_details_(nullptr){}
struct RequestMetadataDefaultTypeInternal {
  constexpr RequestMetadataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RequestMetadataDefaultTypeInternal() {}
  union {
    RequestMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RequestMetadataDefaultTypeInternal _RequestMetadata_default_instance_;
}  // namespace v2
}  // namespace execution
}  // namespace remote
}  // namespace bazel
}  // namespace build
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto[51];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Action, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Action, command_digest_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Action, input_root_digest_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Action, timeout_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Action, do_not_cache_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Action, salt_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Action, platform_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Command_EnvironmentVariable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Command_EnvironmentVariable, name_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Command_EnvironmentVariable, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Command, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Command, arguments_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Command, environment_variables_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Command, output_files_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Command, output_directories_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Command, output_paths_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Command, platform_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Command, working_directory_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Command, output_node_properties_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Platform_Property, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Platform_Property, name_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Platform_Property, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Platform, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Platform, properties_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Directory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Directory, files_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Directory, directories_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Directory, symlinks_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Directory, node_properties_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::NodeProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::NodeProperty, name_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::NodeProperty, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::NodeProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::NodeProperties, properties_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::NodeProperties, mtime_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::NodeProperties, unix_mode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::FileNode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::FileNode, name_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::FileNode, digest_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::FileNode, is_executable_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::FileNode, node_properties_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::DirectoryNode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::DirectoryNode, name_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::DirectoryNode, digest_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::SymlinkNode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::SymlinkNode, name_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::SymlinkNode, target_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::SymlinkNode, node_properties_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Digest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Digest, hash_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Digest, size_bytes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecutedActionMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecutedActionMetadata, worker_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecutedActionMetadata, queued_timestamp_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecutedActionMetadata, worker_start_timestamp_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecutedActionMetadata, worker_completed_timestamp_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecutedActionMetadata, input_fetch_start_timestamp_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecutedActionMetadata, input_fetch_completed_timestamp_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecutedActionMetadata, execution_start_timestamp_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecutedActionMetadata, execution_completed_timestamp_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecutedActionMetadata, output_upload_start_timestamp_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecutedActionMetadata, output_upload_completed_timestamp_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecutedActionMetadata, auxiliary_metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ActionResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ActionResult, output_files_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ActionResult, output_file_symlinks_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ActionResult, output_symlinks_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ActionResult, output_directories_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ActionResult, output_directory_symlinks_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ActionResult, exit_code_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ActionResult, stdout_raw_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ActionResult, stdout_digest_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ActionResult, stderr_raw_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ActionResult, stderr_digest_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ActionResult, execution_metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::OutputFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::OutputFile, path_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::OutputFile, digest_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::OutputFile, is_executable_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::OutputFile, contents_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::OutputFile, node_properties_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Tree, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Tree, root_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::Tree, children_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::OutputDirectory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::OutputDirectory, path_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::OutputDirectory, tree_digest_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::OutputSymlink, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::OutputSymlink, path_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::OutputSymlink, target_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::OutputSymlink, node_properties_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecutionPolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecutionPolicy, priority_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ResultsCachePolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ResultsCachePolicy, priority_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecuteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecuteRequest, instance_name_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecuteRequest, skip_cache_lookup_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecuteRequest, action_digest_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecuteRequest, execution_policy_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecuteRequest, results_cache_policy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::LogFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::LogFile, digest_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::LogFile, human_readable_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecuteResponse_ServerLogsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecuteResponse_ServerLogsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecuteResponse_ServerLogsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecuteResponse_ServerLogsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecuteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecuteResponse, result_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecuteResponse, cached_result_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecuteResponse, status_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecuteResponse, server_logs_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecuteResponse, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecutionStage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecuteOperationMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecuteOperationMetadata, stage_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecuteOperationMetadata, action_digest_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecuteOperationMetadata, stdout_stream_name_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecuteOperationMetadata, stderr_stream_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::WaitExecutionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::WaitExecutionRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::GetActionResultRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::GetActionResultRequest, instance_name_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::GetActionResultRequest, action_digest_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::GetActionResultRequest, inline_stdout_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::GetActionResultRequest, inline_stderr_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::GetActionResultRequest, inline_output_files_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::UpdateActionResultRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::UpdateActionResultRequest, instance_name_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::UpdateActionResultRequest, action_digest_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::UpdateActionResultRequest, action_result_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::UpdateActionResultRequest, results_cache_policy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::FindMissingBlobsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::FindMissingBlobsRequest, instance_name_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::FindMissingBlobsRequest, blob_digests_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::FindMissingBlobsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::FindMissingBlobsResponse, missing_blob_digests_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::BatchUpdateBlobsRequest_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::BatchUpdateBlobsRequest_Request, digest_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::BatchUpdateBlobsRequest_Request, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::BatchUpdateBlobsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::BatchUpdateBlobsRequest, instance_name_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::BatchUpdateBlobsRequest, requests_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::BatchUpdateBlobsResponse_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::BatchUpdateBlobsResponse_Response, digest_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::BatchUpdateBlobsResponse_Response, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::BatchUpdateBlobsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::BatchUpdateBlobsResponse, responses_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::BatchReadBlobsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::BatchReadBlobsRequest, instance_name_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::BatchReadBlobsRequest, digests_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::BatchReadBlobsResponse_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::BatchReadBlobsResponse_Response, digest_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::BatchReadBlobsResponse_Response, data_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::BatchReadBlobsResponse_Response, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::BatchReadBlobsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::BatchReadBlobsResponse, responses_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::GetTreeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::GetTreeRequest, instance_name_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::GetTreeRequest, root_digest_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::GetTreeRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::GetTreeRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::GetTreeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::GetTreeResponse, directories_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::GetTreeResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::GetCapabilitiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::GetCapabilitiesRequest, instance_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ServerCapabilities, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ServerCapabilities, cache_capabilities_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ServerCapabilities, execution_capabilities_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ServerCapabilities, deprecated_api_version_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ServerCapabilities, low_api_version_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ServerCapabilities, high_api_version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::DigestFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ActionCacheUpdateCapabilities, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ActionCacheUpdateCapabilities, update_enabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::PriorityCapabilities_PriorityRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::PriorityCapabilities_PriorityRange, min_priority_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::PriorityCapabilities_PriorityRange, max_priority_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::PriorityCapabilities, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::PriorityCapabilities, priorities_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::SymlinkAbsolutePathStrategy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::CacheCapabilities, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::CacheCapabilities, digest_function_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::CacheCapabilities, action_cache_update_capabilities_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::CacheCapabilities, cache_priority_capabilities_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::CacheCapabilities, max_batch_total_size_bytes_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::CacheCapabilities, symlink_absolute_path_strategy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecutionCapabilities, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecutionCapabilities, digest_function_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecutionCapabilities, exec_enabled_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecutionCapabilities, execution_priority_capabilities_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ExecutionCapabilities, supported_node_properties_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ToolDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ToolDetails, tool_name_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::ToolDetails, tool_version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::RequestMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::RequestMetadata, tool_details_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::RequestMetadata, action_id_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::RequestMetadata, tool_invocation_id_),
  PROTOBUF_FIELD_OFFSET(::build::bazel::remote::execution::v2::RequestMetadata, correlated_invocations_id_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::build::bazel::remote::execution::v2::Action)},
  { 11, -1, sizeof(::build::bazel::remote::execution::v2::Command_EnvironmentVariable)},
  { 18, -1, sizeof(::build::bazel::remote::execution::v2::Command)},
  { 31, -1, sizeof(::build::bazel::remote::execution::v2::Platform_Property)},
  { 38, -1, sizeof(::build::bazel::remote::execution::v2::Platform)},
  { 44, -1, sizeof(::build::bazel::remote::execution::v2::Directory)},
  { 53, -1, sizeof(::build::bazel::remote::execution::v2::NodeProperty)},
  { 60, -1, sizeof(::build::bazel::remote::execution::v2::NodeProperties)},
  { 68, -1, sizeof(::build::bazel::remote::execution::v2::FileNode)},
  { 77, -1, sizeof(::build::bazel::remote::execution::v2::DirectoryNode)},
  { 84, -1, sizeof(::build::bazel::remote::execution::v2::SymlinkNode)},
  { 92, -1, sizeof(::build::bazel::remote::execution::v2::Digest)},
  { 99, -1, sizeof(::build::bazel::remote::execution::v2::ExecutedActionMetadata)},
  { 115, -1, sizeof(::build::bazel::remote::execution::v2::ActionResult)},
  { 131, -1, sizeof(::build::bazel::remote::execution::v2::OutputFile)},
  { 141, -1, sizeof(::build::bazel::remote::execution::v2::Tree)},
  { 148, -1, sizeof(::build::bazel::remote::execution::v2::OutputDirectory)},
  { 155, -1, sizeof(::build::bazel::remote::execution::v2::OutputSymlink)},
  { 163, -1, sizeof(::build::bazel::remote::execution::v2::ExecutionPolicy)},
  { 169, -1, sizeof(::build::bazel::remote::execution::v2::ResultsCachePolicy)},
  { 175, -1, sizeof(::build::bazel::remote::execution::v2::ExecuteRequest)},
  { 185, -1, sizeof(::build::bazel::remote::execution::v2::LogFile)},
  { 192, 199, sizeof(::build::bazel::remote::execution::v2::ExecuteResponse_ServerLogsEntry_DoNotUse)},
  { 201, -1, sizeof(::build::bazel::remote::execution::v2::ExecuteResponse)},
  { 211, -1, sizeof(::build::bazel::remote::execution::v2::ExecutionStage)},
  { 216, -1, sizeof(::build::bazel::remote::execution::v2::ExecuteOperationMetadata)},
  { 225, -1, sizeof(::build::bazel::remote::execution::v2::WaitExecutionRequest)},
  { 231, -1, sizeof(::build::bazel::remote::execution::v2::GetActionResultRequest)},
  { 241, -1, sizeof(::build::bazel::remote::execution::v2::UpdateActionResultRequest)},
  { 250, -1, sizeof(::build::bazel::remote::execution::v2::FindMissingBlobsRequest)},
  { 257, -1, sizeof(::build::bazel::remote::execution::v2::FindMissingBlobsResponse)},
  { 263, -1, sizeof(::build::bazel::remote::execution::v2::BatchUpdateBlobsRequest_Request)},
  { 270, -1, sizeof(::build::bazel::remote::execution::v2::BatchUpdateBlobsRequest)},
  { 277, -1, sizeof(::build::bazel::remote::execution::v2::BatchUpdateBlobsResponse_Response)},
  { 284, -1, sizeof(::build::bazel::remote::execution::v2::BatchUpdateBlobsResponse)},
  { 290, -1, sizeof(::build::bazel::remote::execution::v2::BatchReadBlobsRequest)},
  { 297, -1, sizeof(::build::bazel::remote::execution::v2::BatchReadBlobsResponse_Response)},
  { 305, -1, sizeof(::build::bazel::remote::execution::v2::BatchReadBlobsResponse)},
  { 311, -1, sizeof(::build::bazel::remote::execution::v2::GetTreeRequest)},
  { 320, -1, sizeof(::build::bazel::remote::execution::v2::GetTreeResponse)},
  { 327, -1, sizeof(::build::bazel::remote::execution::v2::GetCapabilitiesRequest)},
  { 333, -1, sizeof(::build::bazel::remote::execution::v2::ServerCapabilities)},
  { 343, -1, sizeof(::build::bazel::remote::execution::v2::DigestFunction)},
  { 348, -1, sizeof(::build::bazel::remote::execution::v2::ActionCacheUpdateCapabilities)},
  { 354, -1, sizeof(::build::bazel::remote::execution::v2::PriorityCapabilities_PriorityRange)},
  { 361, -1, sizeof(::build::bazel::remote::execution::v2::PriorityCapabilities)},
  { 367, -1, sizeof(::build::bazel::remote::execution::v2::SymlinkAbsolutePathStrategy)},
  { 372, -1, sizeof(::build::bazel::remote::execution::v2::CacheCapabilities)},
  { 382, -1, sizeof(::build::bazel::remote::execution::v2::ExecutionCapabilities)},
  { 391, -1, sizeof(::build::bazel::remote::execution::v2::ToolDetails)},
  { 398, -1, sizeof(::build::bazel::remote::execution::v2::RequestMetadata)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_Action_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_Command_EnvironmentVariable_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_Command_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_Platform_Property_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_Platform_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_Directory_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_NodeProperty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_NodeProperties_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_FileNode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_DirectoryNode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_SymlinkNode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_Digest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_ExecutedActionMetadata_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_ActionResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_OutputFile_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_Tree_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_OutputDirectory_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_OutputSymlink_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_ExecutionPolicy_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_ResultsCachePolicy_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_ExecuteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_LogFile_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_ExecuteResponse_ServerLogsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_ExecuteResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_ExecutionStage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_ExecuteOperationMetadata_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_WaitExecutionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_GetActionResultRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_UpdateActionResultRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_FindMissingBlobsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_FindMissingBlobsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_BatchUpdateBlobsRequest_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_BatchUpdateBlobsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_BatchUpdateBlobsResponse_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_BatchUpdateBlobsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_BatchReadBlobsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_BatchReadBlobsResponse_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_BatchReadBlobsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_GetTreeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_GetTreeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_GetCapabilitiesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_ServerCapabilities_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_DigestFunction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_ActionCacheUpdateCapabilities_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_PriorityCapabilities_PriorityRange_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_PriorityCapabilities_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_SymlinkAbsolutePathStrategy_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_CacheCapabilities_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_ExecutionCapabilities_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_ToolDetails_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::build::bazel::remote::execution::v2::_RequestMetadata_default_instance_),
};

const char descriptor_table_protodef_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n6build/bazel/remote/execution/v2/remote"
  "_execution.proto\022\037build.bazel.remote.exe"
  "cution.v2\032\037build/bazel/semver/semver.pro"
  "to\032\034google/api/annotations.proto\032#google"
  "/longrunning/operations.proto\032\031google/pr"
  "otobuf/any.proto\032\036google/protobuf/durati"
  "on.proto\032\037google/protobuf/timestamp.prot"
  "o\032\036google/protobuf/wrappers.proto\032\027googl"
  "e/rpc/status.proto\"\246\002\n\006Action\022\?\n\016command"
  "_digest\030\001 \001(\0132\'.build.bazel.remote.execu"
  "tion.v2.Digest\022B\n\021input_root_digest\030\002 \001("
  "\0132\'.build.bazel.remote.execution.v2.Dige"
  "st\022*\n\007timeout\030\006 \001(\0132\031.google.protobuf.Du"
  "ration\022\024\n\014do_not_cache\030\007 \001(\010\022\014\n\004salt\030\t \001"
  "(\014\022;\n\010platform\030\n \001(\0132).build.bazel.remot"
  "e.execution.v2.PlatformJ\004\010\003\020\006J\004\010\010\020\t\"\355\002\n\007"
  "Command\022\021\n\targuments\030\001 \003(\t\022[\n\025environmen"
  "t_variables\030\002 \003(\0132<.build.bazel.remote.e"
  "xecution.v2.Command.EnvironmentVariable\022"
  "\024\n\014output_files\030\003 \003(\t\022\032\n\022output_director"
  "ies\030\004 \003(\t\022\024\n\014output_paths\030\007 \003(\t\022;\n\010platf"
  "orm\030\005 \001(\0132).build.bazel.remote.execution"
  ".v2.Platform\022\031\n\021working_directory\030\006 \001(\t\022"
  "\036\n\026output_node_properties\030\010 \003(\t\0322\n\023Envir"
  "onmentVariable\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 "
  "\001(\t\"{\n\010Platform\022F\n\nproperties\030\001 \003(\01322.bu"
  "ild.bazel.remote.execution.v2.Platform.P"
  "roperty\032\'\n\010Property\022\014\n\004name\030\001 \001(\t\022\r\n\005val"
  "ue\030\002 \001(\t\"\232\002\n\tDirectory\0228\n\005files\030\001 \003(\0132)."
  "build.bazel.remote.execution.v2.FileNode"
  "\022C\n\013directories\030\002 \003(\0132..build.bazel.remo"
  "te.execution.v2.DirectoryNode\022>\n\010symlink"
  "s\030\003 \003(\0132,.build.bazel.remote.execution.v"
  "2.SymlinkNode\022H\n\017node_properties\030\005 \001(\0132/"
  ".build.bazel.remote.execution.v2.NodePro"
  "pertiesJ\004\010\004\020\005\"+\n\014NodeProperty\022\014\n\004name\030\001 "
  "\001(\t\022\r\n\005value\030\002 \001(\t\"\257\001\n\016NodeProperties\022A\n"
  "\nproperties\030\001 \003(\0132-.build.bazel.remote.e"
  "xecution.v2.NodeProperty\022)\n\005mtime\030\002 \001(\0132"
  "\032.google.protobuf.Timestamp\022/\n\tunix_mode"
  "\030\003 \001(\0132\034.google.protobuf.UInt32Value\"\276\001\n"
  "\010FileNode\022\014\n\004name\030\001 \001(\t\0227\n\006digest\030\002 \001(\0132"
  "\'.build.bazel.remote.execution.v2.Digest"
  "\022\025\n\ris_executable\030\004 \001(\010\022H\n\017node_properti"
  "es\030\006 \001(\0132/.build.bazel.remote.execution."
  "v2.NodePropertiesJ\004\010\003\020\004J\004\010\005\020\006\"V\n\rDirecto"
  "ryNode\022\014\n\004name\030\001 \001(\t\0227\n\006digest\030\002 \001(\0132\'.b"
  "uild.bazel.remote.execution.v2.Digest\"{\n"
  "\013SymlinkNode\022\014\n\004name\030\001 \001(\t\022\016\n\006target\030\002 \001"
  "(\t\022H\n\017node_properties\030\004 \001(\0132/.build.baze"
  "l.remote.execution.v2.NodePropertiesJ\004\010\003"
  "\020\004\"*\n\006Digest\022\014\n\004hash\030\001 \001(\t\022\022\n\nsize_bytes"
  "\030\002 \001(\003\"\236\005\n\026ExecutedActionMetadata\022\016\n\006wor"
  "ker\030\001 \001(\t\0224\n\020queued_timestamp\030\002 \001(\0132\032.go"
  "ogle.protobuf.Timestamp\022:\n\026worker_start_"
  "timestamp\030\003 \001(\0132\032.google.protobuf.Timest"
  "amp\022>\n\032worker_completed_timestamp\030\004 \001(\0132"
  "\032.google.protobuf.Timestamp\022\?\n\033input_fet"
  "ch_start_timestamp\030\005 \001(\0132\032.google.protob"
  "uf.Timestamp\022C\n\037input_fetch_completed_ti"
  "mestamp\030\006 \001(\0132\032.google.protobuf.Timestam"
  "p\022=\n\031execution_start_timestamp\030\007 \001(\0132\032.g"
  "oogle.protobuf.Timestamp\022A\n\035execution_co"
  "mpleted_timestamp\030\010 \001(\0132\032.google.protobu"
  "f.Timestamp\022A\n\035output_upload_start_times"
  "tamp\030\t \001(\0132\032.google.protobuf.Timestamp\022E"
  "\n!output_upload_completed_timestamp\030\n \001("
  "\0132\032.google.protobuf.Timestamp\0220\n\022auxilia"
  "ry_metadata\030\013 \003(\0132\024.google.protobuf.Any\""
  "\237\005\n\014ActionResult\022A\n\014output_files\030\002 \003(\0132+"
  ".build.bazel.remote.execution.v2.OutputF"
  "ile\022L\n\024output_file_symlinks\030\n \003(\0132..buil"
  "d.bazel.remote.execution.v2.OutputSymlin"
  "k\022G\n\017output_symlinks\030\014 \003(\0132..build.bazel"
  ".remote.execution.v2.OutputSymlink\022L\n\022ou"
  "tput_directories\030\003 \003(\01320.build.bazel.rem"
  "ote.execution.v2.OutputDirectory\022Q\n\031outp"
  "ut_directory_symlinks\030\013 \003(\0132..build.baze"
  "l.remote.execution.v2.OutputSymlink\022\021\n\te"
  "xit_code\030\004 \001(\005\022\022\n\nstdout_raw\030\005 \001(\014\022>\n\rst"
  "dout_digest\030\006 \001(\0132\'.build.bazel.remote.e"
  "xecution.v2.Digest\022\022\n\nstderr_raw\030\007 \001(\014\022>"
  "\n\rstderr_digest\030\010 \001(\0132\'.build.bazel.remo"
  "te.execution.v2.Digest\022S\n\022execution_meta"
  "data\030\t \001(\01327.build.bazel.remote.executio"
  "n.v2.ExecutedActionMetadataJ\004\010\001\020\002\"\322\001\n\nOu"
  "tputFile\022\014\n\004path\030\001 \001(\t\0227\n\006digest\030\002 \001(\0132\'"
  ".build.bazel.remote.execution.v2.Digest\022"
  "\025\n\ris_executable\030\004 \001(\010\022\020\n\010contents\030\005 \001(\014"
  "\022H\n\017node_properties\030\007 \001(\0132/.build.bazel."
  "remote.execution.v2.NodePropertiesJ\004\010\003\020\004"
  "J\004\010\006\020\007\"~\n\004Tree\0228\n\004root\030\001 \001(\0132*.build.baz"
  "el.remote.execution.v2.Directory\022<\n\010chil"
  "dren\030\002 \003(\0132*.build.bazel.remote.executio"
  "n.v2.Directory\"c\n\017OutputDirectory\022\014\n\004pat"
  "h\030\001 \001(\t\022<\n\013tree_digest\030\003 \001(\0132\'.build.baz"
  "el.remote.execution.v2.DigestJ\004\010\002\020\003\"}\n\rO"
  "utputSymlink\022\014\n\004path\030\001 \001(\t\022\016\n\006target\030\002 \001"
  "(\t\022H\n\017node_properties\030\004 \001(\0132/.build.baze"
  "l.remote.execution.v2.NodePropertiesJ\004\010\003"
  "\020\004\"#\n\017ExecutionPolicy\022\020\n\010priority\030\001 \001(\005\""
  "&\n\022ResultsCachePolicy\022\020\n\010priority\030\001 \001(\005\""
  "\263\002\n\016ExecuteRequest\022\025\n\rinstance_name\030\001 \001("
  "\t\022\031\n\021skip_cache_lookup\030\003 \001(\010\022>\n\raction_d"
  "igest\030\006 \001(\0132\'.build.bazel.remote.executi"
  "on.v2.Digest\022J\n\020execution_policy\030\007 \001(\01320"
  ".build.bazel.remote.execution.v2.Executi"
  "onPolicy\022Q\n\024results_cache_policy\030\010 \001(\01323"
  ".build.bazel.remote.execution.v2.Results"
  "CachePolicyJ\004\010\002\020\003J\004\010\004\020\005J\004\010\005\020\006\"Z\n\007LogFile"
  "\0227\n\006digest\030\001 \001(\0132\'.build.bazel.remote.ex"
  "ecution.v2.Digest\022\026\n\016human_readable\030\002 \001("
  "\010\"\320\002\n\017ExecuteResponse\022=\n\006result\030\001 \001(\0132-."
  "build.bazel.remote.execution.v2.ActionRe"
  "sult\022\025\n\rcached_result\030\002 \001(\010\022\"\n\006status\030\003 "
  "\001(\0132\022.google.rpc.Status\022U\n\013server_logs\030\004"
  " \003(\0132@.build.bazel.remote.execution.v2.E"
  "xecuteResponse.ServerLogsEntry\022\017\n\007messag"
  "e\030\005 \001(\t\032[\n\017ServerLogsEntry\022\013\n\003key\030\001 \001(\t\022"
  "7\n\005value\030\002 \001(\0132(.build.bazel.remote.exec"
  "ution.v2.LogFile:\0028\001\"a\n\016ExecutionStage\"O"
  "\n\005Value\022\013\n\007UNKNOWN\020\000\022\017\n\013CACHE_CHECK\020\001\022\n\n"
  "\006QUEUED\020\002\022\r\n\tEXECUTING\020\003\022\r\n\tCOMPLETED\020\004\""
  "\330\001\n\030ExecuteOperationMetadata\022D\n\005stage\030\001 "
  "\001(\01625.build.bazel.remote.execution.v2.Ex"
  "ecutionStage.Value\022>\n\raction_digest\030\002 \001("
  "\0132\'.build.bazel.remote.execution.v2.Dige"
  "st\022\032\n\022stdout_stream_name\030\003 \001(\t\022\032\n\022stderr"
  "_stream_name\030\004 \001(\t\"$\n\024WaitExecutionReque"
  "st\022\014\n\004name\030\001 \001(\t\"\272\001\n\026GetActionResultRequ"
  "est\022\025\n\rinstance_name\030\001 \001(\t\022>\n\raction_dig"
  "est\030\002 \001(\0132\'.build.bazel.remote.execution"
  ".v2.Digest\022\025\n\rinline_stdout\030\003 \001(\010\022\025\n\rinl"
  "ine_stderr\030\004 \001(\010\022\033\n\023inline_output_files\030"
  "\005 \003(\t\"\213\002\n\031UpdateActionResultRequest\022\025\n\ri"
  "nstance_name\030\001 \001(\t\022>\n\raction_digest\030\002 \001("
  "\0132\'.build.bazel.remote.execution.v2.Dige"
  "st\022D\n\raction_result\030\003 \001(\0132-.build.bazel."
  "remote.execution.v2.ActionResult\022Q\n\024resu"
  "lts_cache_policy\030\004 \001(\01323.build.bazel.rem"
  "ote.execution.v2.ResultsCachePolicy\"o\n\027F"
  "indMissingBlobsRequest\022\025\n\rinstance_name\030"
  "\001 \001(\t\022=\n\014blob_digests\030\002 \003(\0132\'.build.baze"
  "l.remote.execution.v2.Digest\"a\n\030FindMiss"
  "ingBlobsResponse\022E\n\024missing_blob_digests"
  "\030\002 \003(\0132\'.build.bazel.remote.execution.v2"
  ".Digest\"\326\001\n\027BatchUpdateBlobsRequest\022\025\n\ri"
  "nstance_name\030\001 \001(\t\022R\n\010requests\030\002 \003(\0132@.b"
  "uild.bazel.remote.execution.v2.BatchUpda"
  "teBlobsRequest.Request\032P\n\007Request\0227\n\006dig"
  "est\030\001 \001(\0132\'.build.bazel.remote.execution"
  ".v2.Digest\022\014\n\004data\030\002 \001(\014\"\332\001\n\030BatchUpdate"
  "BlobsResponse\022U\n\tresponses\030\001 \003(\0132B.build"
  ".bazel.remote.execution.v2.BatchUpdateBl"
  "obsResponse.Response\032g\n\010Response\0227\n\006dige"
  "st\030\001 \001(\0132\'.build.bazel.remote.execution."
  "v2.Digest\022\"\n\006status\030\002 \001(\0132\022.google.rpc.S"
  "tatus\"h\n\025BatchReadBlobsRequest\022\025\n\rinstan"
  "ce_name\030\001 \001(\t\0228\n\007digests\030\002 \003(\0132\'.build.b"
  "azel.remote.execution.v2.Digest\"\344\001\n\026Batc"
  "hReadBlobsResponse\022S\n\tresponses\030\001 \003(\0132@."
  "build.bazel.remote.execution.v2.BatchRea"
  "dBlobsResponse.Response\032u\n\010Response\0227\n\006d"
  "igest\030\001 \001(\0132\'.build.bazel.remote.executi"
  "on.v2.Digest\022\014\n\004data\030\002 \001(\014\022\"\n\006status\030\003 \001"
  "(\0132\022.google.rpc.Status\"\214\001\n\016GetTreeReques"
  "t\022\025\n\rinstance_name\030\001 \001(\t\022<\n\013root_digest\030"
  "\002 \001(\0132\'.build.bazel.remote.execution.v2."
  "Digest\022\021\n\tpage_size\030\003 \001(\005\022\022\n\npage_token\030"
  "\004 \001(\t\"k\n\017GetTreeResponse\022\?\n\013directories\030"
  "\001 \003(\0132*.build.bazel.remote.execution.v2."
  "Directory\022\027\n\017next_page_token\030\002 \001(\t\"/\n\026Ge"
  "tCapabilitiesRequest\022\025\n\rinstance_name\030\001 "
  "\001(\t\"\343\002\n\022ServerCapabilities\022N\n\022cache_capa"
  "bilities\030\001 \001(\01322.build.bazel.remote.exec"
  "ution.v2.CacheCapabilities\022V\n\026execution_"
  "capabilities\030\002 \001(\01326.build.bazel.remote."
  "execution.v2.ExecutionCapabilities\022:\n\026de"
  "precated_api_version\030\003 \001(\0132\032.build.bazel"
  ".semver.SemVer\0223\n\017low_api_version\030\004 \001(\0132"
  "\032.build.bazel.semver.SemVer\0224\n\020high_api_"
  "version\030\005 \001(\0132\032.build.bazel.semver.SemVe"
  "r\"s\n\016DigestFunction\"a\n\005Value\022\013\n\007UNKNOWN\020"
  "\000\022\n\n\006SHA256\020\001\022\010\n\004SHA1\020\002\022\007\n\003MD5\020\003\022\007\n\003VSO\020"
  "\004\022\n\n\006SHA384\020\005\022\n\n\006SHA512\020\006\022\013\n\007MURMUR3\020\007\"7"
  "\n\035ActionCacheUpdateCapabilities\022\026\n\016updat"
  "e_enabled\030\001 \001(\010\"\254\001\n\024PriorityCapabilities"
  "\022W\n\npriorities\030\001 \003(\0132C.build.bazel.remot"
  "e.execution.v2.PriorityCapabilities.Prio"
  "rityRange\032;\n\rPriorityRange\022\024\n\014min_priori"
  "ty\030\001 \001(\005\022\024\n\014max_priority\030\002 \001(\005\"P\n\033Symlin"
  "kAbsolutePathStrategy\"1\n\005Value\022\013\n\007UNKNOW"
  "N\020\000\022\016\n\nDISALLOWED\020\001\022\013\n\007ALLOWED\020\002\"\271\003\n\021Cac"
  "heCapabilities\022N\n\017digest_function\030\001 \003(\0162"
  "5.build.bazel.remote.execution.v2.Digest"
  "Function.Value\022h\n action_cache_update_ca"
  "pabilities\030\002 \001(\0132>.build.bazel.remote.ex"
  "ecution.v2.ActionCacheUpdateCapabilities"
  "\022Z\n\033cache_priority_capabilities\030\003 \001(\01325."
  "build.bazel.remote.execution.v2.Priority"
  "Capabilities\022\"\n\032max_batch_total_size_byt"
  "es\030\004 \001(\003\022j\n\036symlink_absolute_path_strate"
  "gy\030\005 \001(\0162B.build.bazel.remote.execution."
  "v2.SymlinkAbsolutePathStrategy.Value\"\200\002\n"
  "\025ExecutionCapabilities\022N\n\017digest_functio"
  "n\030\001 \001(\01625.build.bazel.remote.execution.v"
  "2.DigestFunction.Value\022\024\n\014exec_enabled\030\002"
  " \001(\010\022^\n\037execution_priority_capabilities\030"
  "\003 \001(\01325.build.bazel.remote.execution.v2."
  "PriorityCapabilities\022!\n\031supported_node_p"
  "roperties\030\004 \003(\t\"6\n\013ToolDetails\022\021\n\ttool_n"
  "ame\030\001 \001(\t\022\024\n\014tool_version\030\002 \001(\t\"\247\001\n\017Requ"
  "estMetadata\022B\n\014tool_details\030\001 \001(\0132,.buil"
  "d.bazel.remote.execution.v2.ToolDetails\022"
  "\021\n\taction_id\030\002 \001(\t\022\032\n\022tool_invocation_id"
  "\030\003 \001(\t\022!\n\031correlated_invocations_id\030\004 \001("
  "\t2\271\002\n\tExecution\022\216\001\n\007Execute\022/.build.baze"
  "l.remote.execution.v2.ExecuteRequest\032\035.g"
  "oogle.longrunning.Operation\"1\202\323\344\223\002+\"&/v2"
  "/{instance_name=**}/actions:execute:\001*0\001"
  "\022\232\001\n\rWaitExecution\0225.build.bazel.remote."
  "execution.v2.WaitExecutionRequest\032\035.goog"
  "le.longrunning.Operation\"1\202\323\344\223\002+\"&/v2/{n"
  "ame=operations/**}:waitExecution:\001*0\0012\326\003"
  "\n\013ActionCache\022\327\001\n\017GetActionResult\0227.buil"
  "d.bazel.remote.execution.v2.GetActionRes"
  "ultRequest\032-.build.bazel.remote.executio"
  "n.v2.ActionResult\"\\\202\323\344\223\002V\022T/v2/{instance"
  "_name=**}/actionResults/{action_digest.h"
  "ash}/{action_digest.size_bytes}\022\354\001\n\022Upda"
  "teActionResult\022:.build.bazel.remote.exec"
  "ution.v2.UpdateActionResultRequest\032-.bui"
  "ld.bazel.remote.execution.v2.ActionResul"
  "t\"k\202\323\344\223\002e\032T/v2/{instance_name=**}/action"
  "Results/{action_digest.hash}/{action_dig"
  "est.size_bytes}:\raction_result2\233\006\n\031Conte"
  "ntAddressableStorage\022\274\001\n\020FindMissingBlob"
  "s\0228.build.bazel.remote.execution.v2.Find"
  "MissingBlobsRequest\0329.build.bazel.remote"
  ".execution.v2.FindMissingBlobsResponse\"3"
  "\202\323\344\223\002-\"(/v2/{instance_name=**}/blobs:fin"
  "dMissing:\001*\022\274\001\n\020BatchUpdateBlobs\0228.build"
  ".bazel.remote.execution.v2.BatchUpdateBl"
  "obsRequest\0329.build.bazel.remote.executio"
  "n.v2.BatchUpdateBlobsResponse\"3\202\323\344\223\002-\"(/"
  "v2/{instance_name=**}/blobs:batchUpdate:"
  "\001*\022\264\001\n\016BatchReadBlobs\0226.build.bazel.remo"
  "te.execution.v2.BatchReadBlobsRequest\0327."
  "build.bazel.remote.execution.v2.BatchRea"
  "dBlobsResponse\"1\202\323\344\223\002+\"&/v2/{instance_na"
  "me=**}/blobs:batchRead:\001*\022\310\001\n\007GetTree\022/."
  "build.bazel.remote.execution.v2.GetTreeR"
  "equest\0320.build.bazel.remote.execution.v2"
  ".GetTreeResponse\"X\202\323\344\223\002R\022P/v2/{instance_"
  "name=**}/blobs/{root_digest.hash}/{root_"
  "digest.size_bytes}:getTree0\0012\275\001\n\014Capabil"
  "ities\022\254\001\n\017GetCapabilities\0227.build.bazel."
  "remote.execution.v2.GetCapabilitiesReque"
  "st\0323.build.bazel.remote.execution.v2.Ser"
  "verCapabilities\"+\202\323\344\223\002%\022#/v2/{instance_n"
  "ame=**}/capabilitiesBr\n\037build.bazel.remo"
  "te.execution.v2B\024RemoteExecutionProtoP\001Z"
  "\017remoteexecution\242\002\003REX\252\002\037Build.Bazel.Rem"
  "ote.Execution.V2b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto_deps[8] = {
  &::descriptor_table_build_2fbazel_2fsemver_2fsemver_2eproto,
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2flongrunning_2foperations_2eproto,
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
  &::descriptor_table_google_2frpc_2fstatus_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto = {
  false, false, 10544, descriptor_table_protodef_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto, "build/bazel/remote/execution/v2/remote_execution.proto", 
  &descriptor_table_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto_once, descriptor_table_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto_deps, 8, 51,
  schemas, file_default_instances, TableStruct_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto::offsets,
  file_level_metadata_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto, file_level_enum_descriptors_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto, file_level_service_descriptors_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto);
  return descriptor_table_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto(&descriptor_table_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto);
namespace build {
namespace bazel {
namespace remote {
namespace execution {
namespace v2 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ExecutionStage_Value_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto);
  return file_level_enum_descriptors_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto[0];
}
bool ExecutionStage_Value_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ExecutionStage_Value ExecutionStage::UNKNOWN;
constexpr ExecutionStage_Value ExecutionStage::CACHE_CHECK;
constexpr ExecutionStage_Value ExecutionStage::QUEUED;
constexpr ExecutionStage_Value ExecutionStage::EXECUTING;
constexpr ExecutionStage_Value ExecutionStage::COMPLETED;
constexpr ExecutionStage_Value ExecutionStage::Value_MIN;
constexpr ExecutionStage_Value ExecutionStage::Value_MAX;
constexpr int ExecutionStage::Value_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DigestFunction_Value_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto);
  return file_level_enum_descriptors_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto[1];
}
bool DigestFunction_Value_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr DigestFunction_Value DigestFunction::UNKNOWN;
constexpr DigestFunction_Value DigestFunction::SHA256;
constexpr DigestFunction_Value DigestFunction::SHA1;
constexpr DigestFunction_Value DigestFunction::MD5;
constexpr DigestFunction_Value DigestFunction::VSO;
constexpr DigestFunction_Value DigestFunction::SHA384;
constexpr DigestFunction_Value DigestFunction::SHA512;
constexpr DigestFunction_Value DigestFunction::MURMUR3;
constexpr DigestFunction_Value DigestFunction::Value_MIN;
constexpr DigestFunction_Value DigestFunction::Value_MAX;
constexpr int DigestFunction::Value_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SymlinkAbsolutePathStrategy_Value_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto);
  return file_level_enum_descriptors_build_2fbazel_2fremote_2fexecution_2fv2_2fremote_5fexecution_2eproto[2];
}
bool SymlinkAbsolutePathStrategy_Value_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SymlinkAbsolutePathStrategy_Value SymlinkAbsolutePathStrategy::UNKNOWN;
constexpr SymlinkAbsolutePathStrategy_Value SymlinkAbsolutePathStrategy::DISALLOWED;
constexpr SymlinkAbsolutePathStrategy_Value SymlinkAbsolutePathStrategy::ALLOWED;
constexpr SymlinkAbsolutePathStrategy_Value SymlinkAbsolutePathStrategy::Value_MIN;
constexpr SymlinkAbsolutePathStrategy_Value SymlinkAbsolutePathStrategy::Value_MAX;
constexpr int SymlinkAbsolutePathStrategy::Value_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class Action::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::Digest& command_digest(const Action* msg);
  static const ::build::bazel::remote::execution::v2::Digest& input_root_digest(const Action* msg);
  static const PROTOBUF_NAMESPACE_ID::Duration& timeout(const Action* msg);
  static const ::build::bazel::remote::execution::v2::Platform& platform(const Action* msg);
};

const ::build::bazel::remote::execution::v2::Digest&
Action::_Internal::command_digest(const Action* msg) {
  return *msg->command_digest_;
}
const ::build::bazel::remote::execution::v2::Digest&
Action::_Internal::input_root_digest(const Action* msg) {
  return *msg->input_root_digest_;
}
const PROTOBUF_NAMESPACE_ID::Duration&
Action::_Internal::timeout(const Action* msg) {
  return *msg->timeout_;
}
const ::build::bazel::remote::execution::v2::Platform&
Action::_Internal::platform(const Action* msg) {
  return *msg->platform_;
}
void Action::clear_timeout() {
  if (GetArena() == nullptr && timeout_ != nullptr) {
    delete timeout_;
  }
  timeout_ = nullptr;
}
Action::Action(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.Action)
}
Action::Action(const Action& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  salt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_salt().empty()) {
    salt_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_salt(), 
      GetArena());
  }
  if (from._internal_has_command_digest()) {
    command_digest_ = new ::build::bazel::remote::execution::v2::Digest(*from.command_digest_);
  } else {
    command_digest_ = nullptr;
  }
  if (from._internal_has_input_root_digest()) {
    input_root_digest_ = new ::build::bazel::remote::execution::v2::Digest(*from.input_root_digest_);
  } else {
    input_root_digest_ = nullptr;
  }
  if (from._internal_has_timeout()) {
    timeout_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.timeout_);
  } else {
    timeout_ = nullptr;
  }
  if (from._internal_has_platform()) {
    platform_ = new ::build::bazel::remote::execution::v2::Platform(*from.platform_);
  } else {
    platform_ = nullptr;
  }
  do_not_cache_ = from.do_not_cache_;
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.Action)
}

void Action::SharedCtor() {
salt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&command_digest_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&do_not_cache_) -
    reinterpret_cast<char*>(&command_digest_)) + sizeof(do_not_cache_));
}

Action::~Action() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.Action)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Action::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  salt_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete command_digest_;
  if (this != internal_default_instance()) delete input_root_digest_;
  if (this != internal_default_instance()) delete timeout_;
  if (this != internal_default_instance()) delete platform_;
}

void Action::ArenaDtor(void* object) {
  Action* _this = reinterpret_cast< Action* >(object);
  (void)_this;
}
void Action::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Action::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Action::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.Action)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  salt_.ClearToEmpty();
  if (GetArena() == nullptr && command_digest_ != nullptr) {
    delete command_digest_;
  }
  command_digest_ = nullptr;
  if (GetArena() == nullptr && input_root_digest_ != nullptr) {
    delete input_root_digest_;
  }
  input_root_digest_ = nullptr;
  if (GetArena() == nullptr && timeout_ != nullptr) {
    delete timeout_;
  }
  timeout_ = nullptr;
  if (GetArena() == nullptr && platform_ != nullptr) {
    delete platform_;
  }
  platform_ = nullptr;
  do_not_cache_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Action::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .build.bazel.remote.execution.v2.Digest command_digest = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_command_digest(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.Digest input_root_digest = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_input_root_digest(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration timeout = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_timeout(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool do_not_cache = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          do_not_cache_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes salt = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_salt();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.Platform platform = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_platform(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Action::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.Action)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .build.bazel.remote.execution.v2.Digest command_digest = 1;
  if (this->has_command_digest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::command_digest(this), target, stream);
  }

  // .build.bazel.remote.execution.v2.Digest input_root_digest = 2;
  if (this->has_input_root_digest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::input_root_digest(this), target, stream);
  }

  // .google.protobuf.Duration timeout = 6;
  if (this->has_timeout()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::timeout(this), target, stream);
  }

  // bool do_not_cache = 7;
  if (this->do_not_cache() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_do_not_cache(), target);
  }

  // bytes salt = 9;
  if (this->salt().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        9, this->_internal_salt(), target);
  }

  // .build.bazel.remote.execution.v2.Platform platform = 10;
  if (this->has_platform()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::platform(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.Action)
  return target;
}

size_t Action::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.Action)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes salt = 9;
  if (this->salt().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_salt());
  }

  // .build.bazel.remote.execution.v2.Digest command_digest = 1;
  if (this->has_command_digest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *command_digest_);
  }

  // .build.bazel.remote.execution.v2.Digest input_root_digest = 2;
  if (this->has_input_root_digest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *input_root_digest_);
  }

  // .google.protobuf.Duration timeout = 6;
  if (this->has_timeout()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *timeout_);
  }

  // .build.bazel.remote.execution.v2.Platform platform = 10;
  if (this->has_platform()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *platform_);
  }

  // bool do_not_cache = 7;
  if (this->do_not_cache() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Action::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.Action)
  GOOGLE_DCHECK_NE(&from, this);
  const Action* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Action>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.Action)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.Action)
    MergeFrom(*source);
  }
}

void Action::MergeFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.Action)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.salt().size() > 0) {
    _internal_set_salt(from._internal_salt());
  }
  if (from.has_command_digest()) {
    _internal_mutable_command_digest()->::build::bazel::remote::execution::v2::Digest::MergeFrom(from._internal_command_digest());
  }
  if (from.has_input_root_digest()) {
    _internal_mutable_input_root_digest()->::build::bazel::remote::execution::v2::Digest::MergeFrom(from._internal_input_root_digest());
  }
  if (from.has_timeout()) {
    _internal_mutable_timeout()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_timeout());
  }
  if (from.has_platform()) {
    _internal_mutable_platform()->::build::bazel::remote::execution::v2::Platform::MergeFrom(from._internal_platform());
  }
  if (from.do_not_cache() != 0) {
    _internal_set_do_not_cache(from._internal_do_not_cache());
  }
}

void Action::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action::CopyFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action::IsInitialized() const {
  return true;
}

void Action::InternalSwap(Action* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  salt_.Swap(&other->salt_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Action, do_not_cache_)
      + sizeof(Action::do_not_cache_)
      - PROTOBUF_FIELD_OFFSET(Action, command_digest_)>(
          reinterpret_cast<char*>(&command_digest_),
          reinterpret_cast<char*>(&other->command_digest_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Action::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Command_EnvironmentVariable::_Internal {
 public:
};

Command_EnvironmentVariable::Command_EnvironmentVariable(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.Command.EnvironmentVariable)
}
Command_EnvironmentVariable::Command_EnvironmentVariable(const Command_EnvironmentVariable& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_value(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.Command.EnvironmentVariable)
}

void Command_EnvironmentVariable::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Command_EnvironmentVariable::~Command_EnvironmentVariable() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.Command.EnvironmentVariable)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Command_EnvironmentVariable::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Command_EnvironmentVariable::ArenaDtor(void* object) {
  Command_EnvironmentVariable* _this = reinterpret_cast< Command_EnvironmentVariable* >(object);
  (void)_this;
}
void Command_EnvironmentVariable::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Command_EnvironmentVariable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Command_EnvironmentVariable::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.Command.EnvironmentVariable)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  value_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Command_EnvironmentVariable::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.Command.EnvironmentVariable.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.Command.EnvironmentVariable.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Command_EnvironmentVariable::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.Command.EnvironmentVariable)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.Command.EnvironmentVariable.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.Command.EnvironmentVariable.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.Command.EnvironmentVariable)
  return target;
}

size_t Command_EnvironmentVariable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.Command.EnvironmentVariable)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Command_EnvironmentVariable::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.Command.EnvironmentVariable)
  GOOGLE_DCHECK_NE(&from, this);
  const Command_EnvironmentVariable* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Command_EnvironmentVariable>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.Command.EnvironmentVariable)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.Command.EnvironmentVariable)
    MergeFrom(*source);
  }
}

void Command_EnvironmentVariable::MergeFrom(const Command_EnvironmentVariable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.Command.EnvironmentVariable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void Command_EnvironmentVariable::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.Command.EnvironmentVariable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Command_EnvironmentVariable::CopyFrom(const Command_EnvironmentVariable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.Command.EnvironmentVariable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Command_EnvironmentVariable::IsInitialized() const {
  return true;
}

void Command_EnvironmentVariable::InternalSwap(Command_EnvironmentVariable* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Command_EnvironmentVariable::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Command::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::Platform& platform(const Command* msg);
};

const ::build::bazel::remote::execution::v2::Platform&
Command::_Internal::platform(const Command* msg) {
  return *msg->platform_;
}
Command::Command(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  arguments_(arena),
  environment_variables_(arena),
  output_files_(arena),
  output_directories_(arena),
  output_paths_(arena),
  output_node_properties_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.Command)
}
Command::Command(const Command& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      arguments_(from.arguments_),
      environment_variables_(from.environment_variables_),
      output_files_(from.output_files_),
      output_directories_(from.output_directories_),
      output_paths_(from.output_paths_),
      output_node_properties_(from.output_node_properties_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  working_directory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_working_directory().empty()) {
    working_directory_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_working_directory(), 
      GetArena());
  }
  if (from._internal_has_platform()) {
    platform_ = new ::build::bazel::remote::execution::v2::Platform(*from.platform_);
  } else {
    platform_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.Command)
}

void Command::SharedCtor() {
working_directory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
platform_ = nullptr;
}

Command::~Command() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.Command)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Command::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  working_directory_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete platform_;
}

void Command::ArenaDtor(void* object) {
  Command* _this = reinterpret_cast< Command* >(object);
  (void)_this;
}
void Command::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Command::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Command::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.Command)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arguments_.Clear();
  environment_variables_.Clear();
  output_files_.Clear();
  output_directories_.Clear();
  output_paths_.Clear();
  output_node_properties_.Clear();
  working_directory_.ClearToEmpty();
  if (GetArena() == nullptr && platform_ != nullptr) {
    delete platform_;
  }
  platform_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Command::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string arguments = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_arguments();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.Command.arguments"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .build.bazel.remote.execution.v2.Command.EnvironmentVariable environment_variables = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_environment_variables(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string output_files = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_output_files();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.Command.output_files"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string output_directories = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_output_directories();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.Command.output_directories"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.Platform platform = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_platform(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string working_directory = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_working_directory();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.Command.working_directory"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string output_paths = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_output_paths();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.Command.output_paths"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string output_node_properties = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_output_node_properties();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.Command.output_node_properties"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Command::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.Command)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string arguments = 1;
  for (int i = 0, n = this->_internal_arguments_size(); i < n; i++) {
    const auto& s = this->_internal_arguments(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.Command.arguments");
    target = stream->WriteString(1, s, target);
  }

  // repeated .build.bazel.remote.execution.v2.Command.EnvironmentVariable environment_variables = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_environment_variables_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_environment_variables(i), target, stream);
  }

  // repeated string output_files = 3;
  for (int i = 0, n = this->_internal_output_files_size(); i < n; i++) {
    const auto& s = this->_internal_output_files(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.Command.output_files");
    target = stream->WriteString(3, s, target);
  }

  // repeated string output_directories = 4;
  for (int i = 0, n = this->_internal_output_directories_size(); i < n; i++) {
    const auto& s = this->_internal_output_directories(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.Command.output_directories");
    target = stream->WriteString(4, s, target);
  }

  // .build.bazel.remote.execution.v2.Platform platform = 5;
  if (this->has_platform()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::platform(this), target, stream);
  }

  // string working_directory = 6;
  if (this->working_directory().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_working_directory().data(), static_cast<int>(this->_internal_working_directory().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.Command.working_directory");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_working_directory(), target);
  }

  // repeated string output_paths = 7;
  for (int i = 0, n = this->_internal_output_paths_size(); i < n; i++) {
    const auto& s = this->_internal_output_paths(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.Command.output_paths");
    target = stream->WriteString(7, s, target);
  }

  // repeated string output_node_properties = 8;
  for (int i = 0, n = this->_internal_output_node_properties_size(); i < n; i++) {
    const auto& s = this->_internal_output_node_properties(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.Command.output_node_properties");
    target = stream->WriteString(8, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.Command)
  return target;
}

size_t Command::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.Command)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string arguments = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(arguments_.size());
  for (int i = 0, n = arguments_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      arguments_.Get(i));
  }

  // repeated .build.bazel.remote.execution.v2.Command.EnvironmentVariable environment_variables = 2;
  total_size += 1UL * this->_internal_environment_variables_size();
  for (const auto& msg : this->environment_variables_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string output_files = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(output_files_.size());
  for (int i = 0, n = output_files_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      output_files_.Get(i));
  }

  // repeated string output_directories = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(output_directories_.size());
  for (int i = 0, n = output_directories_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      output_directories_.Get(i));
  }

  // repeated string output_paths = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(output_paths_.size());
  for (int i = 0, n = output_paths_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      output_paths_.Get(i));
  }

  // repeated string output_node_properties = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(output_node_properties_.size());
  for (int i = 0, n = output_node_properties_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      output_node_properties_.Get(i));
  }

  // string working_directory = 6;
  if (this->working_directory().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_working_directory());
  }

  // .build.bazel.remote.execution.v2.Platform platform = 5;
  if (this->has_platform()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *platform_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Command::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.Command)
  GOOGLE_DCHECK_NE(&from, this);
  const Command* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Command>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.Command)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.Command)
    MergeFrom(*source);
  }
}

void Command::MergeFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.Command)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arguments_.MergeFrom(from.arguments_);
  environment_variables_.MergeFrom(from.environment_variables_);
  output_files_.MergeFrom(from.output_files_);
  output_directories_.MergeFrom(from.output_directories_);
  output_paths_.MergeFrom(from.output_paths_);
  output_node_properties_.MergeFrom(from.output_node_properties_);
  if (from.working_directory().size() > 0) {
    _internal_set_working_directory(from._internal_working_directory());
  }
  if (from.has_platform()) {
    _internal_mutable_platform()->::build::bazel::remote::execution::v2::Platform::MergeFrom(from._internal_platform());
  }
}

void Command::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Command::CopyFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Command::IsInitialized() const {
  return true;
}

void Command::InternalSwap(Command* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  arguments_.InternalSwap(&other->arguments_);
  environment_variables_.InternalSwap(&other->environment_variables_);
  output_files_.InternalSwap(&other->output_files_);
  output_directories_.InternalSwap(&other->output_directories_);
  output_paths_.InternalSwap(&other->output_paths_);
  output_node_properties_.InternalSwap(&other->output_node_properties_);
  working_directory_.Swap(&other->working_directory_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(platform_, other->platform_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Command::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Platform_Property::_Internal {
 public:
};

Platform_Property::Platform_Property(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.Platform.Property)
}
Platform_Property::Platform_Property(const Platform_Property& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_value(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.Platform.Property)
}

void Platform_Property::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Platform_Property::~Platform_Property() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.Platform.Property)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Platform_Property::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Platform_Property::ArenaDtor(void* object) {
  Platform_Property* _this = reinterpret_cast< Platform_Property* >(object);
  (void)_this;
}
void Platform_Property::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Platform_Property::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Platform_Property::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.Platform.Property)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  value_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Platform_Property::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.Platform.Property.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.Platform.Property.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Platform_Property::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.Platform.Property)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.Platform.Property.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.Platform.Property.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.Platform.Property)
  return target;
}

size_t Platform_Property::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.Platform.Property)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Platform_Property::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.Platform.Property)
  GOOGLE_DCHECK_NE(&from, this);
  const Platform_Property* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Platform_Property>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.Platform.Property)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.Platform.Property)
    MergeFrom(*source);
  }
}

void Platform_Property::MergeFrom(const Platform_Property& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.Platform.Property)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void Platform_Property::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.Platform.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Platform_Property::CopyFrom(const Platform_Property& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.Platform.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Platform_Property::IsInitialized() const {
  return true;
}

void Platform_Property::InternalSwap(Platform_Property* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Platform_Property::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Platform::_Internal {
 public:
};

Platform::Platform(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  properties_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.Platform)
}
Platform::Platform(const Platform& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      properties_(from.properties_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.Platform)
}

void Platform::SharedCtor() {
}

Platform::~Platform() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.Platform)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Platform::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Platform::ArenaDtor(void* object) {
  Platform* _this = reinterpret_cast< Platform* >(object);
  (void)_this;
}
void Platform::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Platform::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Platform::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.Platform)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Platform::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .build.bazel.remote.execution.v2.Platform.Property properties = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_properties(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Platform::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.Platform)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.Platform.Property properties = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_properties_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_properties(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.Platform)
  return target;
}

size_t Platform::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.Platform)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.Platform.Property properties = 1;
  total_size += 1UL * this->_internal_properties_size();
  for (const auto& msg : this->properties_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Platform::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.Platform)
  GOOGLE_DCHECK_NE(&from, this);
  const Platform* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Platform>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.Platform)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.Platform)
    MergeFrom(*source);
  }
}

void Platform::MergeFrom(const Platform& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.Platform)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
}

void Platform::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.Platform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Platform::CopyFrom(const Platform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.Platform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Platform::IsInitialized() const {
  return true;
}

void Platform::InternalSwap(Platform* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  properties_.InternalSwap(&other->properties_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Platform::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Directory::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::NodeProperties& node_properties(const Directory* msg);
};

const ::build::bazel::remote::execution::v2::NodeProperties&
Directory::_Internal::node_properties(const Directory* msg) {
  return *msg->node_properties_;
}
Directory::Directory(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  files_(arena),
  directories_(arena),
  symlinks_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.Directory)
}
Directory::Directory(const Directory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      files_(from.files_),
      directories_(from.directories_),
      symlinks_(from.symlinks_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_node_properties()) {
    node_properties_ = new ::build::bazel::remote::execution::v2::NodeProperties(*from.node_properties_);
  } else {
    node_properties_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.Directory)
}

void Directory::SharedCtor() {
node_properties_ = nullptr;
}

Directory::~Directory() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.Directory)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Directory::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete node_properties_;
}

void Directory::ArenaDtor(void* object) {
  Directory* _this = reinterpret_cast< Directory* >(object);
  (void)_this;
}
void Directory::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Directory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Directory::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.Directory)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  files_.Clear();
  directories_.Clear();
  symlinks_.Clear();
  if (GetArena() == nullptr && node_properties_ != nullptr) {
    delete node_properties_;
  }
  node_properties_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Directory::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .build.bazel.remote.execution.v2.FileNode files = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_files(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .build.bazel.remote.execution.v2.DirectoryNode directories = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_directories(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .build.bazel.remote.execution.v2.SymlinkNode symlinks = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_symlinks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.NodeProperties node_properties = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_node_properties(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Directory::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.Directory)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.FileNode files = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_files_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_files(i), target, stream);
  }

  // repeated .build.bazel.remote.execution.v2.DirectoryNode directories = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_directories_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_directories(i), target, stream);
  }

  // repeated .build.bazel.remote.execution.v2.SymlinkNode symlinks = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_symlinks_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_symlinks(i), target, stream);
  }

  // .build.bazel.remote.execution.v2.NodeProperties node_properties = 5;
  if (this->has_node_properties()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::node_properties(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.Directory)
  return target;
}

size_t Directory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.Directory)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.FileNode files = 1;
  total_size += 1UL * this->_internal_files_size();
  for (const auto& msg : this->files_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .build.bazel.remote.execution.v2.DirectoryNode directories = 2;
  total_size += 1UL * this->_internal_directories_size();
  for (const auto& msg : this->directories_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .build.bazel.remote.execution.v2.SymlinkNode symlinks = 3;
  total_size += 1UL * this->_internal_symlinks_size();
  for (const auto& msg : this->symlinks_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .build.bazel.remote.execution.v2.NodeProperties node_properties = 5;
  if (this->has_node_properties()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *node_properties_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Directory::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.Directory)
  GOOGLE_DCHECK_NE(&from, this);
  const Directory* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Directory>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.Directory)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.Directory)
    MergeFrom(*source);
  }
}

void Directory::MergeFrom(const Directory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.Directory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  files_.MergeFrom(from.files_);
  directories_.MergeFrom(from.directories_);
  symlinks_.MergeFrom(from.symlinks_);
  if (from.has_node_properties()) {
    _internal_mutable_node_properties()->::build::bazel::remote::execution::v2::NodeProperties::MergeFrom(from._internal_node_properties());
  }
}

void Directory::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.Directory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Directory::CopyFrom(const Directory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.Directory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Directory::IsInitialized() const {
  return true;
}

void Directory::InternalSwap(Directory* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  files_.InternalSwap(&other->files_);
  directories_.InternalSwap(&other->directories_);
  symlinks_.InternalSwap(&other->symlinks_);
  swap(node_properties_, other->node_properties_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Directory::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class NodeProperty::_Internal {
 public:
};

NodeProperty::NodeProperty(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.NodeProperty)
}
NodeProperty::NodeProperty(const NodeProperty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_value(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.NodeProperty)
}

void NodeProperty::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

NodeProperty::~NodeProperty() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.NodeProperty)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void NodeProperty::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void NodeProperty::ArenaDtor(void* object) {
  NodeProperty* _this = reinterpret_cast< NodeProperty* >(object);
  (void)_this;
}
void NodeProperty::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NodeProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NodeProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.NodeProperty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  value_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NodeProperty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.NodeProperty.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.NodeProperty.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NodeProperty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.NodeProperty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.NodeProperty.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.NodeProperty.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.NodeProperty)
  return target;
}

size_t NodeProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.NodeProperty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeProperty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.NodeProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeProperty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NodeProperty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.NodeProperty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.NodeProperty)
    MergeFrom(*source);
  }
}

void NodeProperty::MergeFrom(const NodeProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.NodeProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void NodeProperty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.NodeProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeProperty::CopyFrom(const NodeProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.NodeProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeProperty::IsInitialized() const {
  return true;
}

void NodeProperty::InternalSwap(NodeProperty* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata NodeProperty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class NodeProperties::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& mtime(const NodeProperties* msg);
  static const PROTOBUF_NAMESPACE_ID::UInt32Value& unix_mode(const NodeProperties* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
NodeProperties::_Internal::mtime(const NodeProperties* msg) {
  return *msg->mtime_;
}
const PROTOBUF_NAMESPACE_ID::UInt32Value&
NodeProperties::_Internal::unix_mode(const NodeProperties* msg) {
  return *msg->unix_mode_;
}
void NodeProperties::clear_mtime() {
  if (GetArena() == nullptr && mtime_ != nullptr) {
    delete mtime_;
  }
  mtime_ = nullptr;
}
void NodeProperties::clear_unix_mode() {
  if (GetArena() == nullptr && unix_mode_ != nullptr) {
    delete unix_mode_;
  }
  unix_mode_ = nullptr;
}
NodeProperties::NodeProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  properties_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.NodeProperties)
}
NodeProperties::NodeProperties(const NodeProperties& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      properties_(from.properties_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mtime()) {
    mtime_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.mtime_);
  } else {
    mtime_ = nullptr;
  }
  if (from._internal_has_unix_mode()) {
    unix_mode_ = new PROTOBUF_NAMESPACE_ID::UInt32Value(*from.unix_mode_);
  } else {
    unix_mode_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.NodeProperties)
}

void NodeProperties::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&mtime_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&unix_mode_) -
    reinterpret_cast<char*>(&mtime_)) + sizeof(unix_mode_));
}

NodeProperties::~NodeProperties() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.NodeProperties)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void NodeProperties::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mtime_;
  if (this != internal_default_instance()) delete unix_mode_;
}

void NodeProperties::ArenaDtor(void* object) {
  NodeProperties* _this = reinterpret_cast< NodeProperties* >(object);
  (void)_this;
}
void NodeProperties::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NodeProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NodeProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.NodeProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  if (GetArena() == nullptr && mtime_ != nullptr) {
    delete mtime_;
  }
  mtime_ = nullptr;
  if (GetArena() == nullptr && unix_mode_ != nullptr) {
    delete unix_mode_;
  }
  unix_mode_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NodeProperties::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .build.bazel.remote.execution.v2.NodeProperty properties = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_properties(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp mtime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_mtime(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.UInt32Value unix_mode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_unix_mode(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NodeProperties::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.NodeProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.NodeProperty properties = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_properties_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_properties(i), target, stream);
  }

  // .google.protobuf.Timestamp mtime = 2;
  if (this->has_mtime()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::mtime(this), target, stream);
  }

  // .google.protobuf.UInt32Value unix_mode = 3;
  if (this->has_unix_mode()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::unix_mode(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.NodeProperties)
  return target;
}

size_t NodeProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.NodeProperties)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.NodeProperty properties = 1;
  total_size += 1UL * this->_internal_properties_size();
  for (const auto& msg : this->properties_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .google.protobuf.Timestamp mtime = 2;
  if (this->has_mtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mtime_);
  }

  // .google.protobuf.UInt32Value unix_mode = 3;
  if (this->has_unix_mode()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *unix_mode_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeProperties::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.NodeProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeProperties* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NodeProperties>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.NodeProperties)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.NodeProperties)
    MergeFrom(*source);
  }
}

void NodeProperties::MergeFrom(const NodeProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.NodeProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
  if (from.has_mtime()) {
    _internal_mutable_mtime()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_mtime());
  }
  if (from.has_unix_mode()) {
    _internal_mutable_unix_mode()->PROTOBUF_NAMESPACE_ID::UInt32Value::MergeFrom(from._internal_unix_mode());
  }
}

void NodeProperties::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.NodeProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeProperties::CopyFrom(const NodeProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.NodeProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeProperties::IsInitialized() const {
  return true;
}

void NodeProperties::InternalSwap(NodeProperties* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  properties_.InternalSwap(&other->properties_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NodeProperties, unix_mode_)
      + sizeof(NodeProperties::unix_mode_)
      - PROTOBUF_FIELD_OFFSET(NodeProperties, mtime_)>(
          reinterpret_cast<char*>(&mtime_),
          reinterpret_cast<char*>(&other->mtime_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NodeProperties::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FileNode::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::Digest& digest(const FileNode* msg);
  static const ::build::bazel::remote::execution::v2::NodeProperties& node_properties(const FileNode* msg);
};

const ::build::bazel::remote::execution::v2::Digest&
FileNode::_Internal::digest(const FileNode* msg) {
  return *msg->digest_;
}
const ::build::bazel::remote::execution::v2::NodeProperties&
FileNode::_Internal::node_properties(const FileNode* msg) {
  return *msg->node_properties_;
}
FileNode::FileNode(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.FileNode)
}
FileNode::FileNode(const FileNode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_digest()) {
    digest_ = new ::build::bazel::remote::execution::v2::Digest(*from.digest_);
  } else {
    digest_ = nullptr;
  }
  if (from._internal_has_node_properties()) {
    node_properties_ = new ::build::bazel::remote::execution::v2::NodeProperties(*from.node_properties_);
  } else {
    node_properties_ = nullptr;
  }
  is_executable_ = from.is_executable_;
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.FileNode)
}

void FileNode::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&digest_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_executable_) -
    reinterpret_cast<char*>(&digest_)) + sizeof(is_executable_));
}

FileNode::~FileNode() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.FileNode)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FileNode::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete digest_;
  if (this != internal_default_instance()) delete node_properties_;
}

void FileNode::ArenaDtor(void* object) {
  FileNode* _this = reinterpret_cast< FileNode* >(object);
  (void)_this;
}
void FileNode::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FileNode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FileNode::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.FileNode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArena() == nullptr && digest_ != nullptr) {
    delete digest_;
  }
  digest_ = nullptr;
  if (GetArena() == nullptr && node_properties_ != nullptr) {
    delete node_properties_;
  }
  node_properties_ = nullptr;
  is_executable_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileNode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.FileNode.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.Digest digest = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_digest(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_executable = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          is_executable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.NodeProperties node_properties = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_node_properties(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FileNode::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.FileNode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.FileNode.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .build.bazel.remote.execution.v2.Digest digest = 2;
  if (this->has_digest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::digest(this), target, stream);
  }

  // bool is_executable = 4;
  if (this->is_executable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_is_executable(), target);
  }

  // .build.bazel.remote.execution.v2.NodeProperties node_properties = 6;
  if (this->has_node_properties()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::node_properties(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.FileNode)
  return target;
}

size_t FileNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.FileNode)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .build.bazel.remote.execution.v2.Digest digest = 2;
  if (this->has_digest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *digest_);
  }

  // .build.bazel.remote.execution.v2.NodeProperties node_properties = 6;
  if (this->has_node_properties()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *node_properties_);
  }

  // bool is_executable = 4;
  if (this->is_executable() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileNode::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.FileNode)
  GOOGLE_DCHECK_NE(&from, this);
  const FileNode* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FileNode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.FileNode)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.FileNode)
    MergeFrom(*source);
  }
}

void FileNode::MergeFrom(const FileNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.FileNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_digest()) {
    _internal_mutable_digest()->::build::bazel::remote::execution::v2::Digest::MergeFrom(from._internal_digest());
  }
  if (from.has_node_properties()) {
    _internal_mutable_node_properties()->::build::bazel::remote::execution::v2::NodeProperties::MergeFrom(from._internal_node_properties());
  }
  if (from.is_executable() != 0) {
    _internal_set_is_executable(from._internal_is_executable());
  }
}

void FileNode::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.FileNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileNode::CopyFrom(const FileNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.FileNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileNode::IsInitialized() const {
  return true;
}

void FileNode::InternalSwap(FileNode* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FileNode, is_executable_)
      + sizeof(FileNode::is_executable_)
      - PROTOBUF_FIELD_OFFSET(FileNode, digest_)>(
          reinterpret_cast<char*>(&digest_),
          reinterpret_cast<char*>(&other->digest_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FileNode::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DirectoryNode::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::Digest& digest(const DirectoryNode* msg);
};

const ::build::bazel::remote::execution::v2::Digest&
DirectoryNode::_Internal::digest(const DirectoryNode* msg) {
  return *msg->digest_;
}
DirectoryNode::DirectoryNode(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.DirectoryNode)
}
DirectoryNode::DirectoryNode(const DirectoryNode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_digest()) {
    digest_ = new ::build::bazel::remote::execution::v2::Digest(*from.digest_);
  } else {
    digest_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.DirectoryNode)
}

void DirectoryNode::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
digest_ = nullptr;
}

DirectoryNode::~DirectoryNode() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.DirectoryNode)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DirectoryNode::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete digest_;
}

void DirectoryNode::ArenaDtor(void* object) {
  DirectoryNode* _this = reinterpret_cast< DirectoryNode* >(object);
  (void)_this;
}
void DirectoryNode::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DirectoryNode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DirectoryNode::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.DirectoryNode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArena() == nullptr && digest_ != nullptr) {
    delete digest_;
  }
  digest_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DirectoryNode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.DirectoryNode.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.Digest digest = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_digest(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DirectoryNode::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.DirectoryNode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.DirectoryNode.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .build.bazel.remote.execution.v2.Digest digest = 2;
  if (this->has_digest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::digest(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.DirectoryNode)
  return target;
}

size_t DirectoryNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.DirectoryNode)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .build.bazel.remote.execution.v2.Digest digest = 2;
  if (this->has_digest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *digest_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DirectoryNode::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.DirectoryNode)
  GOOGLE_DCHECK_NE(&from, this);
  const DirectoryNode* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DirectoryNode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.DirectoryNode)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.DirectoryNode)
    MergeFrom(*source);
  }
}

void DirectoryNode::MergeFrom(const DirectoryNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.DirectoryNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_digest()) {
    _internal_mutable_digest()->::build::bazel::remote::execution::v2::Digest::MergeFrom(from._internal_digest());
  }
}

void DirectoryNode::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.DirectoryNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DirectoryNode::CopyFrom(const DirectoryNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.DirectoryNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DirectoryNode::IsInitialized() const {
  return true;
}

void DirectoryNode::InternalSwap(DirectoryNode* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(digest_, other->digest_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DirectoryNode::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SymlinkNode::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::NodeProperties& node_properties(const SymlinkNode* msg);
};

const ::build::bazel::remote::execution::v2::NodeProperties&
SymlinkNode::_Internal::node_properties(const SymlinkNode* msg) {
  return *msg->node_properties_;
}
SymlinkNode::SymlinkNode(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.SymlinkNode)
}
SymlinkNode::SymlinkNode(const SymlinkNode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  target_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_target().empty()) {
    target_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_target(), 
      GetArena());
  }
  if (from._internal_has_node_properties()) {
    node_properties_ = new ::build::bazel::remote::execution::v2::NodeProperties(*from.node_properties_);
  } else {
    node_properties_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.SymlinkNode)
}

void SymlinkNode::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
target_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
node_properties_ = nullptr;
}

SymlinkNode::~SymlinkNode() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.SymlinkNode)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SymlinkNode::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  target_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete node_properties_;
}

void SymlinkNode::ArenaDtor(void* object) {
  SymlinkNode* _this = reinterpret_cast< SymlinkNode* >(object);
  (void)_this;
}
void SymlinkNode::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SymlinkNode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SymlinkNode::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.SymlinkNode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  target_.ClearToEmpty();
  if (GetArena() == nullptr && node_properties_ != nullptr) {
    delete node_properties_;
  }
  node_properties_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SymlinkNode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.SymlinkNode.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string target = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_target();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.SymlinkNode.target"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.NodeProperties node_properties = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_node_properties(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SymlinkNode::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.SymlinkNode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.SymlinkNode.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string target = 2;
  if (this->target().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_target().data(), static_cast<int>(this->_internal_target().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.SymlinkNode.target");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_target(), target);
  }

  // .build.bazel.remote.execution.v2.NodeProperties node_properties = 4;
  if (this->has_node_properties()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::node_properties(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.SymlinkNode)
  return target;
}

size_t SymlinkNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.SymlinkNode)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string target = 2;
  if (this->target().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_target());
  }

  // .build.bazel.remote.execution.v2.NodeProperties node_properties = 4;
  if (this->has_node_properties()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *node_properties_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SymlinkNode::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.SymlinkNode)
  GOOGLE_DCHECK_NE(&from, this);
  const SymlinkNode* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SymlinkNode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.SymlinkNode)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.SymlinkNode)
    MergeFrom(*source);
  }
}

void SymlinkNode::MergeFrom(const SymlinkNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.SymlinkNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.target().size() > 0) {
    _internal_set_target(from._internal_target());
  }
  if (from.has_node_properties()) {
    _internal_mutable_node_properties()->::build::bazel::remote::execution::v2::NodeProperties::MergeFrom(from._internal_node_properties());
  }
}

void SymlinkNode::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.SymlinkNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SymlinkNode::CopyFrom(const SymlinkNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.SymlinkNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SymlinkNode::IsInitialized() const {
  return true;
}

void SymlinkNode::InternalSwap(SymlinkNode* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  target_.Swap(&other->target_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(node_properties_, other->node_properties_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SymlinkNode::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Digest::_Internal {
 public:
};

Digest::Digest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.Digest)
}
Digest::Digest(const Digest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_hash().empty()) {
    hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_hash(), 
      GetArena());
  }
  size_bytes_ = from.size_bytes_;
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.Digest)
}

void Digest::SharedCtor() {
hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
size_bytes_ = PROTOBUF_LONGLONG(0);
}

Digest::~Digest() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.Digest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Digest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Digest::ArenaDtor(void* object) {
  Digest* _this = reinterpret_cast< Digest* >(object);
  (void)_this;
}
void Digest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Digest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Digest::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.Digest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_.ClearToEmpty();
  size_bytes_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Digest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string hash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.Digest.hash"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 size_bytes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          size_bytes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Digest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.Digest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (this->hash().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hash().data(), static_cast<int>(this->_internal_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.Digest.hash");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_hash(), target);
  }

  // int64 size_bytes = 2;
  if (this->size_bytes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_size_bytes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.Digest)
  return target;
}

size_t Digest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.Digest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string hash = 1;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hash());
  }

  // int64 size_bytes = 2;
  if (this->size_bytes() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_size_bytes());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Digest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.Digest)
  GOOGLE_DCHECK_NE(&from, this);
  const Digest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Digest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.Digest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.Digest)
    MergeFrom(*source);
  }
}

void Digest::MergeFrom(const Digest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.Digest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash().size() > 0) {
    _internal_set_hash(from._internal_hash());
  }
  if (from.size_bytes() != 0) {
    _internal_set_size_bytes(from._internal_size_bytes());
  }
}

void Digest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.Digest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Digest::CopyFrom(const Digest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.Digest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Digest::IsInitialized() const {
  return true;
}

void Digest::InternalSwap(Digest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  hash_.Swap(&other->hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(size_bytes_, other->size_bytes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Digest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ExecutedActionMetadata::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& queued_timestamp(const ExecutedActionMetadata* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& worker_start_timestamp(const ExecutedActionMetadata* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& worker_completed_timestamp(const ExecutedActionMetadata* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& input_fetch_start_timestamp(const ExecutedActionMetadata* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& input_fetch_completed_timestamp(const ExecutedActionMetadata* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& execution_start_timestamp(const ExecutedActionMetadata* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& execution_completed_timestamp(const ExecutedActionMetadata* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& output_upload_start_timestamp(const ExecutedActionMetadata* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& output_upload_completed_timestamp(const ExecutedActionMetadata* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
ExecutedActionMetadata::_Internal::queued_timestamp(const ExecutedActionMetadata* msg) {
  return *msg->queued_timestamp_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
ExecutedActionMetadata::_Internal::worker_start_timestamp(const ExecutedActionMetadata* msg) {
  return *msg->worker_start_timestamp_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
ExecutedActionMetadata::_Internal::worker_completed_timestamp(const ExecutedActionMetadata* msg) {
  return *msg->worker_completed_timestamp_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
ExecutedActionMetadata::_Internal::input_fetch_start_timestamp(const ExecutedActionMetadata* msg) {
  return *msg->input_fetch_start_timestamp_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
ExecutedActionMetadata::_Internal::input_fetch_completed_timestamp(const ExecutedActionMetadata* msg) {
  return *msg->input_fetch_completed_timestamp_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
ExecutedActionMetadata::_Internal::execution_start_timestamp(const ExecutedActionMetadata* msg) {
  return *msg->execution_start_timestamp_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
ExecutedActionMetadata::_Internal::execution_completed_timestamp(const ExecutedActionMetadata* msg) {
  return *msg->execution_completed_timestamp_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
ExecutedActionMetadata::_Internal::output_upload_start_timestamp(const ExecutedActionMetadata* msg) {
  return *msg->output_upload_start_timestamp_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
ExecutedActionMetadata::_Internal::output_upload_completed_timestamp(const ExecutedActionMetadata* msg) {
  return *msg->output_upload_completed_timestamp_;
}
void ExecutedActionMetadata::clear_queued_timestamp() {
  if (GetArena() == nullptr && queued_timestamp_ != nullptr) {
    delete queued_timestamp_;
  }
  queued_timestamp_ = nullptr;
}
void ExecutedActionMetadata::clear_worker_start_timestamp() {
  if (GetArena() == nullptr && worker_start_timestamp_ != nullptr) {
    delete worker_start_timestamp_;
  }
  worker_start_timestamp_ = nullptr;
}
void ExecutedActionMetadata::clear_worker_completed_timestamp() {
  if (GetArena() == nullptr && worker_completed_timestamp_ != nullptr) {
    delete worker_completed_timestamp_;
  }
  worker_completed_timestamp_ = nullptr;
}
void ExecutedActionMetadata::clear_input_fetch_start_timestamp() {
  if (GetArena() == nullptr && input_fetch_start_timestamp_ != nullptr) {
    delete input_fetch_start_timestamp_;
  }
  input_fetch_start_timestamp_ = nullptr;
}
void ExecutedActionMetadata::clear_input_fetch_completed_timestamp() {
  if (GetArena() == nullptr && input_fetch_completed_timestamp_ != nullptr) {
    delete input_fetch_completed_timestamp_;
  }
  input_fetch_completed_timestamp_ = nullptr;
}
void ExecutedActionMetadata::clear_execution_start_timestamp() {
  if (GetArena() == nullptr && execution_start_timestamp_ != nullptr) {
    delete execution_start_timestamp_;
  }
  execution_start_timestamp_ = nullptr;
}
void ExecutedActionMetadata::clear_execution_completed_timestamp() {
  if (GetArena() == nullptr && execution_completed_timestamp_ != nullptr) {
    delete execution_completed_timestamp_;
  }
  execution_completed_timestamp_ = nullptr;
}
void ExecutedActionMetadata::clear_output_upload_start_timestamp() {
  if (GetArena() == nullptr && output_upload_start_timestamp_ != nullptr) {
    delete output_upload_start_timestamp_;
  }
  output_upload_start_timestamp_ = nullptr;
}
void ExecutedActionMetadata::clear_output_upload_completed_timestamp() {
  if (GetArena() == nullptr && output_upload_completed_timestamp_ != nullptr) {
    delete output_upload_completed_timestamp_;
  }
  output_upload_completed_timestamp_ = nullptr;
}
void ExecutedActionMetadata::clear_auxiliary_metadata() {
  auxiliary_metadata_.Clear();
}
ExecutedActionMetadata::ExecutedActionMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  auxiliary_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.ExecutedActionMetadata)
}
ExecutedActionMetadata::ExecutedActionMetadata(const ExecutedActionMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      auxiliary_metadata_(from.auxiliary_metadata_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  worker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_worker().empty()) {
    worker_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_worker(), 
      GetArena());
  }
  if (from._internal_has_queued_timestamp()) {
    queued_timestamp_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.queued_timestamp_);
  } else {
    queued_timestamp_ = nullptr;
  }
  if (from._internal_has_worker_start_timestamp()) {
    worker_start_timestamp_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.worker_start_timestamp_);
  } else {
    worker_start_timestamp_ = nullptr;
  }
  if (from._internal_has_worker_completed_timestamp()) {
    worker_completed_timestamp_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.worker_completed_timestamp_);
  } else {
    worker_completed_timestamp_ = nullptr;
  }
  if (from._internal_has_input_fetch_start_timestamp()) {
    input_fetch_start_timestamp_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.input_fetch_start_timestamp_);
  } else {
    input_fetch_start_timestamp_ = nullptr;
  }
  if (from._internal_has_input_fetch_completed_timestamp()) {
    input_fetch_completed_timestamp_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.input_fetch_completed_timestamp_);
  } else {
    input_fetch_completed_timestamp_ = nullptr;
  }
  if (from._internal_has_execution_start_timestamp()) {
    execution_start_timestamp_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.execution_start_timestamp_);
  } else {
    execution_start_timestamp_ = nullptr;
  }
  if (from._internal_has_execution_completed_timestamp()) {
    execution_completed_timestamp_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.execution_completed_timestamp_);
  } else {
    execution_completed_timestamp_ = nullptr;
  }
  if (from._internal_has_output_upload_start_timestamp()) {
    output_upload_start_timestamp_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.output_upload_start_timestamp_);
  } else {
    output_upload_start_timestamp_ = nullptr;
  }
  if (from._internal_has_output_upload_completed_timestamp()) {
    output_upload_completed_timestamp_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.output_upload_completed_timestamp_);
  } else {
    output_upload_completed_timestamp_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.ExecutedActionMetadata)
}

void ExecutedActionMetadata::SharedCtor() {
worker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&queued_timestamp_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&output_upload_completed_timestamp_) -
    reinterpret_cast<char*>(&queued_timestamp_)) + sizeof(output_upload_completed_timestamp_));
}

ExecutedActionMetadata::~ExecutedActionMetadata() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.ExecutedActionMetadata)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExecutedActionMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  worker_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete queued_timestamp_;
  if (this != internal_default_instance()) delete worker_start_timestamp_;
  if (this != internal_default_instance()) delete worker_completed_timestamp_;
  if (this != internal_default_instance()) delete input_fetch_start_timestamp_;
  if (this != internal_default_instance()) delete input_fetch_completed_timestamp_;
  if (this != internal_default_instance()) delete execution_start_timestamp_;
  if (this != internal_default_instance()) delete execution_completed_timestamp_;
  if (this != internal_default_instance()) delete output_upload_start_timestamp_;
  if (this != internal_default_instance()) delete output_upload_completed_timestamp_;
}

void ExecutedActionMetadata::ArenaDtor(void* object) {
  ExecutedActionMetadata* _this = reinterpret_cast< ExecutedActionMetadata* >(object);
  (void)_this;
}
void ExecutedActionMetadata::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExecutedActionMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ExecutedActionMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.ExecutedActionMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  auxiliary_metadata_.Clear();
  worker_.ClearToEmpty();
  if (GetArena() == nullptr && queued_timestamp_ != nullptr) {
    delete queued_timestamp_;
  }
  queued_timestamp_ = nullptr;
  if (GetArena() == nullptr && worker_start_timestamp_ != nullptr) {
    delete worker_start_timestamp_;
  }
  worker_start_timestamp_ = nullptr;
  if (GetArena() == nullptr && worker_completed_timestamp_ != nullptr) {
    delete worker_completed_timestamp_;
  }
  worker_completed_timestamp_ = nullptr;
  if (GetArena() == nullptr && input_fetch_start_timestamp_ != nullptr) {
    delete input_fetch_start_timestamp_;
  }
  input_fetch_start_timestamp_ = nullptr;
  if (GetArena() == nullptr && input_fetch_completed_timestamp_ != nullptr) {
    delete input_fetch_completed_timestamp_;
  }
  input_fetch_completed_timestamp_ = nullptr;
  if (GetArena() == nullptr && execution_start_timestamp_ != nullptr) {
    delete execution_start_timestamp_;
  }
  execution_start_timestamp_ = nullptr;
  if (GetArena() == nullptr && execution_completed_timestamp_ != nullptr) {
    delete execution_completed_timestamp_;
  }
  execution_completed_timestamp_ = nullptr;
  if (GetArena() == nullptr && output_upload_start_timestamp_ != nullptr) {
    delete output_upload_start_timestamp_;
  }
  output_upload_start_timestamp_ = nullptr;
  if (GetArena() == nullptr && output_upload_completed_timestamp_ != nullptr) {
    delete output_upload_completed_timestamp_;
  }
  output_upload_completed_timestamp_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecutedActionMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string worker = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_worker();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.ExecutedActionMetadata.worker"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp queued_timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_queued_timestamp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp worker_start_timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_worker_start_timestamp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp worker_completed_timestamp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_worker_completed_timestamp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp input_fetch_start_timestamp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_input_fetch_start_timestamp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp input_fetch_completed_timestamp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_input_fetch_completed_timestamp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp execution_start_timestamp = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_execution_start_timestamp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp execution_completed_timestamp = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_execution_completed_timestamp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp output_upload_start_timestamp = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_output_upload_start_timestamp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp output_upload_completed_timestamp = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_output_upload_completed_timestamp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.Any auxiliary_metadata = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_auxiliary_metadata(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExecutedActionMetadata::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.ExecutedActionMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string worker = 1;
  if (this->worker().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_worker().data(), static_cast<int>(this->_internal_worker().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.ExecutedActionMetadata.worker");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_worker(), target);
  }

  // .google.protobuf.Timestamp queued_timestamp = 2;
  if (this->has_queued_timestamp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::queued_timestamp(this), target, stream);
  }

  // .google.protobuf.Timestamp worker_start_timestamp = 3;
  if (this->has_worker_start_timestamp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::worker_start_timestamp(this), target, stream);
  }

  // .google.protobuf.Timestamp worker_completed_timestamp = 4;
  if (this->has_worker_completed_timestamp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::worker_completed_timestamp(this), target, stream);
  }

  // .google.protobuf.Timestamp input_fetch_start_timestamp = 5;
  if (this->has_input_fetch_start_timestamp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::input_fetch_start_timestamp(this), target, stream);
  }

  // .google.protobuf.Timestamp input_fetch_completed_timestamp = 6;
  if (this->has_input_fetch_completed_timestamp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::input_fetch_completed_timestamp(this), target, stream);
  }

  // .google.protobuf.Timestamp execution_start_timestamp = 7;
  if (this->has_execution_start_timestamp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::execution_start_timestamp(this), target, stream);
  }

  // .google.protobuf.Timestamp execution_completed_timestamp = 8;
  if (this->has_execution_completed_timestamp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::execution_completed_timestamp(this), target, stream);
  }

  // .google.protobuf.Timestamp output_upload_start_timestamp = 9;
  if (this->has_output_upload_start_timestamp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::output_upload_start_timestamp(this), target, stream);
  }

  // .google.protobuf.Timestamp output_upload_completed_timestamp = 10;
  if (this->has_output_upload_completed_timestamp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::output_upload_completed_timestamp(this), target, stream);
  }

  // repeated .google.protobuf.Any auxiliary_metadata = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_auxiliary_metadata_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, this->_internal_auxiliary_metadata(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.ExecutedActionMetadata)
  return target;
}

size_t ExecutedActionMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.ExecutedActionMetadata)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Any auxiliary_metadata = 11;
  total_size += 1UL * this->_internal_auxiliary_metadata_size();
  for (const auto& msg : this->auxiliary_metadata_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string worker = 1;
  if (this->worker().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_worker());
  }

  // .google.protobuf.Timestamp queued_timestamp = 2;
  if (this->has_queued_timestamp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *queued_timestamp_);
  }

  // .google.protobuf.Timestamp worker_start_timestamp = 3;
  if (this->has_worker_start_timestamp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *worker_start_timestamp_);
  }

  // .google.protobuf.Timestamp worker_completed_timestamp = 4;
  if (this->has_worker_completed_timestamp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *worker_completed_timestamp_);
  }

  // .google.protobuf.Timestamp input_fetch_start_timestamp = 5;
  if (this->has_input_fetch_start_timestamp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *input_fetch_start_timestamp_);
  }

  // .google.protobuf.Timestamp input_fetch_completed_timestamp = 6;
  if (this->has_input_fetch_completed_timestamp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *input_fetch_completed_timestamp_);
  }

  // .google.protobuf.Timestamp execution_start_timestamp = 7;
  if (this->has_execution_start_timestamp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *execution_start_timestamp_);
  }

  // .google.protobuf.Timestamp execution_completed_timestamp = 8;
  if (this->has_execution_completed_timestamp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *execution_completed_timestamp_);
  }

  // .google.protobuf.Timestamp output_upload_start_timestamp = 9;
  if (this->has_output_upload_start_timestamp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *output_upload_start_timestamp_);
  }

  // .google.protobuf.Timestamp output_upload_completed_timestamp = 10;
  if (this->has_output_upload_completed_timestamp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *output_upload_completed_timestamp_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecutedActionMetadata::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.ExecutedActionMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutedActionMetadata* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExecutedActionMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.ExecutedActionMetadata)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.ExecutedActionMetadata)
    MergeFrom(*source);
  }
}

void ExecutedActionMetadata::MergeFrom(const ExecutedActionMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.ExecutedActionMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  auxiliary_metadata_.MergeFrom(from.auxiliary_metadata_);
  if (from.worker().size() > 0) {
    _internal_set_worker(from._internal_worker());
  }
  if (from.has_queued_timestamp()) {
    _internal_mutable_queued_timestamp()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_queued_timestamp());
  }
  if (from.has_worker_start_timestamp()) {
    _internal_mutable_worker_start_timestamp()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_worker_start_timestamp());
  }
  if (from.has_worker_completed_timestamp()) {
    _internal_mutable_worker_completed_timestamp()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_worker_completed_timestamp());
  }
  if (from.has_input_fetch_start_timestamp()) {
    _internal_mutable_input_fetch_start_timestamp()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_input_fetch_start_timestamp());
  }
  if (from.has_input_fetch_completed_timestamp()) {
    _internal_mutable_input_fetch_completed_timestamp()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_input_fetch_completed_timestamp());
  }
  if (from.has_execution_start_timestamp()) {
    _internal_mutable_execution_start_timestamp()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_execution_start_timestamp());
  }
  if (from.has_execution_completed_timestamp()) {
    _internal_mutable_execution_completed_timestamp()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_execution_completed_timestamp());
  }
  if (from.has_output_upload_start_timestamp()) {
    _internal_mutable_output_upload_start_timestamp()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_output_upload_start_timestamp());
  }
  if (from.has_output_upload_completed_timestamp()) {
    _internal_mutable_output_upload_completed_timestamp()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_output_upload_completed_timestamp());
  }
}

void ExecutedActionMetadata::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.ExecutedActionMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutedActionMetadata::CopyFrom(const ExecutedActionMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.ExecutedActionMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutedActionMetadata::IsInitialized() const {
  return true;
}

void ExecutedActionMetadata::InternalSwap(ExecutedActionMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  auxiliary_metadata_.InternalSwap(&other->auxiliary_metadata_);
  worker_.Swap(&other->worker_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExecutedActionMetadata, output_upload_completed_timestamp_)
      + sizeof(ExecutedActionMetadata::output_upload_completed_timestamp_)
      - PROTOBUF_FIELD_OFFSET(ExecutedActionMetadata, queued_timestamp_)>(
          reinterpret_cast<char*>(&queued_timestamp_),
          reinterpret_cast<char*>(&other->queued_timestamp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecutedActionMetadata::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ActionResult::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::Digest& stdout_digest(const ActionResult* msg);
  static const ::build::bazel::remote::execution::v2::Digest& stderr_digest(const ActionResult* msg);
  static const ::build::bazel::remote::execution::v2::ExecutedActionMetadata& execution_metadata(const ActionResult* msg);
};

const ::build::bazel::remote::execution::v2::Digest&
ActionResult::_Internal::stdout_digest(const ActionResult* msg) {
  return *msg->stdout_digest_;
}
const ::build::bazel::remote::execution::v2::Digest&
ActionResult::_Internal::stderr_digest(const ActionResult* msg) {
  return *msg->stderr_digest_;
}
const ::build::bazel::remote::execution::v2::ExecutedActionMetadata&
ActionResult::_Internal::execution_metadata(const ActionResult* msg) {
  return *msg->execution_metadata_;
}
ActionResult::ActionResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  output_files_(arena),
  output_directories_(arena),
  output_file_symlinks_(arena),
  output_directory_symlinks_(arena),
  output_symlinks_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.ActionResult)
}
ActionResult::ActionResult(const ActionResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      output_files_(from.output_files_),
      output_directories_(from.output_directories_),
      output_file_symlinks_(from.output_file_symlinks_),
      output_directory_symlinks_(from.output_directory_symlinks_),
      output_symlinks_(from.output_symlinks_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  stdout_raw_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_stdout_raw().empty()) {
    stdout_raw_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_stdout_raw(), 
      GetArena());
  }
  stderr_raw_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_stderr_raw().empty()) {
    stderr_raw_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_stderr_raw(), 
      GetArena());
  }
  if (from._internal_has_stdout_digest()) {
    stdout_digest_ = new ::build::bazel::remote::execution::v2::Digest(*from.stdout_digest_);
  } else {
    stdout_digest_ = nullptr;
  }
  if (from._internal_has_stderr_digest()) {
    stderr_digest_ = new ::build::bazel::remote::execution::v2::Digest(*from.stderr_digest_);
  } else {
    stderr_digest_ = nullptr;
  }
  if (from._internal_has_execution_metadata()) {
    execution_metadata_ = new ::build::bazel::remote::execution::v2::ExecutedActionMetadata(*from.execution_metadata_);
  } else {
    execution_metadata_ = nullptr;
  }
  exit_code_ = from.exit_code_;
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.ActionResult)
}

void ActionResult::SharedCtor() {
stdout_raw_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
stderr_raw_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&stdout_digest_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&exit_code_) -
    reinterpret_cast<char*>(&stdout_digest_)) + sizeof(exit_code_));
}

ActionResult::~ActionResult() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.ActionResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ActionResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  stdout_raw_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  stderr_raw_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete stdout_digest_;
  if (this != internal_default_instance()) delete stderr_digest_;
  if (this != internal_default_instance()) delete execution_metadata_;
}

void ActionResult::ArenaDtor(void* object) {
  ActionResult* _this = reinterpret_cast< ActionResult* >(object);
  (void)_this;
}
void ActionResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ActionResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ActionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.ActionResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_files_.Clear();
  output_directories_.Clear();
  output_file_symlinks_.Clear();
  output_directory_symlinks_.Clear();
  output_symlinks_.Clear();
  stdout_raw_.ClearToEmpty();
  stderr_raw_.ClearToEmpty();
  if (GetArena() == nullptr && stdout_digest_ != nullptr) {
    delete stdout_digest_;
  }
  stdout_digest_ = nullptr;
  if (GetArena() == nullptr && stderr_digest_ != nullptr) {
    delete stderr_digest_;
  }
  stderr_digest_ = nullptr;
  if (GetArena() == nullptr && execution_metadata_ != nullptr) {
    delete execution_metadata_;
  }
  execution_metadata_ = nullptr;
  exit_code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActionResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .build.bazel.remote.execution.v2.OutputFile output_files = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_output_files(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .build.bazel.remote.execution.v2.OutputDirectory output_directories = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_output_directories(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 exit_code = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          exit_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes stdout_raw = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_stdout_raw();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.Digest stdout_digest = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_stdout_digest(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes stderr_raw = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_stderr_raw();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.Digest stderr_digest = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_stderr_digest(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.ExecutedActionMetadata execution_metadata = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_execution_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .build.bazel.remote.execution.v2.OutputSymlink output_file_symlinks = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_output_file_symlinks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .build.bazel.remote.execution.v2.OutputSymlink output_directory_symlinks = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_output_directory_symlinks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .build.bazel.remote.execution.v2.OutputSymlink output_symlinks = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_output_symlinks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ActionResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.ActionResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.OutputFile output_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_output_files_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_output_files(i), target, stream);
  }

  // repeated .build.bazel.remote.execution.v2.OutputDirectory output_directories = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_output_directories_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_output_directories(i), target, stream);
  }

  // int32 exit_code = 4;
  if (this->exit_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_exit_code(), target);
  }

  // bytes stdout_raw = 5;
  if (this->stdout_raw().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_stdout_raw(), target);
  }

  // .build.bazel.remote.execution.v2.Digest stdout_digest = 6;
  if (this->has_stdout_digest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::stdout_digest(this), target, stream);
  }

  // bytes stderr_raw = 7;
  if (this->stderr_raw().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_stderr_raw(), target);
  }

  // .build.bazel.remote.execution.v2.Digest stderr_digest = 8;
  if (this->has_stderr_digest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::stderr_digest(this), target, stream);
  }

  // .build.bazel.remote.execution.v2.ExecutedActionMetadata execution_metadata = 9;
  if (this->has_execution_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::execution_metadata(this), target, stream);
  }

  // repeated .build.bazel.remote.execution.v2.OutputSymlink output_file_symlinks = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_output_file_symlinks_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, this->_internal_output_file_symlinks(i), target, stream);
  }

  // repeated .build.bazel.remote.execution.v2.OutputSymlink output_directory_symlinks = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_output_directory_symlinks_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, this->_internal_output_directory_symlinks(i), target, stream);
  }

  // repeated .build.bazel.remote.execution.v2.OutputSymlink output_symlinks = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_output_symlinks_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, this->_internal_output_symlinks(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.ActionResult)
  return target;
}

size_t ActionResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.ActionResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.OutputFile output_files = 2;
  total_size += 1UL * this->_internal_output_files_size();
  for (const auto& msg : this->output_files_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .build.bazel.remote.execution.v2.OutputDirectory output_directories = 3;
  total_size += 1UL * this->_internal_output_directories_size();
  for (const auto& msg : this->output_directories_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .build.bazel.remote.execution.v2.OutputSymlink output_file_symlinks = 10;
  total_size += 1UL * this->_internal_output_file_symlinks_size();
  for (const auto& msg : this->output_file_symlinks_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .build.bazel.remote.execution.v2.OutputSymlink output_directory_symlinks = 11;
  total_size += 1UL * this->_internal_output_directory_symlinks_size();
  for (const auto& msg : this->output_directory_symlinks_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .build.bazel.remote.execution.v2.OutputSymlink output_symlinks = 12;
  total_size += 1UL * this->_internal_output_symlinks_size();
  for (const auto& msg : this->output_symlinks_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bytes stdout_raw = 5;
  if (this->stdout_raw().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_stdout_raw());
  }

  // bytes stderr_raw = 7;
  if (this->stderr_raw().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_stderr_raw());
  }

  // .build.bazel.remote.execution.v2.Digest stdout_digest = 6;
  if (this->has_stdout_digest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *stdout_digest_);
  }

  // .build.bazel.remote.execution.v2.Digest stderr_digest = 8;
  if (this->has_stderr_digest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *stderr_digest_);
  }

  // .build.bazel.remote.execution.v2.ExecutedActionMetadata execution_metadata = 9;
  if (this->has_execution_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *execution_metadata_);
  }

  // int32 exit_code = 4;
  if (this->exit_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_exit_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.ActionResult)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ActionResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.ActionResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.ActionResult)
    MergeFrom(*source);
  }
}

void ActionResult::MergeFrom(const ActionResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.ActionResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output_files_.MergeFrom(from.output_files_);
  output_directories_.MergeFrom(from.output_directories_);
  output_file_symlinks_.MergeFrom(from.output_file_symlinks_);
  output_directory_symlinks_.MergeFrom(from.output_directory_symlinks_);
  output_symlinks_.MergeFrom(from.output_symlinks_);
  if (from.stdout_raw().size() > 0) {
    _internal_set_stdout_raw(from._internal_stdout_raw());
  }
  if (from.stderr_raw().size() > 0) {
    _internal_set_stderr_raw(from._internal_stderr_raw());
  }
  if (from.has_stdout_digest()) {
    _internal_mutable_stdout_digest()->::build::bazel::remote::execution::v2::Digest::MergeFrom(from._internal_stdout_digest());
  }
  if (from.has_stderr_digest()) {
    _internal_mutable_stderr_digest()->::build::bazel::remote::execution::v2::Digest::MergeFrom(from._internal_stderr_digest());
  }
  if (from.has_execution_metadata()) {
    _internal_mutable_execution_metadata()->::build::bazel::remote::execution::v2::ExecutedActionMetadata::MergeFrom(from._internal_execution_metadata());
  }
  if (from.exit_code() != 0) {
    _internal_set_exit_code(from._internal_exit_code());
  }
}

void ActionResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.ActionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionResult::CopyFrom(const ActionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.ActionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionResult::IsInitialized() const {
  return true;
}

void ActionResult::InternalSwap(ActionResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  output_files_.InternalSwap(&other->output_files_);
  output_directories_.InternalSwap(&other->output_directories_);
  output_file_symlinks_.InternalSwap(&other->output_file_symlinks_);
  output_directory_symlinks_.InternalSwap(&other->output_directory_symlinks_);
  output_symlinks_.InternalSwap(&other->output_symlinks_);
  stdout_raw_.Swap(&other->stdout_raw_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  stderr_raw_.Swap(&other->stderr_raw_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ActionResult, exit_code_)
      + sizeof(ActionResult::exit_code_)
      - PROTOBUF_FIELD_OFFSET(ActionResult, stdout_digest_)>(
          reinterpret_cast<char*>(&stdout_digest_),
          reinterpret_cast<char*>(&other->stdout_digest_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ActionResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class OutputFile::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::Digest& digest(const OutputFile* msg);
  static const ::build::bazel::remote::execution::v2::NodeProperties& node_properties(const OutputFile* msg);
};

const ::build::bazel::remote::execution::v2::Digest&
OutputFile::_Internal::digest(const OutputFile* msg) {
  return *msg->digest_;
}
const ::build::bazel::remote::execution::v2::NodeProperties&
OutputFile::_Internal::node_properties(const OutputFile* msg) {
  return *msg->node_properties_;
}
OutputFile::OutputFile(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.OutputFile)
}
OutputFile::OutputFile(const OutputFile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  contents_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_contents().empty()) {
    contents_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_contents(), 
      GetArena());
  }
  if (from._internal_has_digest()) {
    digest_ = new ::build::bazel::remote::execution::v2::Digest(*from.digest_);
  } else {
    digest_ = nullptr;
  }
  if (from._internal_has_node_properties()) {
    node_properties_ = new ::build::bazel::remote::execution::v2::NodeProperties(*from.node_properties_);
  } else {
    node_properties_ = nullptr;
  }
  is_executable_ = from.is_executable_;
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.OutputFile)
}

void OutputFile::SharedCtor() {
path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
contents_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&digest_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_executable_) -
    reinterpret_cast<char*>(&digest_)) + sizeof(is_executable_));
}

OutputFile::~OutputFile() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.OutputFile)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OutputFile::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contents_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete digest_;
  if (this != internal_default_instance()) delete node_properties_;
}

void OutputFile::ArenaDtor(void* object) {
  OutputFile* _this = reinterpret_cast< OutputFile* >(object);
  (void)_this;
}
void OutputFile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OutputFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OutputFile::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.OutputFile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty();
  contents_.ClearToEmpty();
  if (GetArena() == nullptr && digest_ != nullptr) {
    delete digest_;
  }
  digest_ = nullptr;
  if (GetArena() == nullptr && node_properties_ != nullptr) {
    delete node_properties_;
  }
  node_properties_ = nullptr;
  is_executable_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OutputFile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.OutputFile.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.Digest digest = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_digest(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_executable = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          is_executable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes contents = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_contents();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.NodeProperties node_properties = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_node_properties(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OutputFile::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.OutputFile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.OutputFile.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // .build.bazel.remote.execution.v2.Digest digest = 2;
  if (this->has_digest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::digest(this), target, stream);
  }

  // bool is_executable = 4;
  if (this->is_executable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_is_executable(), target);
  }

  // bytes contents = 5;
  if (this->contents().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_contents(), target);
  }

  // .build.bazel.remote.execution.v2.NodeProperties node_properties = 7;
  if (this->has_node_properties()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::node_properties(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.OutputFile)
  return target;
}

size_t OutputFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.OutputFile)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // bytes contents = 5;
  if (this->contents().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_contents());
  }

  // .build.bazel.remote.execution.v2.Digest digest = 2;
  if (this->has_digest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *digest_);
  }

  // .build.bazel.remote.execution.v2.NodeProperties node_properties = 7;
  if (this->has_node_properties()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *node_properties_);
  }

  // bool is_executable = 4;
  if (this->is_executable() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OutputFile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.OutputFile)
  GOOGLE_DCHECK_NE(&from, this);
  const OutputFile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OutputFile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.OutputFile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.OutputFile)
    MergeFrom(*source);
  }
}

void OutputFile::MergeFrom(const OutputFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.OutputFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.contents().size() > 0) {
    _internal_set_contents(from._internal_contents());
  }
  if (from.has_digest()) {
    _internal_mutable_digest()->::build::bazel::remote::execution::v2::Digest::MergeFrom(from._internal_digest());
  }
  if (from.has_node_properties()) {
    _internal_mutable_node_properties()->::build::bazel::remote::execution::v2::NodeProperties::MergeFrom(from._internal_node_properties());
  }
  if (from.is_executable() != 0) {
    _internal_set_is_executable(from._internal_is_executable());
  }
}

void OutputFile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.OutputFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OutputFile::CopyFrom(const OutputFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.OutputFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OutputFile::IsInitialized() const {
  return true;
}

void OutputFile::InternalSwap(OutputFile* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  contents_.Swap(&other->contents_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OutputFile, is_executable_)
      + sizeof(OutputFile::is_executable_)
      - PROTOBUF_FIELD_OFFSET(OutputFile, digest_)>(
          reinterpret_cast<char*>(&digest_),
          reinterpret_cast<char*>(&other->digest_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OutputFile::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Tree::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::Directory& root(const Tree* msg);
};

const ::build::bazel::remote::execution::v2::Directory&
Tree::_Internal::root(const Tree* msg) {
  return *msg->root_;
}
Tree::Tree(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  children_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.Tree)
}
Tree::Tree(const Tree& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      children_(from.children_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_root()) {
    root_ = new ::build::bazel::remote::execution::v2::Directory(*from.root_);
  } else {
    root_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.Tree)
}

void Tree::SharedCtor() {
root_ = nullptr;
}

Tree::~Tree() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.Tree)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Tree::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete root_;
}

void Tree::ArenaDtor(void* object) {
  Tree* _this = reinterpret_cast< Tree* >(object);
  (void)_this;
}
void Tree::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Tree::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Tree::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.Tree)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  children_.Clear();
  if (GetArena() == nullptr && root_ != nullptr) {
    delete root_;
  }
  root_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Tree::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .build.bazel.remote.execution.v2.Directory root = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_root(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .build.bazel.remote.execution.v2.Directory children = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_children(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Tree::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.Tree)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .build.bazel.remote.execution.v2.Directory root = 1;
  if (this->has_root()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::root(this), target, stream);
  }

  // repeated .build.bazel.remote.execution.v2.Directory children = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_children_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_children(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.Tree)
  return target;
}

size_t Tree::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.Tree)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.Directory children = 2;
  total_size += 1UL * this->_internal_children_size();
  for (const auto& msg : this->children_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .build.bazel.remote.execution.v2.Directory root = 1;
  if (this->has_root()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *root_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Tree::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.Tree)
  GOOGLE_DCHECK_NE(&from, this);
  const Tree* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Tree>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.Tree)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.Tree)
    MergeFrom(*source);
  }
}

void Tree::MergeFrom(const Tree& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.Tree)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  children_.MergeFrom(from.children_);
  if (from.has_root()) {
    _internal_mutable_root()->::build::bazel::remote::execution::v2::Directory::MergeFrom(from._internal_root());
  }
}

void Tree::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.Tree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tree::CopyFrom(const Tree& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.Tree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tree::IsInitialized() const {
  return true;
}

void Tree::InternalSwap(Tree* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  children_.InternalSwap(&other->children_);
  swap(root_, other->root_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Tree::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class OutputDirectory::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::Digest& tree_digest(const OutputDirectory* msg);
};

const ::build::bazel::remote::execution::v2::Digest&
OutputDirectory::_Internal::tree_digest(const OutputDirectory* msg) {
  return *msg->tree_digest_;
}
OutputDirectory::OutputDirectory(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.OutputDirectory)
}
OutputDirectory::OutputDirectory(const OutputDirectory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  if (from._internal_has_tree_digest()) {
    tree_digest_ = new ::build::bazel::remote::execution::v2::Digest(*from.tree_digest_);
  } else {
    tree_digest_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.OutputDirectory)
}

void OutputDirectory::SharedCtor() {
path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
tree_digest_ = nullptr;
}

OutputDirectory::~OutputDirectory() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.OutputDirectory)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OutputDirectory::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete tree_digest_;
}

void OutputDirectory::ArenaDtor(void* object) {
  OutputDirectory* _this = reinterpret_cast< OutputDirectory* >(object);
  (void)_this;
}
void OutputDirectory::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OutputDirectory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OutputDirectory::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.OutputDirectory)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty();
  if (GetArena() == nullptr && tree_digest_ != nullptr) {
    delete tree_digest_;
  }
  tree_digest_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OutputDirectory::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.OutputDirectory.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.Digest tree_digest = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_tree_digest(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OutputDirectory::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.OutputDirectory)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.OutputDirectory.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // .build.bazel.remote.execution.v2.Digest tree_digest = 3;
  if (this->has_tree_digest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::tree_digest(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.OutputDirectory)
  return target;
}

size_t OutputDirectory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.OutputDirectory)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // .build.bazel.remote.execution.v2.Digest tree_digest = 3;
  if (this->has_tree_digest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *tree_digest_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OutputDirectory::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.OutputDirectory)
  GOOGLE_DCHECK_NE(&from, this);
  const OutputDirectory* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OutputDirectory>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.OutputDirectory)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.OutputDirectory)
    MergeFrom(*source);
  }
}

void OutputDirectory::MergeFrom(const OutputDirectory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.OutputDirectory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.has_tree_digest()) {
    _internal_mutable_tree_digest()->::build::bazel::remote::execution::v2::Digest::MergeFrom(from._internal_tree_digest());
  }
}

void OutputDirectory::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.OutputDirectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OutputDirectory::CopyFrom(const OutputDirectory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.OutputDirectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OutputDirectory::IsInitialized() const {
  return true;
}

void OutputDirectory::InternalSwap(OutputDirectory* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(tree_digest_, other->tree_digest_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OutputDirectory::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class OutputSymlink::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::NodeProperties& node_properties(const OutputSymlink* msg);
};

const ::build::bazel::remote::execution::v2::NodeProperties&
OutputSymlink::_Internal::node_properties(const OutputSymlink* msg) {
  return *msg->node_properties_;
}
OutputSymlink::OutputSymlink(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.OutputSymlink)
}
OutputSymlink::OutputSymlink(const OutputSymlink& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  target_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_target().empty()) {
    target_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_target(), 
      GetArena());
  }
  if (from._internal_has_node_properties()) {
    node_properties_ = new ::build::bazel::remote::execution::v2::NodeProperties(*from.node_properties_);
  } else {
    node_properties_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.OutputSymlink)
}

void OutputSymlink::SharedCtor() {
path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
target_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
node_properties_ = nullptr;
}

OutputSymlink::~OutputSymlink() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.OutputSymlink)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OutputSymlink::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  target_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete node_properties_;
}

void OutputSymlink::ArenaDtor(void* object) {
  OutputSymlink* _this = reinterpret_cast< OutputSymlink* >(object);
  (void)_this;
}
void OutputSymlink::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OutputSymlink::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OutputSymlink::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.OutputSymlink)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty();
  target_.ClearToEmpty();
  if (GetArena() == nullptr && node_properties_ != nullptr) {
    delete node_properties_;
  }
  node_properties_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OutputSymlink::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.OutputSymlink.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string target = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_target();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.OutputSymlink.target"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.NodeProperties node_properties = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_node_properties(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OutputSymlink::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.OutputSymlink)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.OutputSymlink.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // string target = 2;
  if (this->target().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_target().data(), static_cast<int>(this->_internal_target().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.OutputSymlink.target");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_target(), target);
  }

  // .build.bazel.remote.execution.v2.NodeProperties node_properties = 4;
  if (this->has_node_properties()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::node_properties(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.OutputSymlink)
  return target;
}

size_t OutputSymlink::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.OutputSymlink)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string target = 2;
  if (this->target().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_target());
  }

  // .build.bazel.remote.execution.v2.NodeProperties node_properties = 4;
  if (this->has_node_properties()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *node_properties_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OutputSymlink::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.OutputSymlink)
  GOOGLE_DCHECK_NE(&from, this);
  const OutputSymlink* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OutputSymlink>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.OutputSymlink)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.OutputSymlink)
    MergeFrom(*source);
  }
}

void OutputSymlink::MergeFrom(const OutputSymlink& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.OutputSymlink)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.target().size() > 0) {
    _internal_set_target(from._internal_target());
  }
  if (from.has_node_properties()) {
    _internal_mutable_node_properties()->::build::bazel::remote::execution::v2::NodeProperties::MergeFrom(from._internal_node_properties());
  }
}

void OutputSymlink::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.OutputSymlink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OutputSymlink::CopyFrom(const OutputSymlink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.OutputSymlink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OutputSymlink::IsInitialized() const {
  return true;
}

void OutputSymlink::InternalSwap(OutputSymlink* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  target_.Swap(&other->target_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(node_properties_, other->node_properties_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OutputSymlink::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ExecutionPolicy::_Internal {
 public:
};

ExecutionPolicy::ExecutionPolicy(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.ExecutionPolicy)
}
ExecutionPolicy::ExecutionPolicy(const ExecutionPolicy& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  priority_ = from.priority_;
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.ExecutionPolicy)
}

void ExecutionPolicy::SharedCtor() {
priority_ = 0;
}

ExecutionPolicy::~ExecutionPolicy() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.ExecutionPolicy)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExecutionPolicy::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ExecutionPolicy::ArenaDtor(void* object) {
  ExecutionPolicy* _this = reinterpret_cast< ExecutionPolicy* >(object);
  (void)_this;
}
void ExecutionPolicy::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExecutionPolicy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ExecutionPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.ExecutionPolicy)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  priority_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecutionPolicy::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 priority = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExecutionPolicy::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.ExecutionPolicy)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 priority = 1;
  if (this->priority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_priority(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.ExecutionPolicy)
  return target;
}

size_t ExecutionPolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.ExecutionPolicy)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 priority = 1;
  if (this->priority() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_priority());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecutionPolicy::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.ExecutionPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutionPolicy* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExecutionPolicy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.ExecutionPolicy)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.ExecutionPolicy)
    MergeFrom(*source);
  }
}

void ExecutionPolicy::MergeFrom(const ExecutionPolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.ExecutionPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.priority() != 0) {
    _internal_set_priority(from._internal_priority());
  }
}

void ExecutionPolicy::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.ExecutionPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionPolicy::CopyFrom(const ExecutionPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.ExecutionPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionPolicy::IsInitialized() const {
  return true;
}

void ExecutionPolicy::InternalSwap(ExecutionPolicy* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(priority_, other->priority_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecutionPolicy::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ResultsCachePolicy::_Internal {
 public:
};

ResultsCachePolicy::ResultsCachePolicy(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.ResultsCachePolicy)
}
ResultsCachePolicy::ResultsCachePolicy(const ResultsCachePolicy& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  priority_ = from.priority_;
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.ResultsCachePolicy)
}

void ResultsCachePolicy::SharedCtor() {
priority_ = 0;
}

ResultsCachePolicy::~ResultsCachePolicy() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.ResultsCachePolicy)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResultsCachePolicy::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ResultsCachePolicy::ArenaDtor(void* object) {
  ResultsCachePolicy* _this = reinterpret_cast< ResultsCachePolicy* >(object);
  (void)_this;
}
void ResultsCachePolicy::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResultsCachePolicy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResultsCachePolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.ResultsCachePolicy)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  priority_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResultsCachePolicy::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 priority = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResultsCachePolicy::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.ResultsCachePolicy)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 priority = 1;
  if (this->priority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_priority(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.ResultsCachePolicy)
  return target;
}

size_t ResultsCachePolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.ResultsCachePolicy)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 priority = 1;
  if (this->priority() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_priority());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResultsCachePolicy::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.ResultsCachePolicy)
  GOOGLE_DCHECK_NE(&from, this);
  const ResultsCachePolicy* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResultsCachePolicy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.ResultsCachePolicy)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.ResultsCachePolicy)
    MergeFrom(*source);
  }
}

void ResultsCachePolicy::MergeFrom(const ResultsCachePolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.ResultsCachePolicy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.priority() != 0) {
    _internal_set_priority(from._internal_priority());
  }
}

void ResultsCachePolicy::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.ResultsCachePolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultsCachePolicy::CopyFrom(const ResultsCachePolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.ResultsCachePolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultsCachePolicy::IsInitialized() const {
  return true;
}

void ResultsCachePolicy::InternalSwap(ResultsCachePolicy* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(priority_, other->priority_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResultsCachePolicy::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ExecuteRequest::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::Digest& action_digest(const ExecuteRequest* msg);
  static const ::build::bazel::remote::execution::v2::ExecutionPolicy& execution_policy(const ExecuteRequest* msg);
  static const ::build::bazel::remote::execution::v2::ResultsCachePolicy& results_cache_policy(const ExecuteRequest* msg);
};

const ::build::bazel::remote::execution::v2::Digest&
ExecuteRequest::_Internal::action_digest(const ExecuteRequest* msg) {
  return *msg->action_digest_;
}
const ::build::bazel::remote::execution::v2::ExecutionPolicy&
ExecuteRequest::_Internal::execution_policy(const ExecuteRequest* msg) {
  return *msg->execution_policy_;
}
const ::build::bazel::remote::execution::v2::ResultsCachePolicy&
ExecuteRequest::_Internal::results_cache_policy(const ExecuteRequest* msg) {
  return *msg->results_cache_policy_;
}
ExecuteRequest::ExecuteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.ExecuteRequest)
}
ExecuteRequest::ExecuteRequest(const ExecuteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  instance_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instance_name().empty()) {
    instance_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_instance_name(), 
      GetArena());
  }
  if (from._internal_has_action_digest()) {
    action_digest_ = new ::build::bazel::remote::execution::v2::Digest(*from.action_digest_);
  } else {
    action_digest_ = nullptr;
  }
  if (from._internal_has_execution_policy()) {
    execution_policy_ = new ::build::bazel::remote::execution::v2::ExecutionPolicy(*from.execution_policy_);
  } else {
    execution_policy_ = nullptr;
  }
  if (from._internal_has_results_cache_policy()) {
    results_cache_policy_ = new ::build::bazel::remote::execution::v2::ResultsCachePolicy(*from.results_cache_policy_);
  } else {
    results_cache_policy_ = nullptr;
  }
  skip_cache_lookup_ = from.skip_cache_lookup_;
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.ExecuteRequest)
}

void ExecuteRequest::SharedCtor() {
instance_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&action_digest_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&skip_cache_lookup_) -
    reinterpret_cast<char*>(&action_digest_)) + sizeof(skip_cache_lookup_));
}

ExecuteRequest::~ExecuteRequest() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.ExecuteRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExecuteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  instance_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete action_digest_;
  if (this != internal_default_instance()) delete execution_policy_;
  if (this != internal_default_instance()) delete results_cache_policy_;
}

void ExecuteRequest::ArenaDtor(void* object) {
  ExecuteRequest* _this = reinterpret_cast< ExecuteRequest* >(object);
  (void)_this;
}
void ExecuteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExecuteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ExecuteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.ExecuteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_name_.ClearToEmpty();
  if (GetArena() == nullptr && action_digest_ != nullptr) {
    delete action_digest_;
  }
  action_digest_ = nullptr;
  if (GetArena() == nullptr && execution_policy_ != nullptr) {
    delete execution_policy_;
  }
  execution_policy_ = nullptr;
  if (GetArena() == nullptr && results_cache_policy_ != nullptr) {
    delete results_cache_policy_;
  }
  results_cache_policy_ = nullptr;
  skip_cache_lookup_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecuteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string instance_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instance_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.ExecuteRequest.instance_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool skip_cache_lookup = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          skip_cache_lookup_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.Digest action_digest = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_action_digest(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.ExecutionPolicy execution_policy = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_execution_policy(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.ResultsCachePolicy results_cache_policy = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_results_cache_policy(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExecuteRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.ExecuteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_name = 1;
  if (this->instance_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance_name().data(), static_cast<int>(this->_internal_instance_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.ExecuteRequest.instance_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance_name(), target);
  }

  // bool skip_cache_lookup = 3;
  if (this->skip_cache_lookup() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_skip_cache_lookup(), target);
  }

  // .build.bazel.remote.execution.v2.Digest action_digest = 6;
  if (this->has_action_digest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::action_digest(this), target, stream);
  }

  // .build.bazel.remote.execution.v2.ExecutionPolicy execution_policy = 7;
  if (this->has_execution_policy()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::execution_policy(this), target, stream);
  }

  // .build.bazel.remote.execution.v2.ResultsCachePolicy results_cache_policy = 8;
  if (this->has_results_cache_policy()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::results_cache_policy(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.ExecuteRequest)
  return target;
}

size_t ExecuteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.ExecuteRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string instance_name = 1;
  if (this->instance_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance_name());
  }

  // .build.bazel.remote.execution.v2.Digest action_digest = 6;
  if (this->has_action_digest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *action_digest_);
  }

  // .build.bazel.remote.execution.v2.ExecutionPolicy execution_policy = 7;
  if (this->has_execution_policy()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *execution_policy_);
  }

  // .build.bazel.remote.execution.v2.ResultsCachePolicy results_cache_policy = 8;
  if (this->has_results_cache_policy()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *results_cache_policy_);
  }

  // bool skip_cache_lookup = 3;
  if (this->skip_cache_lookup() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.ExecuteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExecuteRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.ExecuteRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.ExecuteRequest)
    MergeFrom(*source);
  }
}

void ExecuteRequest::MergeFrom(const ExecuteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.ExecuteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instance_name().size() > 0) {
    _internal_set_instance_name(from._internal_instance_name());
  }
  if (from.has_action_digest()) {
    _internal_mutable_action_digest()->::build::bazel::remote::execution::v2::Digest::MergeFrom(from._internal_action_digest());
  }
  if (from.has_execution_policy()) {
    _internal_mutable_execution_policy()->::build::bazel::remote::execution::v2::ExecutionPolicy::MergeFrom(from._internal_execution_policy());
  }
  if (from.has_results_cache_policy()) {
    _internal_mutable_results_cache_policy()->::build::bazel::remote::execution::v2::ResultsCachePolicy::MergeFrom(from._internal_results_cache_policy());
  }
  if (from.skip_cache_lookup() != 0) {
    _internal_set_skip_cache_lookup(from._internal_skip_cache_lookup());
  }
}

void ExecuteRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.ExecuteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteRequest::CopyFrom(const ExecuteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.ExecuteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteRequest::IsInitialized() const {
  return true;
}

void ExecuteRequest::InternalSwap(ExecuteRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  instance_name_.Swap(&other->instance_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExecuteRequest, skip_cache_lookup_)
      + sizeof(ExecuteRequest::skip_cache_lookup_)
      - PROTOBUF_FIELD_OFFSET(ExecuteRequest, action_digest_)>(
          reinterpret_cast<char*>(&action_digest_),
          reinterpret_cast<char*>(&other->action_digest_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecuteRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LogFile::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::Digest& digest(const LogFile* msg);
};

const ::build::bazel::remote::execution::v2::Digest&
LogFile::_Internal::digest(const LogFile* msg) {
  return *msg->digest_;
}
LogFile::LogFile(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.LogFile)
}
LogFile::LogFile(const LogFile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_digest()) {
    digest_ = new ::build::bazel::remote::execution::v2::Digest(*from.digest_);
  } else {
    digest_ = nullptr;
  }
  human_readable_ = from.human_readable_;
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.LogFile)
}

void LogFile::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&digest_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&human_readable_) -
    reinterpret_cast<char*>(&digest_)) + sizeof(human_readable_));
}

LogFile::~LogFile() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.LogFile)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LogFile::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete digest_;
}

void LogFile::ArenaDtor(void* object) {
  LogFile* _this = reinterpret_cast< LogFile* >(object);
  (void)_this;
}
void LogFile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LogFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LogFile::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.LogFile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && digest_ != nullptr) {
    delete digest_;
  }
  digest_ = nullptr;
  human_readable_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogFile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .build.bazel.remote.execution.v2.Digest digest = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_digest(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool human_readable = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          human_readable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LogFile::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.LogFile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .build.bazel.remote.execution.v2.Digest digest = 1;
  if (this->has_digest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::digest(this), target, stream);
  }

  // bool human_readable = 2;
  if (this->human_readable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_human_readable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.LogFile)
  return target;
}

size_t LogFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.LogFile)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .build.bazel.remote.execution.v2.Digest digest = 1;
  if (this->has_digest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *digest_);
  }

  // bool human_readable = 2;
  if (this->human_readable() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogFile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.LogFile)
  GOOGLE_DCHECK_NE(&from, this);
  const LogFile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LogFile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.LogFile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.LogFile)
    MergeFrom(*source);
  }
}

void LogFile::MergeFrom(const LogFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.LogFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_digest()) {
    _internal_mutable_digest()->::build::bazel::remote::execution::v2::Digest::MergeFrom(from._internal_digest());
  }
  if (from.human_readable() != 0) {
    _internal_set_human_readable(from._internal_human_readable());
  }
}

void LogFile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.LogFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogFile::CopyFrom(const LogFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.LogFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogFile::IsInitialized() const {
  return true;
}

void LogFile::InternalSwap(LogFile* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LogFile, human_readable_)
      + sizeof(LogFile::human_readable_)
      - PROTOBUF_FIELD_OFFSET(LogFile, digest_)>(
          reinterpret_cast<char*>(&digest_),
          reinterpret_cast<char*>(&other->digest_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LogFile::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ExecuteResponse_ServerLogsEntry_DoNotUse::ExecuteResponse_ServerLogsEntry_DoNotUse() {}
ExecuteResponse_ServerLogsEntry_DoNotUse::ExecuteResponse_ServerLogsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ExecuteResponse_ServerLogsEntry_DoNotUse::MergeFrom(const ExecuteResponse_ServerLogsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ExecuteResponse_ServerLogsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ExecuteResponse_ServerLogsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class ExecuteResponse::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::ActionResult& result(const ExecuteResponse* msg);
  static const ::google::rpc::Status& status(const ExecuteResponse* msg);
};

const ::build::bazel::remote::execution::v2::ActionResult&
ExecuteResponse::_Internal::result(const ExecuteResponse* msg) {
  return *msg->result_;
}
const ::google::rpc::Status&
ExecuteResponse::_Internal::status(const ExecuteResponse* msg) {
  return *msg->status_;
}
void ExecuteResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
ExecuteResponse::ExecuteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  server_logs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.ExecuteResponse)
}
ExecuteResponse::ExecuteResponse(const ExecuteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  server_logs_.MergeFrom(from.server_logs_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::build::bazel::remote::execution::v2::ActionResult(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_status()) {
    status_ = new ::google::rpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  cached_result_ = from.cached_result_;
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.ExecuteResponse)
}

void ExecuteResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&cached_result_) -
    reinterpret_cast<char*>(&result_)) + sizeof(cached_result_));
}

ExecuteResponse::~ExecuteResponse() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.ExecuteResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExecuteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete status_;
}

void ExecuteResponse::ArenaDtor(void* object) {
  ExecuteResponse* _this = reinterpret_cast< ExecuteResponse* >(object);
  (void)_this;
}
void ExecuteResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExecuteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ExecuteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.ExecuteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_logs_.Clear();
  message_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  cached_result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecuteResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .build.bazel.remote.execution.v2.ActionResult result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool cached_result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          cached_result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.rpc.Status status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .build.bazel.remote.execution.v2.LogFile> server_logs = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&server_logs_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // string message = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.ExecuteResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExecuteResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.ExecuteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .build.bazel.remote.execution.v2.ActionResult result = 1;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  // bool cached_result = 2;
  if (this->cached_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_cached_result(), target);
  }

  // .google.rpc.Status status = 3;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::status(this), target, stream);
  }

  // map<string, .build.bazel.remote.execution.v2.LogFile> server_logs = 4;
  if (!this->_internal_server_logs().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::build::bazel::remote::execution::v2::LogFile >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "build.bazel.remote.execution.v2.ExecuteResponse.ServerLogsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_server_logs().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_server_logs().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::build::bazel::remote::execution::v2::LogFile >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::build::bazel::remote::execution::v2::LogFile >::const_iterator
          it = this->_internal_server_logs().begin();
          it != this->_internal_server_logs().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ExecuteResponse_ServerLogsEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::build::bazel::remote::execution::v2::LogFile >::const_iterator
          it = this->_internal_server_logs().begin();
          it != this->_internal_server_logs().end(); ++it) {
        target = ExecuteResponse_ServerLogsEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string message = 5;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.ExecuteResponse.message");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.ExecuteResponse)
  return target;
}

size_t ExecuteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.ExecuteResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .build.bazel.remote.execution.v2.LogFile> server_logs = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_server_logs_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::build::bazel::remote::execution::v2::LogFile >::const_iterator
      it = this->_internal_server_logs().begin();
      it != this->_internal_server_logs().end(); ++it) {
    total_size += ExecuteResponse_ServerLogsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string message = 5;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .build.bazel.remote.execution.v2.ActionResult result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .google.rpc.Status status = 3;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // bool cached_result = 2;
  if (this->cached_result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.ExecuteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExecuteResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.ExecuteResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.ExecuteResponse)
    MergeFrom(*source);
  }
}

void ExecuteResponse::MergeFrom(const ExecuteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.ExecuteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  server_logs_.MergeFrom(from.server_logs_);
  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::build::bazel::remote::execution::v2::ActionResult::MergeFrom(from._internal_result());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::google::rpc::Status::MergeFrom(from._internal_status());
  }
  if (from.cached_result() != 0) {
    _internal_set_cached_result(from._internal_cached_result());
  }
}

void ExecuteResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.ExecuteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteResponse::CopyFrom(const ExecuteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.ExecuteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteResponse::IsInitialized() const {
  return true;
}

void ExecuteResponse::InternalSwap(ExecuteResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  server_logs_.Swap(&other->server_logs_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExecuteResponse, cached_result_)
      + sizeof(ExecuteResponse::cached_result_)
      - PROTOBUF_FIELD_OFFSET(ExecuteResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecuteResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ExecutionStage::_Internal {
 public:
};

ExecutionStage::ExecutionStage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.ExecutionStage)
}
ExecutionStage::ExecutionStage(const ExecutionStage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.ExecutionStage)
}

void ExecutionStage::SharedCtor() {
}

ExecutionStage::~ExecutionStage() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.ExecutionStage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExecutionStage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ExecutionStage::ArenaDtor(void* object) {
  ExecutionStage* _this = reinterpret_cast< ExecutionStage* >(object);
  (void)_this;
}
void ExecutionStage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExecutionStage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ExecutionStage::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.ExecutionStage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecutionStage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExecutionStage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.ExecutionStage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.ExecutionStage)
  return target;
}

size_t ExecutionStage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.ExecutionStage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecutionStage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.ExecutionStage)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutionStage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExecutionStage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.ExecutionStage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.ExecutionStage)
    MergeFrom(*source);
  }
}

void ExecutionStage::MergeFrom(const ExecutionStage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.ExecutionStage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ExecutionStage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.ExecutionStage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionStage::CopyFrom(const ExecutionStage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.ExecutionStage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionStage::IsInitialized() const {
  return true;
}

void ExecutionStage::InternalSwap(ExecutionStage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecutionStage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ExecuteOperationMetadata::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::Digest& action_digest(const ExecuteOperationMetadata* msg);
};

const ::build::bazel::remote::execution::v2::Digest&
ExecuteOperationMetadata::_Internal::action_digest(const ExecuteOperationMetadata* msg) {
  return *msg->action_digest_;
}
ExecuteOperationMetadata::ExecuteOperationMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.ExecuteOperationMetadata)
}
ExecuteOperationMetadata::ExecuteOperationMetadata(const ExecuteOperationMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  stdout_stream_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_stdout_stream_name().empty()) {
    stdout_stream_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_stdout_stream_name(), 
      GetArena());
  }
  stderr_stream_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_stderr_stream_name().empty()) {
    stderr_stream_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_stderr_stream_name(), 
      GetArena());
  }
  if (from._internal_has_action_digest()) {
    action_digest_ = new ::build::bazel::remote::execution::v2::Digest(*from.action_digest_);
  } else {
    action_digest_ = nullptr;
  }
  stage_ = from.stage_;
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.ExecuteOperationMetadata)
}

void ExecuteOperationMetadata::SharedCtor() {
stdout_stream_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
stderr_stream_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&action_digest_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&stage_) -
    reinterpret_cast<char*>(&action_digest_)) + sizeof(stage_));
}

ExecuteOperationMetadata::~ExecuteOperationMetadata() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.ExecuteOperationMetadata)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExecuteOperationMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  stdout_stream_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  stderr_stream_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete action_digest_;
}

void ExecuteOperationMetadata::ArenaDtor(void* object) {
  ExecuteOperationMetadata* _this = reinterpret_cast< ExecuteOperationMetadata* >(object);
  (void)_this;
}
void ExecuteOperationMetadata::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExecuteOperationMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ExecuteOperationMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.ExecuteOperationMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stdout_stream_name_.ClearToEmpty();
  stderr_stream_name_.ClearToEmpty();
  if (GetArena() == nullptr && action_digest_ != nullptr) {
    delete action_digest_;
  }
  action_digest_ = nullptr;
  stage_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecuteOperationMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .build.bazel.remote.execution.v2.ExecutionStage.Value stage = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_stage(static_cast<::build::bazel::remote::execution::v2::ExecutionStage_Value>(val));
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.Digest action_digest = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_action_digest(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string stdout_stream_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_stdout_stream_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.ExecuteOperationMetadata.stdout_stream_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string stderr_stream_name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_stderr_stream_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.ExecuteOperationMetadata.stderr_stream_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExecuteOperationMetadata::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.ExecuteOperationMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .build.bazel.remote.execution.v2.ExecutionStage.Value stage = 1;
  if (this->stage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_stage(), target);
  }

  // .build.bazel.remote.execution.v2.Digest action_digest = 2;
  if (this->has_action_digest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::action_digest(this), target, stream);
  }

  // string stdout_stream_name = 3;
  if (this->stdout_stream_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stdout_stream_name().data(), static_cast<int>(this->_internal_stdout_stream_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.ExecuteOperationMetadata.stdout_stream_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_stdout_stream_name(), target);
  }

  // string stderr_stream_name = 4;
  if (this->stderr_stream_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stderr_stream_name().data(), static_cast<int>(this->_internal_stderr_stream_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.ExecuteOperationMetadata.stderr_stream_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_stderr_stream_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.ExecuteOperationMetadata)
  return target;
}

size_t ExecuteOperationMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.ExecuteOperationMetadata)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string stdout_stream_name = 3;
  if (this->stdout_stream_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stdout_stream_name());
  }

  // string stderr_stream_name = 4;
  if (this->stderr_stream_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stderr_stream_name());
  }

  // .build.bazel.remote.execution.v2.Digest action_digest = 2;
  if (this->has_action_digest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *action_digest_);
  }

  // .build.bazel.remote.execution.v2.ExecutionStage.Value stage = 1;
  if (this->stage() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_stage());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteOperationMetadata::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.ExecuteOperationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteOperationMetadata* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExecuteOperationMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.ExecuteOperationMetadata)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.ExecuteOperationMetadata)
    MergeFrom(*source);
  }
}

void ExecuteOperationMetadata::MergeFrom(const ExecuteOperationMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.ExecuteOperationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stdout_stream_name().size() > 0) {
    _internal_set_stdout_stream_name(from._internal_stdout_stream_name());
  }
  if (from.stderr_stream_name().size() > 0) {
    _internal_set_stderr_stream_name(from._internal_stderr_stream_name());
  }
  if (from.has_action_digest()) {
    _internal_mutable_action_digest()->::build::bazel::remote::execution::v2::Digest::MergeFrom(from._internal_action_digest());
  }
  if (from.stage() != 0) {
    _internal_set_stage(from._internal_stage());
  }
}

void ExecuteOperationMetadata::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.ExecuteOperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteOperationMetadata::CopyFrom(const ExecuteOperationMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.ExecuteOperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteOperationMetadata::IsInitialized() const {
  return true;
}

void ExecuteOperationMetadata::InternalSwap(ExecuteOperationMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  stdout_stream_name_.Swap(&other->stdout_stream_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  stderr_stream_name_.Swap(&other->stderr_stream_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExecuteOperationMetadata, stage_)
      + sizeof(ExecuteOperationMetadata::stage_)
      - PROTOBUF_FIELD_OFFSET(ExecuteOperationMetadata, action_digest_)>(
          reinterpret_cast<char*>(&action_digest_),
          reinterpret_cast<char*>(&other->action_digest_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecuteOperationMetadata::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class WaitExecutionRequest::_Internal {
 public:
};

WaitExecutionRequest::WaitExecutionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.WaitExecutionRequest)
}
WaitExecutionRequest::WaitExecutionRequest(const WaitExecutionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.WaitExecutionRequest)
}

void WaitExecutionRequest::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

WaitExecutionRequest::~WaitExecutionRequest() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.WaitExecutionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WaitExecutionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WaitExecutionRequest::ArenaDtor(void* object) {
  WaitExecutionRequest* _this = reinterpret_cast< WaitExecutionRequest* >(object);
  (void)_this;
}
void WaitExecutionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WaitExecutionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WaitExecutionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.WaitExecutionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WaitExecutionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.WaitExecutionRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WaitExecutionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.WaitExecutionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.WaitExecutionRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.WaitExecutionRequest)
  return target;
}

size_t WaitExecutionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.WaitExecutionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WaitExecutionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.WaitExecutionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WaitExecutionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WaitExecutionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.WaitExecutionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.WaitExecutionRequest)
    MergeFrom(*source);
  }
}

void WaitExecutionRequest::MergeFrom(const WaitExecutionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.WaitExecutionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void WaitExecutionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.WaitExecutionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaitExecutionRequest::CopyFrom(const WaitExecutionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.WaitExecutionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaitExecutionRequest::IsInitialized() const {
  return true;
}

void WaitExecutionRequest::InternalSwap(WaitExecutionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata WaitExecutionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetActionResultRequest::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::Digest& action_digest(const GetActionResultRequest* msg);
};

const ::build::bazel::remote::execution::v2::Digest&
GetActionResultRequest::_Internal::action_digest(const GetActionResultRequest* msg) {
  return *msg->action_digest_;
}
GetActionResultRequest::GetActionResultRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  inline_output_files_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.GetActionResultRequest)
}
GetActionResultRequest::GetActionResultRequest(const GetActionResultRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      inline_output_files_(from.inline_output_files_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  instance_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instance_name().empty()) {
    instance_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_instance_name(), 
      GetArena());
  }
  if (from._internal_has_action_digest()) {
    action_digest_ = new ::build::bazel::remote::execution::v2::Digest(*from.action_digest_);
  } else {
    action_digest_ = nullptr;
  }
  ::memcpy(&inline_stdout_, &from.inline_stdout_,
    static_cast<size_t>(reinterpret_cast<char*>(&inline_stderr_) -
    reinterpret_cast<char*>(&inline_stdout_)) + sizeof(inline_stderr_));
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.GetActionResultRequest)
}

void GetActionResultRequest::SharedCtor() {
instance_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&action_digest_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&inline_stderr_) -
    reinterpret_cast<char*>(&action_digest_)) + sizeof(inline_stderr_));
}

GetActionResultRequest::~GetActionResultRequest() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.GetActionResultRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetActionResultRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  instance_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete action_digest_;
}

void GetActionResultRequest::ArenaDtor(void* object) {
  GetActionResultRequest* _this = reinterpret_cast< GetActionResultRequest* >(object);
  (void)_this;
}
void GetActionResultRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetActionResultRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetActionResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.GetActionResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inline_output_files_.Clear();
  instance_name_.ClearToEmpty();
  if (GetArena() == nullptr && action_digest_ != nullptr) {
    delete action_digest_;
  }
  action_digest_ = nullptr;
  ::memset(&inline_stdout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&inline_stderr_) -
      reinterpret_cast<char*>(&inline_stdout_)) + sizeof(inline_stderr_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetActionResultRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string instance_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instance_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.GetActionResultRequest.instance_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.Digest action_digest = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_action_digest(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool inline_stdout = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          inline_stdout_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool inline_stderr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          inline_stderr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string inline_output_files = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_inline_output_files();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.GetActionResultRequest.inline_output_files"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetActionResultRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.GetActionResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_name = 1;
  if (this->instance_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance_name().data(), static_cast<int>(this->_internal_instance_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.GetActionResultRequest.instance_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance_name(), target);
  }

  // .build.bazel.remote.execution.v2.Digest action_digest = 2;
  if (this->has_action_digest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::action_digest(this), target, stream);
  }

  // bool inline_stdout = 3;
  if (this->inline_stdout() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_inline_stdout(), target);
  }

  // bool inline_stderr = 4;
  if (this->inline_stderr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_inline_stderr(), target);
  }

  // repeated string inline_output_files = 5;
  for (int i = 0, n = this->_internal_inline_output_files_size(); i < n; i++) {
    const auto& s = this->_internal_inline_output_files(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.GetActionResultRequest.inline_output_files");
    target = stream->WriteString(5, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.GetActionResultRequest)
  return target;
}

size_t GetActionResultRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.GetActionResultRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string inline_output_files = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(inline_output_files_.size());
  for (int i = 0, n = inline_output_files_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      inline_output_files_.Get(i));
  }

  // string instance_name = 1;
  if (this->instance_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance_name());
  }

  // .build.bazel.remote.execution.v2.Digest action_digest = 2;
  if (this->has_action_digest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *action_digest_);
  }

  // bool inline_stdout = 3;
  if (this->inline_stdout() != 0) {
    total_size += 1 + 1;
  }

  // bool inline_stderr = 4;
  if (this->inline_stderr() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetActionResultRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.GetActionResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetActionResultRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetActionResultRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.GetActionResultRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.GetActionResultRequest)
    MergeFrom(*source);
  }
}

void GetActionResultRequest::MergeFrom(const GetActionResultRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.GetActionResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inline_output_files_.MergeFrom(from.inline_output_files_);
  if (from.instance_name().size() > 0) {
    _internal_set_instance_name(from._internal_instance_name());
  }
  if (from.has_action_digest()) {
    _internal_mutable_action_digest()->::build::bazel::remote::execution::v2::Digest::MergeFrom(from._internal_action_digest());
  }
  if (from.inline_stdout() != 0) {
    _internal_set_inline_stdout(from._internal_inline_stdout());
  }
  if (from.inline_stderr() != 0) {
    _internal_set_inline_stderr(from._internal_inline_stderr());
  }
}

void GetActionResultRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.GetActionResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetActionResultRequest::CopyFrom(const GetActionResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.GetActionResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetActionResultRequest::IsInitialized() const {
  return true;
}

void GetActionResultRequest::InternalSwap(GetActionResultRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  inline_output_files_.InternalSwap(&other->inline_output_files_);
  instance_name_.Swap(&other->instance_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetActionResultRequest, inline_stderr_)
      + sizeof(GetActionResultRequest::inline_stderr_)
      - PROTOBUF_FIELD_OFFSET(GetActionResultRequest, action_digest_)>(
          reinterpret_cast<char*>(&action_digest_),
          reinterpret_cast<char*>(&other->action_digest_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetActionResultRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UpdateActionResultRequest::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::Digest& action_digest(const UpdateActionResultRequest* msg);
  static const ::build::bazel::remote::execution::v2::ActionResult& action_result(const UpdateActionResultRequest* msg);
  static const ::build::bazel::remote::execution::v2::ResultsCachePolicy& results_cache_policy(const UpdateActionResultRequest* msg);
};

const ::build::bazel::remote::execution::v2::Digest&
UpdateActionResultRequest::_Internal::action_digest(const UpdateActionResultRequest* msg) {
  return *msg->action_digest_;
}
const ::build::bazel::remote::execution::v2::ActionResult&
UpdateActionResultRequest::_Internal::action_result(const UpdateActionResultRequest* msg) {
  return *msg->action_result_;
}
const ::build::bazel::remote::execution::v2::ResultsCachePolicy&
UpdateActionResultRequest::_Internal::results_cache_policy(const UpdateActionResultRequest* msg) {
  return *msg->results_cache_policy_;
}
UpdateActionResultRequest::UpdateActionResultRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.UpdateActionResultRequest)
}
UpdateActionResultRequest::UpdateActionResultRequest(const UpdateActionResultRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  instance_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instance_name().empty()) {
    instance_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_instance_name(), 
      GetArena());
  }
  if (from._internal_has_action_digest()) {
    action_digest_ = new ::build::bazel::remote::execution::v2::Digest(*from.action_digest_);
  } else {
    action_digest_ = nullptr;
  }
  if (from._internal_has_action_result()) {
    action_result_ = new ::build::bazel::remote::execution::v2::ActionResult(*from.action_result_);
  } else {
    action_result_ = nullptr;
  }
  if (from._internal_has_results_cache_policy()) {
    results_cache_policy_ = new ::build::bazel::remote::execution::v2::ResultsCachePolicy(*from.results_cache_policy_);
  } else {
    results_cache_policy_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.UpdateActionResultRequest)
}

void UpdateActionResultRequest::SharedCtor() {
instance_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&action_digest_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&results_cache_policy_) -
    reinterpret_cast<char*>(&action_digest_)) + sizeof(results_cache_policy_));
}

UpdateActionResultRequest::~UpdateActionResultRequest() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.UpdateActionResultRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateActionResultRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  instance_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete action_digest_;
  if (this != internal_default_instance()) delete action_result_;
  if (this != internal_default_instance()) delete results_cache_policy_;
}

void UpdateActionResultRequest::ArenaDtor(void* object) {
  UpdateActionResultRequest* _this = reinterpret_cast< UpdateActionResultRequest* >(object);
  (void)_this;
}
void UpdateActionResultRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateActionResultRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateActionResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.UpdateActionResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_name_.ClearToEmpty();
  if (GetArena() == nullptr && action_digest_ != nullptr) {
    delete action_digest_;
  }
  action_digest_ = nullptr;
  if (GetArena() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
  if (GetArena() == nullptr && results_cache_policy_ != nullptr) {
    delete results_cache_policy_;
  }
  results_cache_policy_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateActionResultRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string instance_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instance_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.UpdateActionResultRequest.instance_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.Digest action_digest = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_action_digest(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.ActionResult action_result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_action_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.ResultsCachePolicy results_cache_policy = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_results_cache_policy(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateActionResultRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.UpdateActionResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_name = 1;
  if (this->instance_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance_name().data(), static_cast<int>(this->_internal_instance_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.UpdateActionResultRequest.instance_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance_name(), target);
  }

  // .build.bazel.remote.execution.v2.Digest action_digest = 2;
  if (this->has_action_digest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::action_digest(this), target, stream);
  }

  // .build.bazel.remote.execution.v2.ActionResult action_result = 3;
  if (this->has_action_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::action_result(this), target, stream);
  }

  // .build.bazel.remote.execution.v2.ResultsCachePolicy results_cache_policy = 4;
  if (this->has_results_cache_policy()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::results_cache_policy(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.UpdateActionResultRequest)
  return target;
}

size_t UpdateActionResultRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.UpdateActionResultRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string instance_name = 1;
  if (this->instance_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance_name());
  }

  // .build.bazel.remote.execution.v2.Digest action_digest = 2;
  if (this->has_action_digest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *action_digest_);
  }

  // .build.bazel.remote.execution.v2.ActionResult action_result = 3;
  if (this->has_action_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *action_result_);
  }

  // .build.bazel.remote.execution.v2.ResultsCachePolicy results_cache_policy = 4;
  if (this->has_results_cache_policy()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *results_cache_policy_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateActionResultRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.UpdateActionResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateActionResultRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateActionResultRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.UpdateActionResultRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.UpdateActionResultRequest)
    MergeFrom(*source);
  }
}

void UpdateActionResultRequest::MergeFrom(const UpdateActionResultRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.UpdateActionResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instance_name().size() > 0) {
    _internal_set_instance_name(from._internal_instance_name());
  }
  if (from.has_action_digest()) {
    _internal_mutable_action_digest()->::build::bazel::remote::execution::v2::Digest::MergeFrom(from._internal_action_digest());
  }
  if (from.has_action_result()) {
    _internal_mutable_action_result()->::build::bazel::remote::execution::v2::ActionResult::MergeFrom(from._internal_action_result());
  }
  if (from.has_results_cache_policy()) {
    _internal_mutable_results_cache_policy()->::build::bazel::remote::execution::v2::ResultsCachePolicy::MergeFrom(from._internal_results_cache_policy());
  }
}

void UpdateActionResultRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.UpdateActionResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateActionResultRequest::CopyFrom(const UpdateActionResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.UpdateActionResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateActionResultRequest::IsInitialized() const {
  return true;
}

void UpdateActionResultRequest::InternalSwap(UpdateActionResultRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  instance_name_.Swap(&other->instance_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateActionResultRequest, results_cache_policy_)
      + sizeof(UpdateActionResultRequest::results_cache_policy_)
      - PROTOBUF_FIELD_OFFSET(UpdateActionResultRequest, action_digest_)>(
          reinterpret_cast<char*>(&action_digest_),
          reinterpret_cast<char*>(&other->action_digest_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateActionResultRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FindMissingBlobsRequest::_Internal {
 public:
};

FindMissingBlobsRequest::FindMissingBlobsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  blob_digests_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.FindMissingBlobsRequest)
}
FindMissingBlobsRequest::FindMissingBlobsRequest(const FindMissingBlobsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      blob_digests_(from.blob_digests_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  instance_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instance_name().empty()) {
    instance_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_instance_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.FindMissingBlobsRequest)
}

void FindMissingBlobsRequest::SharedCtor() {
instance_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

FindMissingBlobsRequest::~FindMissingBlobsRequest() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.FindMissingBlobsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FindMissingBlobsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  instance_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FindMissingBlobsRequest::ArenaDtor(void* object) {
  FindMissingBlobsRequest* _this = reinterpret_cast< FindMissingBlobsRequest* >(object);
  (void)_this;
}
void FindMissingBlobsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FindMissingBlobsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FindMissingBlobsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.FindMissingBlobsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blob_digests_.Clear();
  instance_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindMissingBlobsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string instance_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instance_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.FindMissingBlobsRequest.instance_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .build.bazel.remote.execution.v2.Digest blob_digests = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_blob_digests(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FindMissingBlobsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.FindMissingBlobsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_name = 1;
  if (this->instance_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance_name().data(), static_cast<int>(this->_internal_instance_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.FindMissingBlobsRequest.instance_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance_name(), target);
  }

  // repeated .build.bazel.remote.execution.v2.Digest blob_digests = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_blob_digests_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_blob_digests(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.FindMissingBlobsRequest)
  return target;
}

size_t FindMissingBlobsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.FindMissingBlobsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.Digest blob_digests = 2;
  total_size += 1UL * this->_internal_blob_digests_size();
  for (const auto& msg : this->blob_digests_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string instance_name = 1;
  if (this->instance_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FindMissingBlobsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.FindMissingBlobsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FindMissingBlobsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FindMissingBlobsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.FindMissingBlobsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.FindMissingBlobsRequest)
    MergeFrom(*source);
  }
}

void FindMissingBlobsRequest::MergeFrom(const FindMissingBlobsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.FindMissingBlobsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  blob_digests_.MergeFrom(from.blob_digests_);
  if (from.instance_name().size() > 0) {
    _internal_set_instance_name(from._internal_instance_name());
  }
}

void FindMissingBlobsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.FindMissingBlobsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindMissingBlobsRequest::CopyFrom(const FindMissingBlobsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.FindMissingBlobsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindMissingBlobsRequest::IsInitialized() const {
  return true;
}

void FindMissingBlobsRequest::InternalSwap(FindMissingBlobsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  blob_digests_.InternalSwap(&other->blob_digests_);
  instance_name_.Swap(&other->instance_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata FindMissingBlobsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FindMissingBlobsResponse::_Internal {
 public:
};

FindMissingBlobsResponse::FindMissingBlobsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  missing_blob_digests_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.FindMissingBlobsResponse)
}
FindMissingBlobsResponse::FindMissingBlobsResponse(const FindMissingBlobsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      missing_blob_digests_(from.missing_blob_digests_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.FindMissingBlobsResponse)
}

void FindMissingBlobsResponse::SharedCtor() {
}

FindMissingBlobsResponse::~FindMissingBlobsResponse() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.FindMissingBlobsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FindMissingBlobsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FindMissingBlobsResponse::ArenaDtor(void* object) {
  FindMissingBlobsResponse* _this = reinterpret_cast< FindMissingBlobsResponse* >(object);
  (void)_this;
}
void FindMissingBlobsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FindMissingBlobsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FindMissingBlobsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.FindMissingBlobsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  missing_blob_digests_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindMissingBlobsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .build.bazel.remote.execution.v2.Digest missing_blob_digests = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_missing_blob_digests(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FindMissingBlobsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.FindMissingBlobsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.Digest missing_blob_digests = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_missing_blob_digests_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_missing_blob_digests(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.FindMissingBlobsResponse)
  return target;
}

size_t FindMissingBlobsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.FindMissingBlobsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.Digest missing_blob_digests = 2;
  total_size += 1UL * this->_internal_missing_blob_digests_size();
  for (const auto& msg : this->missing_blob_digests_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FindMissingBlobsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.FindMissingBlobsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FindMissingBlobsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FindMissingBlobsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.FindMissingBlobsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.FindMissingBlobsResponse)
    MergeFrom(*source);
  }
}

void FindMissingBlobsResponse::MergeFrom(const FindMissingBlobsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.FindMissingBlobsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  missing_blob_digests_.MergeFrom(from.missing_blob_digests_);
}

void FindMissingBlobsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.FindMissingBlobsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindMissingBlobsResponse::CopyFrom(const FindMissingBlobsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.FindMissingBlobsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindMissingBlobsResponse::IsInitialized() const {
  return true;
}

void FindMissingBlobsResponse::InternalSwap(FindMissingBlobsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  missing_blob_digests_.InternalSwap(&other->missing_blob_digests_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FindMissingBlobsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BatchUpdateBlobsRequest_Request::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::Digest& digest(const BatchUpdateBlobsRequest_Request* msg);
};

const ::build::bazel::remote::execution::v2::Digest&
BatchUpdateBlobsRequest_Request::_Internal::digest(const BatchUpdateBlobsRequest_Request* msg) {
  return *msg->digest_;
}
BatchUpdateBlobsRequest_Request::BatchUpdateBlobsRequest_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest.Request)
}
BatchUpdateBlobsRequest_Request::BatchUpdateBlobsRequest_Request(const BatchUpdateBlobsRequest_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArena());
  }
  if (from._internal_has_digest()) {
    digest_ = new ::build::bazel::remote::execution::v2::Digest(*from.digest_);
  } else {
    digest_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest.Request)
}

void BatchUpdateBlobsRequest_Request::SharedCtor() {
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
digest_ = nullptr;
}

BatchUpdateBlobsRequest_Request::~BatchUpdateBlobsRequest_Request() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest.Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BatchUpdateBlobsRequest_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete digest_;
}

void BatchUpdateBlobsRequest_Request::ArenaDtor(void* object) {
  BatchUpdateBlobsRequest_Request* _this = reinterpret_cast< BatchUpdateBlobsRequest_Request* >(object);
  (void)_this;
}
void BatchUpdateBlobsRequest_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BatchUpdateBlobsRequest_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BatchUpdateBlobsRequest_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  if (GetArena() == nullptr && digest_ != nullptr) {
    delete digest_;
  }
  digest_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BatchUpdateBlobsRequest_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .build.bazel.remote.execution.v2.Digest digest = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_digest(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BatchUpdateBlobsRequest_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .build.bazel.remote.execution.v2.Digest digest = 1;
  if (this->has_digest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::digest(this), target, stream);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest.Request)
  return target;
}

size_t BatchUpdateBlobsRequest_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest.Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // .build.bazel.remote.execution.v2.Digest digest = 1;
  if (this->has_digest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *digest_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchUpdateBlobsRequest_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchUpdateBlobsRequest_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BatchUpdateBlobsRequest_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest.Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest.Request)
    MergeFrom(*source);
  }
}

void BatchUpdateBlobsRequest_Request::MergeFrom(const BatchUpdateBlobsRequest_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.has_digest()) {
    _internal_mutable_digest()->::build::bazel::remote::execution::v2::Digest::MergeFrom(from._internal_digest());
  }
}

void BatchUpdateBlobsRequest_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchUpdateBlobsRequest_Request::CopyFrom(const BatchUpdateBlobsRequest_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchUpdateBlobsRequest_Request::IsInitialized() const {
  return true;
}

void BatchUpdateBlobsRequest_Request::InternalSwap(BatchUpdateBlobsRequest_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(digest_, other->digest_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchUpdateBlobsRequest_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BatchUpdateBlobsRequest::_Internal {
 public:
};

BatchUpdateBlobsRequest::BatchUpdateBlobsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  requests_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest)
}
BatchUpdateBlobsRequest::BatchUpdateBlobsRequest(const BatchUpdateBlobsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      requests_(from.requests_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  instance_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instance_name().empty()) {
    instance_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_instance_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest)
}

void BatchUpdateBlobsRequest::SharedCtor() {
instance_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BatchUpdateBlobsRequest::~BatchUpdateBlobsRequest() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BatchUpdateBlobsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  instance_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BatchUpdateBlobsRequest::ArenaDtor(void* object) {
  BatchUpdateBlobsRequest* _this = reinterpret_cast< BatchUpdateBlobsRequest* >(object);
  (void)_this;
}
void BatchUpdateBlobsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BatchUpdateBlobsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BatchUpdateBlobsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requests_.Clear();
  instance_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BatchUpdateBlobsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string instance_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instance_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.BatchUpdateBlobsRequest.instance_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .build.bazel.remote.execution.v2.BatchUpdateBlobsRequest.Request requests = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_requests(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BatchUpdateBlobsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_name = 1;
  if (this->instance_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance_name().data(), static_cast<int>(this->_internal_instance_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.BatchUpdateBlobsRequest.instance_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance_name(), target);
  }

  // repeated .build.bazel.remote.execution.v2.BatchUpdateBlobsRequest.Request requests = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_requests_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_requests(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest)
  return target;
}

size_t BatchUpdateBlobsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.BatchUpdateBlobsRequest.Request requests = 2;
  total_size += 1UL * this->_internal_requests_size();
  for (const auto& msg : this->requests_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string instance_name = 1;
  if (this->instance_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchUpdateBlobsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchUpdateBlobsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BatchUpdateBlobsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest)
    MergeFrom(*source);
  }
}

void BatchUpdateBlobsRequest::MergeFrom(const BatchUpdateBlobsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  requests_.MergeFrom(from.requests_);
  if (from.instance_name().size() > 0) {
    _internal_set_instance_name(from._internal_instance_name());
  }
}

void BatchUpdateBlobsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchUpdateBlobsRequest::CopyFrom(const BatchUpdateBlobsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.BatchUpdateBlobsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchUpdateBlobsRequest::IsInitialized() const {
  return true;
}

void BatchUpdateBlobsRequest::InternalSwap(BatchUpdateBlobsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  requests_.InternalSwap(&other->requests_);
  instance_name_.Swap(&other->instance_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchUpdateBlobsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BatchUpdateBlobsResponse_Response::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::Digest& digest(const BatchUpdateBlobsResponse_Response* msg);
  static const ::google::rpc::Status& status(const BatchUpdateBlobsResponse_Response* msg);
};

const ::build::bazel::remote::execution::v2::Digest&
BatchUpdateBlobsResponse_Response::_Internal::digest(const BatchUpdateBlobsResponse_Response* msg) {
  return *msg->digest_;
}
const ::google::rpc::Status&
BatchUpdateBlobsResponse_Response::_Internal::status(const BatchUpdateBlobsResponse_Response* msg) {
  return *msg->status_;
}
void BatchUpdateBlobsResponse_Response::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
BatchUpdateBlobsResponse_Response::BatchUpdateBlobsResponse_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse.Response)
}
BatchUpdateBlobsResponse_Response::BatchUpdateBlobsResponse_Response(const BatchUpdateBlobsResponse_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_digest()) {
    digest_ = new ::build::bazel::remote::execution::v2::Digest(*from.digest_);
  } else {
    digest_ = nullptr;
  }
  if (from._internal_has_status()) {
    status_ = new ::google::rpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse.Response)
}

void BatchUpdateBlobsResponse_Response::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&digest_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&digest_)) + sizeof(status_));
}

BatchUpdateBlobsResponse_Response::~BatchUpdateBlobsResponse_Response() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse.Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BatchUpdateBlobsResponse_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete digest_;
  if (this != internal_default_instance()) delete status_;
}

void BatchUpdateBlobsResponse_Response::ArenaDtor(void* object) {
  BatchUpdateBlobsResponse_Response* _this = reinterpret_cast< BatchUpdateBlobsResponse_Response* >(object);
  (void)_this;
}
void BatchUpdateBlobsResponse_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BatchUpdateBlobsResponse_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BatchUpdateBlobsResponse_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse.Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && digest_ != nullptr) {
    delete digest_;
  }
  digest_ = nullptr;
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BatchUpdateBlobsResponse_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .build.bazel.remote.execution.v2.Digest digest = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_digest(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.rpc.Status status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BatchUpdateBlobsResponse_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse.Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .build.bazel.remote.execution.v2.Digest digest = 1;
  if (this->has_digest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::digest(this), target, stream);
  }

  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse.Response)
  return target;
}

size_t BatchUpdateBlobsResponse_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse.Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .build.bazel.remote.execution.v2.Digest digest = 1;
  if (this->has_digest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *digest_);
  }

  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchUpdateBlobsResponse_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchUpdateBlobsResponse_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BatchUpdateBlobsResponse_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse.Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse.Response)
    MergeFrom(*source);
  }
}

void BatchUpdateBlobsResponse_Response::MergeFrom(const BatchUpdateBlobsResponse_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_digest()) {
    _internal_mutable_digest()->::build::bazel::remote::execution::v2::Digest::MergeFrom(from._internal_digest());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::google::rpc::Status::MergeFrom(from._internal_status());
  }
}

void BatchUpdateBlobsResponse_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchUpdateBlobsResponse_Response::CopyFrom(const BatchUpdateBlobsResponse_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchUpdateBlobsResponse_Response::IsInitialized() const {
  return true;
}

void BatchUpdateBlobsResponse_Response::InternalSwap(BatchUpdateBlobsResponse_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BatchUpdateBlobsResponse_Response, status_)
      + sizeof(BatchUpdateBlobsResponse_Response::status_)
      - PROTOBUF_FIELD_OFFSET(BatchUpdateBlobsResponse_Response, digest_)>(
          reinterpret_cast<char*>(&digest_),
          reinterpret_cast<char*>(&other->digest_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchUpdateBlobsResponse_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BatchUpdateBlobsResponse::_Internal {
 public:
};

BatchUpdateBlobsResponse::BatchUpdateBlobsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  responses_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse)
}
BatchUpdateBlobsResponse::BatchUpdateBlobsResponse(const BatchUpdateBlobsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      responses_(from.responses_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse)
}

void BatchUpdateBlobsResponse::SharedCtor() {
}

BatchUpdateBlobsResponse::~BatchUpdateBlobsResponse() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BatchUpdateBlobsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BatchUpdateBlobsResponse::ArenaDtor(void* object) {
  BatchUpdateBlobsResponse* _this = reinterpret_cast< BatchUpdateBlobsResponse* >(object);
  (void)_this;
}
void BatchUpdateBlobsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BatchUpdateBlobsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BatchUpdateBlobsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  responses_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BatchUpdateBlobsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .build.bazel.remote.execution.v2.BatchUpdateBlobsResponse.Response responses = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_responses(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BatchUpdateBlobsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.BatchUpdateBlobsResponse.Response responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_responses_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_responses(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse)
  return target;
}

size_t BatchUpdateBlobsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.BatchUpdateBlobsResponse.Response responses = 1;
  total_size += 1UL * this->_internal_responses_size();
  for (const auto& msg : this->responses_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchUpdateBlobsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchUpdateBlobsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BatchUpdateBlobsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse)
    MergeFrom(*source);
  }
}

void BatchUpdateBlobsResponse::MergeFrom(const BatchUpdateBlobsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  responses_.MergeFrom(from.responses_);
}

void BatchUpdateBlobsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchUpdateBlobsResponse::CopyFrom(const BatchUpdateBlobsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.BatchUpdateBlobsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchUpdateBlobsResponse::IsInitialized() const {
  return true;
}

void BatchUpdateBlobsResponse::InternalSwap(BatchUpdateBlobsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  responses_.InternalSwap(&other->responses_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchUpdateBlobsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BatchReadBlobsRequest::_Internal {
 public:
};

BatchReadBlobsRequest::BatchReadBlobsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  digests_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.BatchReadBlobsRequest)
}
BatchReadBlobsRequest::BatchReadBlobsRequest(const BatchReadBlobsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      digests_(from.digests_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  instance_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instance_name().empty()) {
    instance_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_instance_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.BatchReadBlobsRequest)
}

void BatchReadBlobsRequest::SharedCtor() {
instance_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BatchReadBlobsRequest::~BatchReadBlobsRequest() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.BatchReadBlobsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BatchReadBlobsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  instance_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BatchReadBlobsRequest::ArenaDtor(void* object) {
  BatchReadBlobsRequest* _this = reinterpret_cast< BatchReadBlobsRequest* >(object);
  (void)_this;
}
void BatchReadBlobsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BatchReadBlobsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BatchReadBlobsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.BatchReadBlobsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  digests_.Clear();
  instance_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BatchReadBlobsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string instance_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instance_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.BatchReadBlobsRequest.instance_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .build.bazel.remote.execution.v2.Digest digests = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_digests(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BatchReadBlobsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.BatchReadBlobsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_name = 1;
  if (this->instance_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance_name().data(), static_cast<int>(this->_internal_instance_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.BatchReadBlobsRequest.instance_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance_name(), target);
  }

  // repeated .build.bazel.remote.execution.v2.Digest digests = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_digests_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_digests(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.BatchReadBlobsRequest)
  return target;
}

size_t BatchReadBlobsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.BatchReadBlobsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.Digest digests = 2;
  total_size += 1UL * this->_internal_digests_size();
  for (const auto& msg : this->digests_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string instance_name = 1;
  if (this->instance_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchReadBlobsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.BatchReadBlobsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchReadBlobsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BatchReadBlobsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.BatchReadBlobsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.BatchReadBlobsRequest)
    MergeFrom(*source);
  }
}

void BatchReadBlobsRequest::MergeFrom(const BatchReadBlobsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.BatchReadBlobsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  digests_.MergeFrom(from.digests_);
  if (from.instance_name().size() > 0) {
    _internal_set_instance_name(from._internal_instance_name());
  }
}

void BatchReadBlobsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.BatchReadBlobsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchReadBlobsRequest::CopyFrom(const BatchReadBlobsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.BatchReadBlobsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchReadBlobsRequest::IsInitialized() const {
  return true;
}

void BatchReadBlobsRequest::InternalSwap(BatchReadBlobsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  digests_.InternalSwap(&other->digests_);
  instance_name_.Swap(&other->instance_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchReadBlobsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BatchReadBlobsResponse_Response::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::Digest& digest(const BatchReadBlobsResponse_Response* msg);
  static const ::google::rpc::Status& status(const BatchReadBlobsResponse_Response* msg);
};

const ::build::bazel::remote::execution::v2::Digest&
BatchReadBlobsResponse_Response::_Internal::digest(const BatchReadBlobsResponse_Response* msg) {
  return *msg->digest_;
}
const ::google::rpc::Status&
BatchReadBlobsResponse_Response::_Internal::status(const BatchReadBlobsResponse_Response* msg) {
  return *msg->status_;
}
void BatchReadBlobsResponse_Response::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
BatchReadBlobsResponse_Response::BatchReadBlobsResponse_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.BatchReadBlobsResponse.Response)
}
BatchReadBlobsResponse_Response::BatchReadBlobsResponse_Response(const BatchReadBlobsResponse_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArena());
  }
  if (from._internal_has_digest()) {
    digest_ = new ::build::bazel::remote::execution::v2::Digest(*from.digest_);
  } else {
    digest_ = nullptr;
  }
  if (from._internal_has_status()) {
    status_ = new ::google::rpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.BatchReadBlobsResponse.Response)
}

void BatchReadBlobsResponse_Response::SharedCtor() {
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&digest_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&digest_)) + sizeof(status_));
}

BatchReadBlobsResponse_Response::~BatchReadBlobsResponse_Response() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.BatchReadBlobsResponse.Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BatchReadBlobsResponse_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete digest_;
  if (this != internal_default_instance()) delete status_;
}

void BatchReadBlobsResponse_Response::ArenaDtor(void* object) {
  BatchReadBlobsResponse_Response* _this = reinterpret_cast< BatchReadBlobsResponse_Response* >(object);
  (void)_this;
}
void BatchReadBlobsResponse_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BatchReadBlobsResponse_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BatchReadBlobsResponse_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.BatchReadBlobsResponse.Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  if (GetArena() == nullptr && digest_ != nullptr) {
    delete digest_;
  }
  digest_ = nullptr;
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BatchReadBlobsResponse_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .build.bazel.remote.execution.v2.Digest digest = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_digest(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.rpc.Status status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BatchReadBlobsResponse_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.BatchReadBlobsResponse.Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .build.bazel.remote.execution.v2.Digest digest = 1;
  if (this->has_digest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::digest(this), target, stream);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_data(), target);
  }

  // .google.rpc.Status status = 3;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.BatchReadBlobsResponse.Response)
  return target;
}

size_t BatchReadBlobsResponse_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.BatchReadBlobsResponse.Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // .build.bazel.remote.execution.v2.Digest digest = 1;
  if (this->has_digest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *digest_);
  }

  // .google.rpc.Status status = 3;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchReadBlobsResponse_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.BatchReadBlobsResponse.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchReadBlobsResponse_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BatchReadBlobsResponse_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.BatchReadBlobsResponse.Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.BatchReadBlobsResponse.Response)
    MergeFrom(*source);
  }
}

void BatchReadBlobsResponse_Response::MergeFrom(const BatchReadBlobsResponse_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.BatchReadBlobsResponse.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.has_digest()) {
    _internal_mutable_digest()->::build::bazel::remote::execution::v2::Digest::MergeFrom(from._internal_digest());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::google::rpc::Status::MergeFrom(from._internal_status());
  }
}

void BatchReadBlobsResponse_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.BatchReadBlobsResponse.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchReadBlobsResponse_Response::CopyFrom(const BatchReadBlobsResponse_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.BatchReadBlobsResponse.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchReadBlobsResponse_Response::IsInitialized() const {
  return true;
}

void BatchReadBlobsResponse_Response::InternalSwap(BatchReadBlobsResponse_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BatchReadBlobsResponse_Response, status_)
      + sizeof(BatchReadBlobsResponse_Response::status_)
      - PROTOBUF_FIELD_OFFSET(BatchReadBlobsResponse_Response, digest_)>(
          reinterpret_cast<char*>(&digest_),
          reinterpret_cast<char*>(&other->digest_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchReadBlobsResponse_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BatchReadBlobsResponse::_Internal {
 public:
};

BatchReadBlobsResponse::BatchReadBlobsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  responses_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.BatchReadBlobsResponse)
}
BatchReadBlobsResponse::BatchReadBlobsResponse(const BatchReadBlobsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      responses_(from.responses_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.BatchReadBlobsResponse)
}

void BatchReadBlobsResponse::SharedCtor() {
}

BatchReadBlobsResponse::~BatchReadBlobsResponse() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.BatchReadBlobsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BatchReadBlobsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BatchReadBlobsResponse::ArenaDtor(void* object) {
  BatchReadBlobsResponse* _this = reinterpret_cast< BatchReadBlobsResponse* >(object);
  (void)_this;
}
void BatchReadBlobsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BatchReadBlobsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BatchReadBlobsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.BatchReadBlobsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  responses_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BatchReadBlobsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .build.bazel.remote.execution.v2.BatchReadBlobsResponse.Response responses = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_responses(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BatchReadBlobsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.BatchReadBlobsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.BatchReadBlobsResponse.Response responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_responses_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_responses(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.BatchReadBlobsResponse)
  return target;
}

size_t BatchReadBlobsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.BatchReadBlobsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.BatchReadBlobsResponse.Response responses = 1;
  total_size += 1UL * this->_internal_responses_size();
  for (const auto& msg : this->responses_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchReadBlobsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.BatchReadBlobsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchReadBlobsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BatchReadBlobsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.BatchReadBlobsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.BatchReadBlobsResponse)
    MergeFrom(*source);
  }
}

void BatchReadBlobsResponse::MergeFrom(const BatchReadBlobsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.BatchReadBlobsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  responses_.MergeFrom(from.responses_);
}

void BatchReadBlobsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.BatchReadBlobsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchReadBlobsResponse::CopyFrom(const BatchReadBlobsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.BatchReadBlobsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchReadBlobsResponse::IsInitialized() const {
  return true;
}

void BatchReadBlobsResponse::InternalSwap(BatchReadBlobsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  responses_.InternalSwap(&other->responses_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchReadBlobsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetTreeRequest::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::Digest& root_digest(const GetTreeRequest* msg);
};

const ::build::bazel::remote::execution::v2::Digest&
GetTreeRequest::_Internal::root_digest(const GetTreeRequest* msg) {
  return *msg->root_digest_;
}
GetTreeRequest::GetTreeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.GetTreeRequest)
}
GetTreeRequest::GetTreeRequest(const GetTreeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  instance_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instance_name().empty()) {
    instance_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_instance_name(), 
      GetArena());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArena());
  }
  if (from._internal_has_root_digest()) {
    root_digest_ = new ::build::bazel::remote::execution::v2::Digest(*from.root_digest_);
  } else {
    root_digest_ = nullptr;
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.GetTreeRequest)
}

void GetTreeRequest::SharedCtor() {
instance_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&root_digest_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&root_digest_)) + sizeof(page_size_));
}

GetTreeRequest::~GetTreeRequest() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.GetTreeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTreeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  instance_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete root_digest_;
}

void GetTreeRequest::ArenaDtor(void* object) {
  GetTreeRequest* _this = reinterpret_cast< GetTreeRequest* >(object);
  (void)_this;
}
void GetTreeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTreeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetTreeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.GetTreeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_name_.ClearToEmpty();
  page_token_.ClearToEmpty();
  if (GetArena() == nullptr && root_digest_ != nullptr) {
    delete root_digest_;
  }
  root_digest_ = nullptr;
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTreeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string instance_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instance_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.GetTreeRequest.instance_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.Digest root_digest = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_root_digest(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 page_size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string page_token = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.GetTreeRequest.page_token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTreeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.GetTreeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_name = 1;
  if (this->instance_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance_name().data(), static_cast<int>(this->_internal_instance_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.GetTreeRequest.instance_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance_name(), target);
  }

  // .build.bazel.remote.execution.v2.Digest root_digest = 2;
  if (this->has_root_digest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::root_digest(this), target, stream);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_page_size(), target);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.GetTreeRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.GetTreeRequest)
  return target;
}

size_t GetTreeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.GetTreeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string instance_name = 1;
  if (this->instance_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance_name());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // .build.bazel.remote.execution.v2.Digest root_digest = 2;
  if (this->has_root_digest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *root_digest_);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTreeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.GetTreeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTreeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTreeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.GetTreeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.GetTreeRequest)
    MergeFrom(*source);
  }
}

void GetTreeRequest::MergeFrom(const GetTreeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.GetTreeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instance_name().size() > 0) {
    _internal_set_instance_name(from._internal_instance_name());
  }
  if (from.page_token().size() > 0) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from.has_root_digest()) {
    _internal_mutable_root_digest()->::build::bazel::remote::execution::v2::Digest::MergeFrom(from._internal_root_digest());
  }
  if (from.page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
}

void GetTreeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.GetTreeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTreeRequest::CopyFrom(const GetTreeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.GetTreeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTreeRequest::IsInitialized() const {
  return true;
}

void GetTreeRequest::InternalSwap(GetTreeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  instance_name_.Swap(&other->instance_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  page_token_.Swap(&other->page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetTreeRequest, page_size_)
      + sizeof(GetTreeRequest::page_size_)
      - PROTOBUF_FIELD_OFFSET(GetTreeRequest, root_digest_)>(
          reinterpret_cast<char*>(&root_digest_),
          reinterpret_cast<char*>(&other->root_digest_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTreeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetTreeResponse::_Internal {
 public:
};

GetTreeResponse::GetTreeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  directories_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.GetTreeResponse)
}
GetTreeResponse::GetTreeResponse(const GetTreeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      directories_(from.directories_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.GetTreeResponse)
}

void GetTreeResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetTreeResponse::~GetTreeResponse() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.GetTreeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTreeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetTreeResponse::ArenaDtor(void* object) {
  GetTreeResponse* _this = reinterpret_cast< GetTreeResponse* >(object);
  (void)_this;
}
void GetTreeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTreeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetTreeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.GetTreeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  directories_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTreeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .build.bazel.remote.execution.v2.Directory directories = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_directories(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.GetTreeResponse.next_page_token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTreeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.GetTreeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.Directory directories = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_directories_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_directories(i), target, stream);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.GetTreeResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.GetTreeResponse)
  return target;
}

size_t GetTreeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.GetTreeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.Directory directories = 1;
  total_size += 1UL * this->_internal_directories_size();
  for (const auto& msg : this->directories_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTreeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.GetTreeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTreeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTreeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.GetTreeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.GetTreeResponse)
    MergeFrom(*source);
  }
}

void GetTreeResponse::MergeFrom(const GetTreeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.GetTreeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  directories_.MergeFrom(from.directories_);
  if (from.next_page_token().size() > 0) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
}

void GetTreeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.GetTreeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTreeResponse::CopyFrom(const GetTreeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.GetTreeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTreeResponse::IsInitialized() const {
  return true;
}

void GetTreeResponse::InternalSwap(GetTreeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  directories_.InternalSwap(&other->directories_);
  next_page_token_.Swap(&other->next_page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTreeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetCapabilitiesRequest::_Internal {
 public:
};

GetCapabilitiesRequest::GetCapabilitiesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.GetCapabilitiesRequest)
}
GetCapabilitiesRequest::GetCapabilitiesRequest(const GetCapabilitiesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  instance_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instance_name().empty()) {
    instance_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_instance_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.GetCapabilitiesRequest)
}

void GetCapabilitiesRequest::SharedCtor() {
instance_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetCapabilitiesRequest::~GetCapabilitiesRequest() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.GetCapabilitiesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCapabilitiesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  instance_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetCapabilitiesRequest::ArenaDtor(void* object) {
  GetCapabilitiesRequest* _this = reinterpret_cast< GetCapabilitiesRequest* >(object);
  (void)_this;
}
void GetCapabilitiesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCapabilitiesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetCapabilitiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.GetCapabilitiesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCapabilitiesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string instance_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instance_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.GetCapabilitiesRequest.instance_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCapabilitiesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.GetCapabilitiesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_name = 1;
  if (this->instance_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance_name().data(), static_cast<int>(this->_internal_instance_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.GetCapabilitiesRequest.instance_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.GetCapabilitiesRequest)
  return target;
}

size_t GetCapabilitiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.GetCapabilitiesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string instance_name = 1;
  if (this->instance_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCapabilitiesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.GetCapabilitiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCapabilitiesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCapabilitiesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.GetCapabilitiesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.GetCapabilitiesRequest)
    MergeFrom(*source);
  }
}

void GetCapabilitiesRequest::MergeFrom(const GetCapabilitiesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.GetCapabilitiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instance_name().size() > 0) {
    _internal_set_instance_name(from._internal_instance_name());
  }
}

void GetCapabilitiesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.GetCapabilitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCapabilitiesRequest::CopyFrom(const GetCapabilitiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.GetCapabilitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCapabilitiesRequest::IsInitialized() const {
  return true;
}

void GetCapabilitiesRequest::InternalSwap(GetCapabilitiesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  instance_name_.Swap(&other->instance_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCapabilitiesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ServerCapabilities::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::CacheCapabilities& cache_capabilities(const ServerCapabilities* msg);
  static const ::build::bazel::remote::execution::v2::ExecutionCapabilities& execution_capabilities(const ServerCapabilities* msg);
  static const ::build::bazel::semver::SemVer& deprecated_api_version(const ServerCapabilities* msg);
  static const ::build::bazel::semver::SemVer& low_api_version(const ServerCapabilities* msg);
  static const ::build::bazel::semver::SemVer& high_api_version(const ServerCapabilities* msg);
};

const ::build::bazel::remote::execution::v2::CacheCapabilities&
ServerCapabilities::_Internal::cache_capabilities(const ServerCapabilities* msg) {
  return *msg->cache_capabilities_;
}
const ::build::bazel::remote::execution::v2::ExecutionCapabilities&
ServerCapabilities::_Internal::execution_capabilities(const ServerCapabilities* msg) {
  return *msg->execution_capabilities_;
}
const ::build::bazel::semver::SemVer&
ServerCapabilities::_Internal::deprecated_api_version(const ServerCapabilities* msg) {
  return *msg->deprecated_api_version_;
}
const ::build::bazel::semver::SemVer&
ServerCapabilities::_Internal::low_api_version(const ServerCapabilities* msg) {
  return *msg->low_api_version_;
}
const ::build::bazel::semver::SemVer&
ServerCapabilities::_Internal::high_api_version(const ServerCapabilities* msg) {
  return *msg->high_api_version_;
}
void ServerCapabilities::clear_deprecated_api_version() {
  if (GetArena() == nullptr && deprecated_api_version_ != nullptr) {
    delete deprecated_api_version_;
  }
  deprecated_api_version_ = nullptr;
}
void ServerCapabilities::clear_low_api_version() {
  if (GetArena() == nullptr && low_api_version_ != nullptr) {
    delete low_api_version_;
  }
  low_api_version_ = nullptr;
}
void ServerCapabilities::clear_high_api_version() {
  if (GetArena() == nullptr && high_api_version_ != nullptr) {
    delete high_api_version_;
  }
  high_api_version_ = nullptr;
}
ServerCapabilities::ServerCapabilities(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.ServerCapabilities)
}
ServerCapabilities::ServerCapabilities(const ServerCapabilities& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_cache_capabilities()) {
    cache_capabilities_ = new ::build::bazel::remote::execution::v2::CacheCapabilities(*from.cache_capabilities_);
  } else {
    cache_capabilities_ = nullptr;
  }
  if (from._internal_has_execution_capabilities()) {
    execution_capabilities_ = new ::build::bazel::remote::execution::v2::ExecutionCapabilities(*from.execution_capabilities_);
  } else {
    execution_capabilities_ = nullptr;
  }
  if (from._internal_has_deprecated_api_version()) {
    deprecated_api_version_ = new ::build::bazel::semver::SemVer(*from.deprecated_api_version_);
  } else {
    deprecated_api_version_ = nullptr;
  }
  if (from._internal_has_low_api_version()) {
    low_api_version_ = new ::build::bazel::semver::SemVer(*from.low_api_version_);
  } else {
    low_api_version_ = nullptr;
  }
  if (from._internal_has_high_api_version()) {
    high_api_version_ = new ::build::bazel::semver::SemVer(*from.high_api_version_);
  } else {
    high_api_version_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.ServerCapabilities)
}

void ServerCapabilities::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&cache_capabilities_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&high_api_version_) -
    reinterpret_cast<char*>(&cache_capabilities_)) + sizeof(high_api_version_));
}

ServerCapabilities::~ServerCapabilities() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.ServerCapabilities)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerCapabilities::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete cache_capabilities_;
  if (this != internal_default_instance()) delete execution_capabilities_;
  if (this != internal_default_instance()) delete deprecated_api_version_;
  if (this != internal_default_instance()) delete low_api_version_;
  if (this != internal_default_instance()) delete high_api_version_;
}

void ServerCapabilities::ArenaDtor(void* object) {
  ServerCapabilities* _this = reinterpret_cast< ServerCapabilities* >(object);
  (void)_this;
}
void ServerCapabilities::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerCapabilities::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ServerCapabilities::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.ServerCapabilities)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && cache_capabilities_ != nullptr) {
    delete cache_capabilities_;
  }
  cache_capabilities_ = nullptr;
  if (GetArena() == nullptr && execution_capabilities_ != nullptr) {
    delete execution_capabilities_;
  }
  execution_capabilities_ = nullptr;
  if (GetArena() == nullptr && deprecated_api_version_ != nullptr) {
    delete deprecated_api_version_;
  }
  deprecated_api_version_ = nullptr;
  if (GetArena() == nullptr && low_api_version_ != nullptr) {
    delete low_api_version_;
  }
  low_api_version_ = nullptr;
  if (GetArena() == nullptr && high_api_version_ != nullptr) {
    delete high_api_version_;
  }
  high_api_version_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerCapabilities::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .build.bazel.remote.execution.v2.CacheCapabilities cache_capabilities = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_cache_capabilities(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.ExecutionCapabilities execution_capabilities = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_execution_capabilities(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.semver.SemVer deprecated_api_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_deprecated_api_version(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.semver.SemVer low_api_version = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_low_api_version(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.semver.SemVer high_api_version = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_high_api_version(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerCapabilities::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.ServerCapabilities)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .build.bazel.remote.execution.v2.CacheCapabilities cache_capabilities = 1;
  if (this->has_cache_capabilities()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::cache_capabilities(this), target, stream);
  }

  // .build.bazel.remote.execution.v2.ExecutionCapabilities execution_capabilities = 2;
  if (this->has_execution_capabilities()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::execution_capabilities(this), target, stream);
  }

  // .build.bazel.semver.SemVer deprecated_api_version = 3;
  if (this->has_deprecated_api_version()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::deprecated_api_version(this), target, stream);
  }

  // .build.bazel.semver.SemVer low_api_version = 4;
  if (this->has_low_api_version()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::low_api_version(this), target, stream);
  }

  // .build.bazel.semver.SemVer high_api_version = 5;
  if (this->has_high_api_version()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::high_api_version(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.ServerCapabilities)
  return target;
}

size_t ServerCapabilities::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.ServerCapabilities)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .build.bazel.remote.execution.v2.CacheCapabilities cache_capabilities = 1;
  if (this->has_cache_capabilities()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cache_capabilities_);
  }

  // .build.bazel.remote.execution.v2.ExecutionCapabilities execution_capabilities = 2;
  if (this->has_execution_capabilities()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *execution_capabilities_);
  }

  // .build.bazel.semver.SemVer deprecated_api_version = 3;
  if (this->has_deprecated_api_version()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *deprecated_api_version_);
  }

  // .build.bazel.semver.SemVer low_api_version = 4;
  if (this->has_low_api_version()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *low_api_version_);
  }

  // .build.bazel.semver.SemVer high_api_version = 5;
  if (this->has_high_api_version()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *high_api_version_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerCapabilities::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.ServerCapabilities)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerCapabilities* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerCapabilities>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.ServerCapabilities)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.ServerCapabilities)
    MergeFrom(*source);
  }
}

void ServerCapabilities::MergeFrom(const ServerCapabilities& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.ServerCapabilities)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cache_capabilities()) {
    _internal_mutable_cache_capabilities()->::build::bazel::remote::execution::v2::CacheCapabilities::MergeFrom(from._internal_cache_capabilities());
  }
  if (from.has_execution_capabilities()) {
    _internal_mutable_execution_capabilities()->::build::bazel::remote::execution::v2::ExecutionCapabilities::MergeFrom(from._internal_execution_capabilities());
  }
  if (from.has_deprecated_api_version()) {
    _internal_mutable_deprecated_api_version()->::build::bazel::semver::SemVer::MergeFrom(from._internal_deprecated_api_version());
  }
  if (from.has_low_api_version()) {
    _internal_mutable_low_api_version()->::build::bazel::semver::SemVer::MergeFrom(from._internal_low_api_version());
  }
  if (from.has_high_api_version()) {
    _internal_mutable_high_api_version()->::build::bazel::semver::SemVer::MergeFrom(from._internal_high_api_version());
  }
}

void ServerCapabilities::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.ServerCapabilities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerCapabilities::CopyFrom(const ServerCapabilities& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.ServerCapabilities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerCapabilities::IsInitialized() const {
  return true;
}

void ServerCapabilities::InternalSwap(ServerCapabilities* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServerCapabilities, high_api_version_)
      + sizeof(ServerCapabilities::high_api_version_)
      - PROTOBUF_FIELD_OFFSET(ServerCapabilities, cache_capabilities_)>(
          reinterpret_cast<char*>(&cache_capabilities_),
          reinterpret_cast<char*>(&other->cache_capabilities_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerCapabilities::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DigestFunction::_Internal {
 public:
};

DigestFunction::DigestFunction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.DigestFunction)
}
DigestFunction::DigestFunction(const DigestFunction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.DigestFunction)
}

void DigestFunction::SharedCtor() {
}

DigestFunction::~DigestFunction() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.DigestFunction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DigestFunction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DigestFunction::ArenaDtor(void* object) {
  DigestFunction* _this = reinterpret_cast< DigestFunction* >(object);
  (void)_this;
}
void DigestFunction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DigestFunction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DigestFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.DigestFunction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DigestFunction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DigestFunction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.DigestFunction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.DigestFunction)
  return target;
}

size_t DigestFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.DigestFunction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigestFunction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.DigestFunction)
  GOOGLE_DCHECK_NE(&from, this);
  const DigestFunction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DigestFunction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.DigestFunction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.DigestFunction)
    MergeFrom(*source);
  }
}

void DigestFunction::MergeFrom(const DigestFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.DigestFunction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DigestFunction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.DigestFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigestFunction::CopyFrom(const DigestFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.DigestFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigestFunction::IsInitialized() const {
  return true;
}

void DigestFunction::InternalSwap(DigestFunction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DigestFunction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ActionCacheUpdateCapabilities::_Internal {
 public:
};

ActionCacheUpdateCapabilities::ActionCacheUpdateCapabilities(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.ActionCacheUpdateCapabilities)
}
ActionCacheUpdateCapabilities::ActionCacheUpdateCapabilities(const ActionCacheUpdateCapabilities& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  update_enabled_ = from.update_enabled_;
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.ActionCacheUpdateCapabilities)
}

void ActionCacheUpdateCapabilities::SharedCtor() {
update_enabled_ = false;
}

ActionCacheUpdateCapabilities::~ActionCacheUpdateCapabilities() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.ActionCacheUpdateCapabilities)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ActionCacheUpdateCapabilities::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ActionCacheUpdateCapabilities::ArenaDtor(void* object) {
  ActionCacheUpdateCapabilities* _this = reinterpret_cast< ActionCacheUpdateCapabilities* >(object);
  (void)_this;
}
void ActionCacheUpdateCapabilities::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ActionCacheUpdateCapabilities::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ActionCacheUpdateCapabilities::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.ActionCacheUpdateCapabilities)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  update_enabled_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActionCacheUpdateCapabilities::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool update_enabled = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          update_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ActionCacheUpdateCapabilities::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.ActionCacheUpdateCapabilities)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool update_enabled = 1;
  if (this->update_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_update_enabled(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.ActionCacheUpdateCapabilities)
  return target;
}

size_t ActionCacheUpdateCapabilities::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.ActionCacheUpdateCapabilities)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool update_enabled = 1;
  if (this->update_enabled() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionCacheUpdateCapabilities::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.ActionCacheUpdateCapabilities)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionCacheUpdateCapabilities* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ActionCacheUpdateCapabilities>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.ActionCacheUpdateCapabilities)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.ActionCacheUpdateCapabilities)
    MergeFrom(*source);
  }
}

void ActionCacheUpdateCapabilities::MergeFrom(const ActionCacheUpdateCapabilities& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.ActionCacheUpdateCapabilities)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.update_enabled() != 0) {
    _internal_set_update_enabled(from._internal_update_enabled());
  }
}

void ActionCacheUpdateCapabilities::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.ActionCacheUpdateCapabilities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionCacheUpdateCapabilities::CopyFrom(const ActionCacheUpdateCapabilities& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.ActionCacheUpdateCapabilities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionCacheUpdateCapabilities::IsInitialized() const {
  return true;
}

void ActionCacheUpdateCapabilities::InternalSwap(ActionCacheUpdateCapabilities* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(update_enabled_, other->update_enabled_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ActionCacheUpdateCapabilities::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PriorityCapabilities_PriorityRange::_Internal {
 public:
};

PriorityCapabilities_PriorityRange::PriorityCapabilities_PriorityRange(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.PriorityCapabilities.PriorityRange)
}
PriorityCapabilities_PriorityRange::PriorityCapabilities_PriorityRange(const PriorityCapabilities_PriorityRange& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&min_priority_, &from.min_priority_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_priority_) -
    reinterpret_cast<char*>(&min_priority_)) + sizeof(max_priority_));
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.PriorityCapabilities.PriorityRange)
}

void PriorityCapabilities_PriorityRange::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&min_priority_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&max_priority_) -
    reinterpret_cast<char*>(&min_priority_)) + sizeof(max_priority_));
}

PriorityCapabilities_PriorityRange::~PriorityCapabilities_PriorityRange() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.PriorityCapabilities.PriorityRange)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PriorityCapabilities_PriorityRange::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PriorityCapabilities_PriorityRange::ArenaDtor(void* object) {
  PriorityCapabilities_PriorityRange* _this = reinterpret_cast< PriorityCapabilities_PriorityRange* >(object);
  (void)_this;
}
void PriorityCapabilities_PriorityRange::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PriorityCapabilities_PriorityRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PriorityCapabilities_PriorityRange::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.PriorityCapabilities.PriorityRange)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&min_priority_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_priority_) -
      reinterpret_cast<char*>(&min_priority_)) + sizeof(max_priority_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PriorityCapabilities_PriorityRange::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 min_priority = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          min_priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 max_priority = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          max_priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PriorityCapabilities_PriorityRange::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.PriorityCapabilities.PriorityRange)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 min_priority = 1;
  if (this->min_priority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_min_priority(), target);
  }

  // int32 max_priority = 2;
  if (this->max_priority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_max_priority(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.PriorityCapabilities.PriorityRange)
  return target;
}

size_t PriorityCapabilities_PriorityRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.PriorityCapabilities.PriorityRange)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 min_priority = 1;
  if (this->min_priority() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_min_priority());
  }

  // int32 max_priority = 2;
  if (this->max_priority() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_max_priority());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PriorityCapabilities_PriorityRange::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.PriorityCapabilities.PriorityRange)
  GOOGLE_DCHECK_NE(&from, this);
  const PriorityCapabilities_PriorityRange* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PriorityCapabilities_PriorityRange>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.PriorityCapabilities.PriorityRange)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.PriorityCapabilities.PriorityRange)
    MergeFrom(*source);
  }
}

void PriorityCapabilities_PriorityRange::MergeFrom(const PriorityCapabilities_PriorityRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.PriorityCapabilities.PriorityRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.min_priority() != 0) {
    _internal_set_min_priority(from._internal_min_priority());
  }
  if (from.max_priority() != 0) {
    _internal_set_max_priority(from._internal_max_priority());
  }
}

void PriorityCapabilities_PriorityRange::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.PriorityCapabilities.PriorityRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PriorityCapabilities_PriorityRange::CopyFrom(const PriorityCapabilities_PriorityRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.PriorityCapabilities.PriorityRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PriorityCapabilities_PriorityRange::IsInitialized() const {
  return true;
}

void PriorityCapabilities_PriorityRange::InternalSwap(PriorityCapabilities_PriorityRange* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PriorityCapabilities_PriorityRange, max_priority_)
      + sizeof(PriorityCapabilities_PriorityRange::max_priority_)
      - PROTOBUF_FIELD_OFFSET(PriorityCapabilities_PriorityRange, min_priority_)>(
          reinterpret_cast<char*>(&min_priority_),
          reinterpret_cast<char*>(&other->min_priority_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PriorityCapabilities_PriorityRange::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PriorityCapabilities::_Internal {
 public:
};

PriorityCapabilities::PriorityCapabilities(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  priorities_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.PriorityCapabilities)
}
PriorityCapabilities::PriorityCapabilities(const PriorityCapabilities& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      priorities_(from.priorities_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.PriorityCapabilities)
}

void PriorityCapabilities::SharedCtor() {
}

PriorityCapabilities::~PriorityCapabilities() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.PriorityCapabilities)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PriorityCapabilities::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PriorityCapabilities::ArenaDtor(void* object) {
  PriorityCapabilities* _this = reinterpret_cast< PriorityCapabilities* >(object);
  (void)_this;
}
void PriorityCapabilities::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PriorityCapabilities::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PriorityCapabilities::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.PriorityCapabilities)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  priorities_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PriorityCapabilities::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .build.bazel.remote.execution.v2.PriorityCapabilities.PriorityRange priorities = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_priorities(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PriorityCapabilities::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.PriorityCapabilities)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.PriorityCapabilities.PriorityRange priorities = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_priorities_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_priorities(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.PriorityCapabilities)
  return target;
}

size_t PriorityCapabilities::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.PriorityCapabilities)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.PriorityCapabilities.PriorityRange priorities = 1;
  total_size += 1UL * this->_internal_priorities_size();
  for (const auto& msg : this->priorities_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PriorityCapabilities::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.PriorityCapabilities)
  GOOGLE_DCHECK_NE(&from, this);
  const PriorityCapabilities* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PriorityCapabilities>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.PriorityCapabilities)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.PriorityCapabilities)
    MergeFrom(*source);
  }
}

void PriorityCapabilities::MergeFrom(const PriorityCapabilities& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.PriorityCapabilities)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  priorities_.MergeFrom(from.priorities_);
}

void PriorityCapabilities::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.PriorityCapabilities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PriorityCapabilities::CopyFrom(const PriorityCapabilities& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.PriorityCapabilities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PriorityCapabilities::IsInitialized() const {
  return true;
}

void PriorityCapabilities::InternalSwap(PriorityCapabilities* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  priorities_.InternalSwap(&other->priorities_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PriorityCapabilities::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SymlinkAbsolutePathStrategy::_Internal {
 public:
};

SymlinkAbsolutePathStrategy::SymlinkAbsolutePathStrategy(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.SymlinkAbsolutePathStrategy)
}
SymlinkAbsolutePathStrategy::SymlinkAbsolutePathStrategy(const SymlinkAbsolutePathStrategy& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.SymlinkAbsolutePathStrategy)
}

void SymlinkAbsolutePathStrategy::SharedCtor() {
}

SymlinkAbsolutePathStrategy::~SymlinkAbsolutePathStrategy() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.SymlinkAbsolutePathStrategy)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SymlinkAbsolutePathStrategy::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SymlinkAbsolutePathStrategy::ArenaDtor(void* object) {
  SymlinkAbsolutePathStrategy* _this = reinterpret_cast< SymlinkAbsolutePathStrategy* >(object);
  (void)_this;
}
void SymlinkAbsolutePathStrategy::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SymlinkAbsolutePathStrategy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SymlinkAbsolutePathStrategy::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.SymlinkAbsolutePathStrategy)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SymlinkAbsolutePathStrategy::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SymlinkAbsolutePathStrategy::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.SymlinkAbsolutePathStrategy)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.SymlinkAbsolutePathStrategy)
  return target;
}

size_t SymlinkAbsolutePathStrategy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.SymlinkAbsolutePathStrategy)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SymlinkAbsolutePathStrategy::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.SymlinkAbsolutePathStrategy)
  GOOGLE_DCHECK_NE(&from, this);
  const SymlinkAbsolutePathStrategy* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SymlinkAbsolutePathStrategy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.SymlinkAbsolutePathStrategy)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.SymlinkAbsolutePathStrategy)
    MergeFrom(*source);
  }
}

void SymlinkAbsolutePathStrategy::MergeFrom(const SymlinkAbsolutePathStrategy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.SymlinkAbsolutePathStrategy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SymlinkAbsolutePathStrategy::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.SymlinkAbsolutePathStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SymlinkAbsolutePathStrategy::CopyFrom(const SymlinkAbsolutePathStrategy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.SymlinkAbsolutePathStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SymlinkAbsolutePathStrategy::IsInitialized() const {
  return true;
}

void SymlinkAbsolutePathStrategy::InternalSwap(SymlinkAbsolutePathStrategy* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SymlinkAbsolutePathStrategy::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CacheCapabilities::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::ActionCacheUpdateCapabilities& action_cache_update_capabilities(const CacheCapabilities* msg);
  static const ::build::bazel::remote::execution::v2::PriorityCapabilities& cache_priority_capabilities(const CacheCapabilities* msg);
};

const ::build::bazel::remote::execution::v2::ActionCacheUpdateCapabilities&
CacheCapabilities::_Internal::action_cache_update_capabilities(const CacheCapabilities* msg) {
  return *msg->action_cache_update_capabilities_;
}
const ::build::bazel::remote::execution::v2::PriorityCapabilities&
CacheCapabilities::_Internal::cache_priority_capabilities(const CacheCapabilities* msg) {
  return *msg->cache_priority_capabilities_;
}
CacheCapabilities::CacheCapabilities(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  digest_function_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.CacheCapabilities)
}
CacheCapabilities::CacheCapabilities(const CacheCapabilities& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      digest_function_(from.digest_function_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_action_cache_update_capabilities()) {
    action_cache_update_capabilities_ = new ::build::bazel::remote::execution::v2::ActionCacheUpdateCapabilities(*from.action_cache_update_capabilities_);
  } else {
    action_cache_update_capabilities_ = nullptr;
  }
  if (from._internal_has_cache_priority_capabilities()) {
    cache_priority_capabilities_ = new ::build::bazel::remote::execution::v2::PriorityCapabilities(*from.cache_priority_capabilities_);
  } else {
    cache_priority_capabilities_ = nullptr;
  }
  ::memcpy(&max_batch_total_size_bytes_, &from.max_batch_total_size_bytes_,
    static_cast<size_t>(reinterpret_cast<char*>(&symlink_absolute_path_strategy_) -
    reinterpret_cast<char*>(&max_batch_total_size_bytes_)) + sizeof(symlink_absolute_path_strategy_));
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.CacheCapabilities)
}

void CacheCapabilities::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&action_cache_update_capabilities_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&symlink_absolute_path_strategy_) -
    reinterpret_cast<char*>(&action_cache_update_capabilities_)) + sizeof(symlink_absolute_path_strategy_));
}

CacheCapabilities::~CacheCapabilities() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.CacheCapabilities)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CacheCapabilities::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete action_cache_update_capabilities_;
  if (this != internal_default_instance()) delete cache_priority_capabilities_;
}

void CacheCapabilities::ArenaDtor(void* object) {
  CacheCapabilities* _this = reinterpret_cast< CacheCapabilities* >(object);
  (void)_this;
}
void CacheCapabilities::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CacheCapabilities::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CacheCapabilities::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.CacheCapabilities)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  digest_function_.Clear();
  if (GetArena() == nullptr && action_cache_update_capabilities_ != nullptr) {
    delete action_cache_update_capabilities_;
  }
  action_cache_update_capabilities_ = nullptr;
  if (GetArena() == nullptr && cache_priority_capabilities_ != nullptr) {
    delete cache_priority_capabilities_;
  }
  cache_priority_capabilities_ = nullptr;
  ::memset(&max_batch_total_size_bytes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&symlink_absolute_path_strategy_) -
      reinterpret_cast<char*>(&max_batch_total_size_bytes_)) + sizeof(symlink_absolute_path_strategy_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CacheCapabilities::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .build.bazel.remote.execution.v2.DigestFunction.Value digest_function = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_digest_function(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_digest_function(static_cast<::build::bazel::remote::execution::v2::DigestFunction_Value>(val));
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.ActionCacheUpdateCapabilities action_cache_update_capabilities = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_action_cache_update_capabilities(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.PriorityCapabilities cache_priority_capabilities = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_cache_priority_capabilities(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 max_batch_total_size_bytes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          max_batch_total_size_bytes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.SymlinkAbsolutePathStrategy.Value symlink_absolute_path_strategy = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_symlink_absolute_path_strategy(static_cast<::build::bazel::remote::execution::v2::SymlinkAbsolutePathStrategy_Value>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CacheCapabilities::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.CacheCapabilities)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.DigestFunction.Value digest_function = 1;
  {
    int byte_size = _digest_function_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, digest_function_, byte_size, target);
    }
  }

  // .build.bazel.remote.execution.v2.ActionCacheUpdateCapabilities action_cache_update_capabilities = 2;
  if (this->has_action_cache_update_capabilities()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::action_cache_update_capabilities(this), target, stream);
  }

  // .build.bazel.remote.execution.v2.PriorityCapabilities cache_priority_capabilities = 3;
  if (this->has_cache_priority_capabilities()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::cache_priority_capabilities(this), target, stream);
  }

  // int64 max_batch_total_size_bytes = 4;
  if (this->max_batch_total_size_bytes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_max_batch_total_size_bytes(), target);
  }

  // .build.bazel.remote.execution.v2.SymlinkAbsolutePathStrategy.Value symlink_absolute_path_strategy = 5;
  if (this->symlink_absolute_path_strategy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_symlink_absolute_path_strategy(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.CacheCapabilities)
  return target;
}

size_t CacheCapabilities::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.CacheCapabilities)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .build.bazel.remote.execution.v2.DigestFunction.Value digest_function = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_digest_function_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_digest_function(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _digest_function_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .build.bazel.remote.execution.v2.ActionCacheUpdateCapabilities action_cache_update_capabilities = 2;
  if (this->has_action_cache_update_capabilities()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *action_cache_update_capabilities_);
  }

  // .build.bazel.remote.execution.v2.PriorityCapabilities cache_priority_capabilities = 3;
  if (this->has_cache_priority_capabilities()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cache_priority_capabilities_);
  }

  // int64 max_batch_total_size_bytes = 4;
  if (this->max_batch_total_size_bytes() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_max_batch_total_size_bytes());
  }

  // .build.bazel.remote.execution.v2.SymlinkAbsolutePathStrategy.Value symlink_absolute_path_strategy = 5;
  if (this->symlink_absolute_path_strategy() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_symlink_absolute_path_strategy());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CacheCapabilities::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.CacheCapabilities)
  GOOGLE_DCHECK_NE(&from, this);
  const CacheCapabilities* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CacheCapabilities>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.CacheCapabilities)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.CacheCapabilities)
    MergeFrom(*source);
  }
}

void CacheCapabilities::MergeFrom(const CacheCapabilities& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.CacheCapabilities)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  digest_function_.MergeFrom(from.digest_function_);
  if (from.has_action_cache_update_capabilities()) {
    _internal_mutable_action_cache_update_capabilities()->::build::bazel::remote::execution::v2::ActionCacheUpdateCapabilities::MergeFrom(from._internal_action_cache_update_capabilities());
  }
  if (from.has_cache_priority_capabilities()) {
    _internal_mutable_cache_priority_capabilities()->::build::bazel::remote::execution::v2::PriorityCapabilities::MergeFrom(from._internal_cache_priority_capabilities());
  }
  if (from.max_batch_total_size_bytes() != 0) {
    _internal_set_max_batch_total_size_bytes(from._internal_max_batch_total_size_bytes());
  }
  if (from.symlink_absolute_path_strategy() != 0) {
    _internal_set_symlink_absolute_path_strategy(from._internal_symlink_absolute_path_strategy());
  }
}

void CacheCapabilities::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.CacheCapabilities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CacheCapabilities::CopyFrom(const CacheCapabilities& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.CacheCapabilities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CacheCapabilities::IsInitialized() const {
  return true;
}

void CacheCapabilities::InternalSwap(CacheCapabilities* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  digest_function_.InternalSwap(&other->digest_function_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CacheCapabilities, symlink_absolute_path_strategy_)
      + sizeof(CacheCapabilities::symlink_absolute_path_strategy_)
      - PROTOBUF_FIELD_OFFSET(CacheCapabilities, action_cache_update_capabilities_)>(
          reinterpret_cast<char*>(&action_cache_update_capabilities_),
          reinterpret_cast<char*>(&other->action_cache_update_capabilities_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CacheCapabilities::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ExecutionCapabilities::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::PriorityCapabilities& execution_priority_capabilities(const ExecutionCapabilities* msg);
};

const ::build::bazel::remote::execution::v2::PriorityCapabilities&
ExecutionCapabilities::_Internal::execution_priority_capabilities(const ExecutionCapabilities* msg) {
  return *msg->execution_priority_capabilities_;
}
ExecutionCapabilities::ExecutionCapabilities(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  supported_node_properties_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.ExecutionCapabilities)
}
ExecutionCapabilities::ExecutionCapabilities(const ExecutionCapabilities& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      supported_node_properties_(from.supported_node_properties_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_execution_priority_capabilities()) {
    execution_priority_capabilities_ = new ::build::bazel::remote::execution::v2::PriorityCapabilities(*from.execution_priority_capabilities_);
  } else {
    execution_priority_capabilities_ = nullptr;
  }
  ::memcpy(&digest_function_, &from.digest_function_,
    static_cast<size_t>(reinterpret_cast<char*>(&exec_enabled_) -
    reinterpret_cast<char*>(&digest_function_)) + sizeof(exec_enabled_));
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.ExecutionCapabilities)
}

void ExecutionCapabilities::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&execution_priority_capabilities_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&exec_enabled_) -
    reinterpret_cast<char*>(&execution_priority_capabilities_)) + sizeof(exec_enabled_));
}

ExecutionCapabilities::~ExecutionCapabilities() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.ExecutionCapabilities)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExecutionCapabilities::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete execution_priority_capabilities_;
}

void ExecutionCapabilities::ArenaDtor(void* object) {
  ExecutionCapabilities* _this = reinterpret_cast< ExecutionCapabilities* >(object);
  (void)_this;
}
void ExecutionCapabilities::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExecutionCapabilities::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ExecutionCapabilities::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.ExecutionCapabilities)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  supported_node_properties_.Clear();
  if (GetArena() == nullptr && execution_priority_capabilities_ != nullptr) {
    delete execution_priority_capabilities_;
  }
  execution_priority_capabilities_ = nullptr;
  ::memset(&digest_function_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exec_enabled_) -
      reinterpret_cast<char*>(&digest_function_)) + sizeof(exec_enabled_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecutionCapabilities::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .build.bazel.remote.execution.v2.DigestFunction.Value digest_function = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_digest_function(static_cast<::build::bazel::remote::execution::v2::DigestFunction_Value>(val));
        } else goto handle_unusual;
        continue;
      // bool exec_enabled = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          exec_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .build.bazel.remote.execution.v2.PriorityCapabilities execution_priority_capabilities = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_execution_priority_capabilities(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string supported_node_properties = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_supported_node_properties();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.ExecutionCapabilities.supported_node_properties"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExecutionCapabilities::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.ExecutionCapabilities)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .build.bazel.remote.execution.v2.DigestFunction.Value digest_function = 1;
  if (this->digest_function() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_digest_function(), target);
  }

  // bool exec_enabled = 2;
  if (this->exec_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_exec_enabled(), target);
  }

  // .build.bazel.remote.execution.v2.PriorityCapabilities execution_priority_capabilities = 3;
  if (this->has_execution_priority_capabilities()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::execution_priority_capabilities(this), target, stream);
  }

  // repeated string supported_node_properties = 4;
  for (int i = 0, n = this->_internal_supported_node_properties_size(); i < n; i++) {
    const auto& s = this->_internal_supported_node_properties(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.ExecutionCapabilities.supported_node_properties");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.ExecutionCapabilities)
  return target;
}

size_t ExecutionCapabilities::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.ExecutionCapabilities)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string supported_node_properties = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(supported_node_properties_.size());
  for (int i = 0, n = supported_node_properties_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      supported_node_properties_.Get(i));
  }

  // .build.bazel.remote.execution.v2.PriorityCapabilities execution_priority_capabilities = 3;
  if (this->has_execution_priority_capabilities()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *execution_priority_capabilities_);
  }

  // .build.bazel.remote.execution.v2.DigestFunction.Value digest_function = 1;
  if (this->digest_function() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_digest_function());
  }

  // bool exec_enabled = 2;
  if (this->exec_enabled() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecutionCapabilities::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.ExecutionCapabilities)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutionCapabilities* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExecutionCapabilities>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.ExecutionCapabilities)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.ExecutionCapabilities)
    MergeFrom(*source);
  }
}

void ExecutionCapabilities::MergeFrom(const ExecutionCapabilities& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.ExecutionCapabilities)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  supported_node_properties_.MergeFrom(from.supported_node_properties_);
  if (from.has_execution_priority_capabilities()) {
    _internal_mutable_execution_priority_capabilities()->::build::bazel::remote::execution::v2::PriorityCapabilities::MergeFrom(from._internal_execution_priority_capabilities());
  }
  if (from.digest_function() != 0) {
    _internal_set_digest_function(from._internal_digest_function());
  }
  if (from.exec_enabled() != 0) {
    _internal_set_exec_enabled(from._internal_exec_enabled());
  }
}

void ExecutionCapabilities::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.ExecutionCapabilities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionCapabilities::CopyFrom(const ExecutionCapabilities& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.ExecutionCapabilities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionCapabilities::IsInitialized() const {
  return true;
}

void ExecutionCapabilities::InternalSwap(ExecutionCapabilities* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  supported_node_properties_.InternalSwap(&other->supported_node_properties_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExecutionCapabilities, exec_enabled_)
      + sizeof(ExecutionCapabilities::exec_enabled_)
      - PROTOBUF_FIELD_OFFSET(ExecutionCapabilities, execution_priority_capabilities_)>(
          reinterpret_cast<char*>(&execution_priority_capabilities_),
          reinterpret_cast<char*>(&other->execution_priority_capabilities_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecutionCapabilities::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ToolDetails::_Internal {
 public:
};

ToolDetails::ToolDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.ToolDetails)
}
ToolDetails::ToolDetails(const ToolDetails& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tool_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tool_name().empty()) {
    tool_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tool_name(), 
      GetArena());
  }
  tool_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tool_version().empty()) {
    tool_version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tool_version(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.ToolDetails)
}

void ToolDetails::SharedCtor() {
tool_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
tool_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ToolDetails::~ToolDetails() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.ToolDetails)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ToolDetails::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  tool_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tool_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ToolDetails::ArenaDtor(void* object) {
  ToolDetails* _this = reinterpret_cast< ToolDetails* >(object);
  (void)_this;
}
void ToolDetails::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ToolDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ToolDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.ToolDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tool_name_.ClearToEmpty();
  tool_version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ToolDetails::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string tool_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_tool_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.ToolDetails.tool_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string tool_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_tool_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.ToolDetails.tool_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ToolDetails::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.ToolDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tool_name = 1;
  if (this->tool_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tool_name().data(), static_cast<int>(this->_internal_tool_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.ToolDetails.tool_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tool_name(), target);
  }

  // string tool_version = 2;
  if (this->tool_version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tool_version().data(), static_cast<int>(this->_internal_tool_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.ToolDetails.tool_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_tool_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.ToolDetails)
  return target;
}

size_t ToolDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.ToolDetails)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tool_name = 1;
  if (this->tool_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tool_name());
  }

  // string tool_version = 2;
  if (this->tool_version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tool_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ToolDetails::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.ToolDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const ToolDetails* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ToolDetails>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.ToolDetails)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.ToolDetails)
    MergeFrom(*source);
  }
}

void ToolDetails::MergeFrom(const ToolDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.ToolDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tool_name().size() > 0) {
    _internal_set_tool_name(from._internal_tool_name());
  }
  if (from.tool_version().size() > 0) {
    _internal_set_tool_version(from._internal_tool_version());
  }
}

void ToolDetails::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.ToolDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToolDetails::CopyFrom(const ToolDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.ToolDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToolDetails::IsInitialized() const {
  return true;
}

void ToolDetails::InternalSwap(ToolDetails* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tool_name_.Swap(&other->tool_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tool_version_.Swap(&other->tool_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ToolDetails::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RequestMetadata::_Internal {
 public:
  static const ::build::bazel::remote::execution::v2::ToolDetails& tool_details(const RequestMetadata* msg);
};

const ::build::bazel::remote::execution::v2::ToolDetails&
RequestMetadata::_Internal::tool_details(const RequestMetadata* msg) {
  return *msg->tool_details_;
}
RequestMetadata::RequestMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:build.bazel.remote.execution.v2.RequestMetadata)
}
RequestMetadata::RequestMetadata(const RequestMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  action_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action_id().empty()) {
    action_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_action_id(), 
      GetArena());
  }
  tool_invocation_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tool_invocation_id().empty()) {
    tool_invocation_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tool_invocation_id(), 
      GetArena());
  }
  correlated_invocations_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_correlated_invocations_id().empty()) {
    correlated_invocations_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_correlated_invocations_id(), 
      GetArena());
  }
  if (from._internal_has_tool_details()) {
    tool_details_ = new ::build::bazel::remote::execution::v2::ToolDetails(*from.tool_details_);
  } else {
    tool_details_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:build.bazel.remote.execution.v2.RequestMetadata)
}

void RequestMetadata::SharedCtor() {
action_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
tool_invocation_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
correlated_invocations_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
tool_details_ = nullptr;
}

RequestMetadata::~RequestMetadata() {
  // @@protoc_insertion_point(destructor:build.bazel.remote.execution.v2.RequestMetadata)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RequestMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  action_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tool_invocation_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  correlated_invocations_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete tool_details_;
}

void RequestMetadata::ArenaDtor(void* object) {
  RequestMetadata* _this = reinterpret_cast< RequestMetadata* >(object);
  (void)_this;
}
void RequestMetadata::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RequestMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RequestMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:build.bazel.remote.execution.v2.RequestMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_id_.ClearToEmpty();
  tool_invocation_id_.ClearToEmpty();
  correlated_invocations_id_.ClearToEmpty();
  if (GetArena() == nullptr && tool_details_ != nullptr) {
    delete tool_details_;
  }
  tool_details_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .build.bazel.remote.execution.v2.ToolDetails tool_details = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_tool_details(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string action_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_action_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.RequestMetadata.action_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string tool_invocation_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_tool_invocation_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.RequestMetadata.tool_invocation_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string correlated_invocations_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_correlated_invocations_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "build.bazel.remote.execution.v2.RequestMetadata.correlated_invocations_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestMetadata::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:build.bazel.remote.execution.v2.RequestMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .build.bazel.remote.execution.v2.ToolDetails tool_details = 1;
  if (this->has_tool_details()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::tool_details(this), target, stream);
  }

  // string action_id = 2;
  if (this->action_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action_id().data(), static_cast<int>(this->_internal_action_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.RequestMetadata.action_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_action_id(), target);
  }

  // string tool_invocation_id = 3;
  if (this->tool_invocation_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tool_invocation_id().data(), static_cast<int>(this->_internal_tool_invocation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.RequestMetadata.tool_invocation_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_tool_invocation_id(), target);
  }

  // string correlated_invocations_id = 4;
  if (this->correlated_invocations_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_correlated_invocations_id().data(), static_cast<int>(this->_internal_correlated_invocations_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "build.bazel.remote.execution.v2.RequestMetadata.correlated_invocations_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_correlated_invocations_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:build.bazel.remote.execution.v2.RequestMetadata)
  return target;
}

size_t RequestMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:build.bazel.remote.execution.v2.RequestMetadata)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string action_id = 2;
  if (this->action_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action_id());
  }

  // string tool_invocation_id = 3;
  if (this->tool_invocation_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tool_invocation_id());
  }

  // string correlated_invocations_id = 4;
  if (this->correlated_invocations_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_correlated_invocations_id());
  }

  // .build.bazel.remote.execution.v2.ToolDetails tool_details = 1;
  if (this->has_tool_details()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *tool_details_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestMetadata::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:build.bazel.remote.execution.v2.RequestMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestMetadata* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:build.bazel.remote.execution.v2.RequestMetadata)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:build.bazel.remote.execution.v2.RequestMetadata)
    MergeFrom(*source);
  }
}

void RequestMetadata::MergeFrom(const RequestMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:build.bazel.remote.execution.v2.RequestMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action_id().size() > 0) {
    _internal_set_action_id(from._internal_action_id());
  }
  if (from.tool_invocation_id().size() > 0) {
    _internal_set_tool_invocation_id(from._internal_tool_invocation_id());
  }
  if (from.correlated_invocations_id().size() > 0) {
    _internal_set_correlated_invocations_id(from._internal_correlated_invocations_id());
  }
  if (from.has_tool_details()) {
    _internal_mutable_tool_details()->::build::bazel::remote::execution::v2::ToolDetails::MergeFrom(from._internal_tool_details());
  }
}

void RequestMetadata::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:build.bazel.remote.execution.v2.RequestMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestMetadata::CopyFrom(const RequestMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:build.bazel.remote.execution.v2.RequestMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestMetadata::IsInitialized() const {
  return true;
}

void RequestMetadata::InternalSwap(RequestMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  action_id_.Swap(&other->action_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tool_invocation_id_.Swap(&other->tool_invocation_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  correlated_invocations_id_.Swap(&other->correlated_invocations_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(tool_details_, other->tool_details_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestMetadata::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace execution
}  // namespace remote
}  // namespace bazel
}  // namespace build
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::Action* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::Action >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::Action >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::Command_EnvironmentVariable* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::Command_EnvironmentVariable >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::Command_EnvironmentVariable >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::Command* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::Command >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::Command >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::Platform_Property* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::Platform_Property >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::Platform_Property >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::Platform* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::Platform >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::Platform >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::Directory* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::Directory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::Directory >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::NodeProperty* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::NodeProperty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::NodeProperty >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::NodeProperties* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::NodeProperties >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::NodeProperties >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::FileNode* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::FileNode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::FileNode >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::DirectoryNode* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::DirectoryNode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::DirectoryNode >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::SymlinkNode* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::SymlinkNode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::SymlinkNode >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::Digest* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::Digest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::Digest >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::ExecutedActionMetadata* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::ExecutedActionMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::ExecutedActionMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::ActionResult* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::ActionResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::ActionResult >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::OutputFile* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::OutputFile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::OutputFile >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::Tree* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::Tree >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::Tree >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::OutputDirectory* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::OutputDirectory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::OutputDirectory >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::OutputSymlink* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::OutputSymlink >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::OutputSymlink >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::ExecutionPolicy* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::ExecutionPolicy >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::ExecutionPolicy >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::ResultsCachePolicy* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::ResultsCachePolicy >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::ResultsCachePolicy >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::ExecuteRequest* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::ExecuteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::ExecuteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::LogFile* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::LogFile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::LogFile >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::ExecuteResponse_ServerLogsEntry_DoNotUse* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::ExecuteResponse_ServerLogsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::ExecuteResponse_ServerLogsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::ExecuteResponse* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::ExecuteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::ExecuteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::ExecutionStage* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::ExecutionStage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::ExecutionStage >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::ExecuteOperationMetadata* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::ExecuteOperationMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::ExecuteOperationMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::WaitExecutionRequest* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::WaitExecutionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::WaitExecutionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::GetActionResultRequest* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::GetActionResultRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::GetActionResultRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::UpdateActionResultRequest* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::UpdateActionResultRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::UpdateActionResultRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::FindMissingBlobsRequest* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::FindMissingBlobsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::FindMissingBlobsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::FindMissingBlobsResponse* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::FindMissingBlobsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::FindMissingBlobsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::BatchUpdateBlobsRequest_Request* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::BatchUpdateBlobsRequest_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::BatchUpdateBlobsRequest_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::BatchUpdateBlobsRequest* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::BatchUpdateBlobsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::BatchUpdateBlobsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::BatchUpdateBlobsResponse_Response* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::BatchUpdateBlobsResponse_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::BatchUpdateBlobsResponse_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::BatchUpdateBlobsResponse* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::BatchUpdateBlobsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::BatchUpdateBlobsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::BatchReadBlobsRequest* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::BatchReadBlobsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::BatchReadBlobsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::BatchReadBlobsResponse_Response* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::BatchReadBlobsResponse_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::BatchReadBlobsResponse_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::BatchReadBlobsResponse* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::BatchReadBlobsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::BatchReadBlobsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::GetTreeRequest* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::GetTreeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::GetTreeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::GetTreeResponse* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::GetTreeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::GetTreeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::GetCapabilitiesRequest* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::GetCapabilitiesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::GetCapabilitiesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::ServerCapabilities* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::ServerCapabilities >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::ServerCapabilities >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::DigestFunction* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::DigestFunction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::DigestFunction >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::ActionCacheUpdateCapabilities* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::ActionCacheUpdateCapabilities >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::ActionCacheUpdateCapabilities >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::PriorityCapabilities_PriorityRange* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::PriorityCapabilities_PriorityRange >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::PriorityCapabilities_PriorityRange >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::PriorityCapabilities* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::PriorityCapabilities >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::PriorityCapabilities >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::SymlinkAbsolutePathStrategy* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::SymlinkAbsolutePathStrategy >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::SymlinkAbsolutePathStrategy >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::CacheCapabilities* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::CacheCapabilities >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::CacheCapabilities >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::ExecutionCapabilities* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::ExecutionCapabilities >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::ExecutionCapabilities >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::ToolDetails* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::ToolDetails >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::ToolDetails >(arena);
}
template<> PROTOBUF_NOINLINE ::build::bazel::remote::execution::v2::RequestMetadata* Arena::CreateMaybeMessage< ::build::bazel::remote::execution::v2::RequestMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::build::bazel::remote::execution::v2::RequestMetadata >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

UE_POP_MACRO("TEXT")
THIRD_PARTY_INCLUDES_END
